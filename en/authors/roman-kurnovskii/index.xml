<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Roman Kurnovskii</title><link>https://romankurnovskii.com/en/authors/roman-kurnovskii/</link><description>Recent content on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 Personal page</copyright><atom:link href="https://romankurnovskii.com/en/authors/roman-kurnovskii/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Two Sum</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/1/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/1/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/two-sum/">LeetCode problem&lt;/a>&lt;/p>
&lt;h2 id="problem-statement">Problem Statement&lt;/h2>
&lt;p>In this problem, you&amp;rsquo;re given an array of integers &lt;code>nums&lt;/code> and an integer &lt;code>target&lt;/code>. Your task is to find the indices of two numbers in the array that add up to the target. The input array is guaranteed to have exactly one solution, and you can&amp;rsquo;t use the same element twice. The indices can be returned in any order.&lt;/p>
&lt;h2 id="naive-solution">Naive Solution&lt;/h2>
&lt;p>A naive solution would involve using two nested loops to iterate through each pair of elements in the array and check if their sum is equal to the target. This approach has a time complexity of O(n^2), where n is the length of the input array. However, there is a more efficient solution that uses a hash table and has a time complexity of O(n).&lt;/p>
&lt;h2 id="hints--tips">Hints &amp;amp; Tips&lt;/h2>
&lt;p>A hash table (or dictionary in Python) is a data structure that allows you to store and retrieve values in O(1) time on average. It uses key-value pairs, where each key is unique and maps to a specific value.&lt;/p>
&lt;h2 id="approach">Approach&lt;/h2>
&lt;p>To solve this problem efficiently, we&amp;rsquo;ll use a hash table to store the indices of the numbers we&amp;rsquo;ve seen so far. For each number, we&amp;rsquo;ll check if the difference between the target and the current number is already in the hash table. If it is, we&amp;rsquo;ve found the two numbers that add up to the target, and we&amp;rsquo;ll return their indices.&lt;/p>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;ol>
&lt;li>Initialize an empty hash table to store the indices of the numbers we&amp;rsquo;ve seen so far.&lt;/li>
&lt;li>Iterate through the input array, for each number:
&lt;ol>
&lt;li>Calculate the difference between the target and the current number.&lt;/li>
&lt;li>Check if the difference is already in the hash table. If it is, return the indices of the current number and the number that corresponds to the difference.&lt;/li>
&lt;li>If the difference is not in the hash table, add the current number and its index to the hash table.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Since the problem guarantees that there is always a solution, we&amp;rsquo;ll always find the two numbers that add up to the target.&lt;/li>
&lt;/ol>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>Here&amp;rsquo;s the Python code to implement this approach:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">typing&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> List
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">twoSum&lt;/span>(nums: List[&lt;span style="color:#007020">int&lt;/span>], target: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seen &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Iterate through the input array&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i, num &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">enumerate&lt;/span>(nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Calculate the difference between the target and the current number&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> diff &lt;span style="color:#666">=&lt;/span> target &lt;span style="color:#666">-&lt;/span> num
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Check if the difference is already in the hash table&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> diff &lt;span style="color:#007020;font-weight:bold">in&lt;/span> seen:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Return the indices of the current number and the number that corresponds to the difference&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> [seen[diff], i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Add the current number and its index to the hash table&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seen[num] &lt;span style="color:#666">=&lt;/span> i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Algorithms 101</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/</guid><description>&lt;h2 id="smart--okr">Smart / OKR&lt;/h2>
&lt;p>What is &lt;a href="https://www.atlassian.com/blog/productivity/how-to-write-smart-goals">SMART&lt;/a> and &lt;a href="https://learn.microsoft.com/en-us/viva/goals/get-to-know-okrs">OKR&lt;/a>&lt;/p>
&lt;h3 id="smart">SMART&lt;/h3>
&lt;p>&lt;span style="font-size:1.2em; color: #427039">S&lt;/span>pecific:&lt;/p>
&lt;ul>
&lt;li>Goal: prepare for contests. Pass 50-&amp;gt;75-&amp;gt;100% of contest problems in time
&lt;ul>
&lt;li>Improve python skills.&lt;/li>
&lt;li>Improve understanding of common algorithms and data structures.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size:1.2em; color: #427039">M&lt;/span>easurable: &lt;em>How will we know that change has occurred?&lt;/em>&lt;/p>
&lt;ul>
&lt;li>solve top 100 questions that cover common algorithms and data structures.&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size:1.2em; color: #427039">A&lt;/span>chievable:&lt;/p>
&lt;ul>
&lt;li>participate in &lt;a href="https://leetcode.com/contest/">LeetCode contest&lt;/a>, solve 50%+ problems in time.&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size:1.2em; color: #427039">R&lt;/span>elevant: &lt;em>Is it possible to achieve this objective?&lt;/em>&lt;/p>
&lt;ul>
&lt;li>achievable with practice.&lt;/li>
&lt;li>improve skills in solving business problems more efficiently, quickly, understandable.&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size:1.2em; color: #427039">T&lt;/span>ime-Bound: &lt;em>When will this objective be accomplished?&lt;/em>&lt;/p>
&lt;ul>
&lt;li>1-2 hours a day, 5-6 days a week, ~5 problems a week&lt;/li>
&lt;li>first contest after 20% problems pass.&lt;/li>
&lt;li>20 weeks from start.&lt;/li>
&lt;li>Summarize results on 28 Feb 2023&lt;/li>
&lt;/ul>
&lt;h3 id="okr--roadmap">OKR + roadmap&lt;/h3>
&lt;ul>
&lt;li>pass 20 problems: (4 weeks, 12 Nov 2022)
&lt;ul>
&lt;li>Ability to define algorithm/idea of solving problem.&lt;/li>
&lt;li>participate in contest, solve minimum 1-2 problems in time.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>next participate in contest/solve contest tasks &lt;strong>every week&lt;/strong>:
&lt;ul>
&lt;li>solve minimum 1-2 problems.&lt;/li>
&lt;li>fix results, correct next goal keys if I go ahead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pass 40 problems: (10 Dec 2022)
&lt;ul>
&lt;li>participate in contest, solve minimum 2 problems in time.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>after 50 problems have a rest one week. (24 Dec 2022)&lt;/li>
&lt;li>pass 70 problems: (28 Jan 2023)
&lt;ul>
&lt;li>solve next 10 medium problems without hints effectively.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>80-100 problems: (28 Feb 2023)
&lt;ul>
&lt;li>have understanding in which topics I have gaps.&lt;/li>
&lt;li>emphasize problem solving on these topics in addition to the tasks on the list.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sum up results (28 Feb 2023)&lt;/li>
&lt;/ul>
&lt;h2 id="solving-plan">Solving plan&lt;/h2>
&lt;ol>
&lt;li>open task&lt;/li>
&lt;li>read&lt;/li>
&lt;li>first thoughts&lt;/li>
&lt;li>spend &lt;del>15&lt;/del>10 minutes on coding/drawing/understanding algo&lt;/li>
&lt;li>finished or not, read hints&lt;/li>
&lt;li>spend 10 minutes on fixing if needed&lt;/li>
&lt;li>read solution, discussions&lt;/li>
&lt;li>if there is a new algo, read theory the rest of first hour, practice&lt;/li>
&lt;li>code from scratch with comments/code snippets&lt;/li>
&lt;li>repeat 7-9 until tests pass&lt;/li>
&lt;/ol>
&lt;h2 id="prepare-environment">Prepare environment&lt;/h2>
&lt;ul>
&lt;li>vscode&lt;/li>
&lt;/ul>
&lt;p>to observe any change in python use &lt;strong>nodemon&lt;/strong> npm package&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm i -g nodemon
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>run python file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nodemon --exec python p.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="template">Template&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">typing&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> List
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">twoSum&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>], target: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nums &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>target &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s &lt;span style="color:#666">=&lt;/span> Solution()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#666">=&lt;/span> s&lt;span style="color:#666">.&lt;/span>twoSum(nums, target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(res)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="problems-list">Problems list&lt;/h2>
&lt;p>&lt;a href="https://leetcode.com/problem-list/top-interview-questions/">leetcode Top 100 Interview Questions&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>List of problems cis mutable. Will take first not solved until all first top 100 problems are solved. It can take + ~5-15 problems&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://romankurnovskii.com/en/tracks/algorithms-101/plan/">Problems order&lt;/a>&lt;/p>
&lt;p>&lt;strong>More info:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/spreadsheets/d/1Axa5A3HrAEJx_HSOwPs1zStolnPJPmKAfIYxGTLPtQc/edit#gid=1436140231">Top MAANG interview questions 2022&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tutorial-subscriptions">Tutorial subscriptions&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.enjoyalgorithms.com/data-structures-and-algorithms-course/">https://www.enjoyalgorithms.com/data-structures-and-algorithms-course/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scaler.com/topics/data-structures/">https://www.scaler.com/topics/data-structures/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/subscribe/">https://leetcode.com/subscribe/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://algo.monster/subscribe">https://algo.monster/subscribe&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.algoexpert.io/purchase#algoexpert">https://www.algoexpert.io/purchase#algoexpert&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://opendsa-server.cs.vt.edu/OpenDSA/Books/CS4104/html/">Senior Algorithms | Interactive tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://canvas.instructure.com/courses/3330793/assignments/24440259?module_item_id=52268669">01.01 Data Structures and Algorithms | Interactive&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://clist.by/resources/">Contests&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Create S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-s3-bucket/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-s3-bucket/</guid><description>&lt;h2 id="creating-an-amazon-s3-bucket">Creating an Amazon S3 Bucket&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>You can create an Amazon S3 bucket using the AWS Management Console. As with many other AWS services, you can use the AWS API or CLI (command-line interface) as well.&lt;/p>
&lt;p>In this lab step, you will create a new Amazon S3 bucket.&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;ol>
&lt;li>In the AWS Management Console search bar, enter &lt;em>S3&lt;/em>, and click the &lt;strong>S3&lt;/strong> result under &lt;strong>Services&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/01.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>You will be placed in the S3 console.&lt;/p>
&lt;ol start="2">
&lt;li>From the S3 console, click the orange &lt;strong>Create Bucket&lt;/strong> button:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/buckets.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>Enter a unique &lt;strong>Bucket name&lt;/strong> on the &lt;strong>Name and region&lt;/strong> screen of the wizard:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/blobid0-49c0e67d-62ee-4e8c-8585-239193b5f81e.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Region&lt;/strong>: US West (Oregon) (This should be set for you. If not, please select this region.)&lt;/li>
&lt;/ul>
&lt;p>**&lt;em>Important!&lt;/em>**Bucket names must be globally unique, regardless of the AWS region in which you create the bucket. Buckets must also be DNS-compliant.&lt;/p>
&lt;p>The rules for DNS-compliant bucket names are:&lt;/p>
&lt;ul>
&lt;li>Bucket names must be at least 3 and no more than 63 characters long.&lt;/li>
&lt;li>Bucket names can contain lowercase letters, numbers, periods, and/or hyphens. Each label must start and end with a lowercase letter or a number.&lt;/li>
&lt;li>Bucket names must not be formatted as an IP address (for example, 192.168.1.1).&lt;/li>
&lt;/ul>
&lt;p>The following examples are valid bucket names: calabs-bucket-1, cloudacademybucket , cloudacademy.bucket , calabs.1 or ca-labs-bucket.&lt;/p>
&lt;p>&lt;em>Troubleshooting Tip&lt;/em>: If you receive an error because your bucket name is not unique, append a unique number to the bucket name in order to guarantee its uniqueness:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/image-e4e4ddd3-cb2d-45a3-8fc1-02d7cea49ecf.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>For example, change &amp;ldquo;calabs-bucket&amp;rdquo; to &amp;ldquo;calabs-bucket-1&amp;rdquo; (or a unique number/character string) and try again.&lt;/p>
&lt;ol start="4">
&lt;li>Leave the &lt;strong>Block public access (bucket settings)&lt;/strong> at the default values:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/blobid0-76f03294-d671-4266-a497-e310bfc8c8fc.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>No changes are needed. This is where you can set public access permissions.&lt;/p>
&lt;p>5. Click on &lt;strong>Create bucket:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/image-20220228115141-2-3bac12a1-3fb8-4b27-8e75-b6a2ea93b730.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>A page with a table listing buckets will load and you will see a green notification that your bucket was created successfully.&lt;/p>
&lt;ol start="6">
&lt;li>In the &lt;strong>Buckets&lt;/strong> table, click the name of your bucket in the &lt;strong>Name&lt;/strong> column:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/image-20220228115536-3-5843c7d0-1088-4ba1-bf8d-2663810ca62b.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>A page will load with a row of tabs at the top.&lt;/p>
&lt;ol start="7">
&lt;li>To see details and options for your bucket, click on the &lt;strong>Properties&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/image-20220228115611-4-de3d80bb-7e11-4003-bfd0-a59d3f95f76b.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>This page allows you to configure your Amazon S3 bucket in many different ways. No changes are needed in this lab at this time.&lt;/p>
&lt;p>Feel free to look at the other tabs and see the configuration options that are available.&lt;/p></description></item><item><title>AWS Certified Developer (DVA-C01 -> DVA-C02)</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/</guid><description>&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;ol>
&lt;li>Passed exam in one month.&lt;/li>
&lt;li>Created an &lt;a href="https://www.cloud-exam-prepare.com/">app with questions and progress&lt;/a> that helped me a lot
&lt;p class="md__image">
&lt;img
src="images/AWS-Certified-Developer-Associate-certificate.jpg"
id="zoom-default"
alt="LQVKGDT16BF1Q6CX"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="note">Note&lt;/h2>
&lt;blockquote>
&lt;p>The AWS Certified Developer - Associate exam is changing February 28, 2023. The last date to take the current exam is February 27, 2023.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>To keep the docs up to date I will add new and latest information.&lt;/p>
&lt;/blockquote>
&lt;h2 id="dva-c01-vs-dva-c02">DVA-C01 vs DVA-C02&lt;/h2>
&lt;ul>
&lt;li>new domain: &lt;strong>Domain 3: Deployment&lt;/strong>
&lt;ul>
&lt;li>focus will be on testing and deploying your code into different environments including development, test, and production environments. You’ll need to know how CloudFormation, the AWS Cloud Development Kit (CDK), and AWS SAM are used to deploy applications.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Domains 4 and 5 (“Refactoring” along with “Monitoring and Troubleshooting”) from the DVA-C01 exam guide have been consolidated into Domain 4 (“Troubleshooting and Optimization”) in the DVA-C02 exam guide&lt;/li>
&lt;li>Plus 2% questions in &lt;strong>Development with AWS Services&lt;/strong> domain&lt;/li>
&lt;/ul>
&lt;p>Test questions for DVA-C02 - &lt;a href="https://explore.skillbuilder.aws/learn/course/external/view/elearning/13757/aws-certified-developer-associate-official-question-set-dva-c02-english">here&lt;/a> and &lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Sample-Questions_C02.pdf">here&lt;/a>&lt;/p>
&lt;h2 id="criteria">Criteria&lt;/h2>
&lt;p>In order to pass the exam, you must score more than 720/1000 (unspecified) points. Criterion will be a minimum threshold of &lt;strong>75/100%&lt;/strong>, unless conditions change in preparation.&lt;/p>
&lt;h3 id="study-plan">Study Plan&lt;/h3>
&lt;ol>
&lt;li>Find out what the exam requirements are&lt;/li>
&lt;li>Have a list of topics that will be on the exam&lt;/li>
&lt;li>Practice each service for comprehension&lt;/li>
&lt;li>Read extra theory that will not be covered during practice&lt;/li>
&lt;li>Go through the test general questions&lt;/li>
&lt;li>Repeat 3-5 repeat until the result of &lt;em>failed&lt;/em> block greater than 80 points&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Entrypoint:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/certification/certified-developer-associate/">AWS Certified Developer Exam Information&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="prepare">Prepare&lt;/h2>
&lt;p>The AWS website has:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Exam-Guide.pdf">Exam Preparation Guide DVA-C01&lt;/a>&lt;/li>
&lt;li>&lt;em>From 27 Feb 2023&lt;/em> &lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Exam-Guide_C02.pdf">Exam Preparation Guide DVA-C02&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>To pass the exam, you need to know certain services from the 4 domains: &lt;code>Development with AWS Services&lt;/code>, &lt;code>Security&lt;/code>, &lt;code>Deployment&lt;/code>, &lt;del>&lt;code>Refactoring&lt;/code>&lt;/del>, &lt;code>Monitoring and Troubleshooting&lt;/code>&lt;/p>
&lt;h3 id="list-of-services-on-the-exam">List of services on the exam&lt;/h3>
&lt;blockquote>
&lt;p>&lt;del>Version 2.1 DVA-C01&lt;/del>
Version 1.0 DVA-C02&lt;/p>
&lt;/blockquote>
&lt;p>Analytics:&lt;/p>
&lt;ul>
&lt;li>Amazon Athena (new in DVA-C02)&lt;/li>
&lt;li>Amazon OpenSearch Service (Amazon Elasticsearch Service)&lt;/li>
&lt;li>Amazon Kinesis&lt;/li>
&lt;/ul>
&lt;p>Application Integration:&lt;/p>
&lt;ul>
&lt;li>AWS AppSync (new in DVA-C02)&lt;/li>
&lt;li>Amazon EventBridge (Amazon CloudWatch Events)&lt;/li>
&lt;li>Amazon Simple Notification Service (Amazon SNS)&lt;/li>
&lt;li>Amazon Simple Queue Service (Amazon SQS)&lt;/li>
&lt;li>AWS Step Functions&lt;/li>
&lt;/ul>
&lt;p>Compute:&lt;/p>
&lt;ul>
&lt;li>Amazon EC2&lt;/li>
&lt;li>AWS Elastic Beanstalk&lt;/li>
&lt;li>AWS Lambda&lt;/li>
&lt;li>AWS Serverless Application Model (AWS SAM) (new in DVA-C02)&lt;/li>
&lt;/ul>
&lt;p>Containers:&lt;/p>
&lt;ul>
&lt;li>AWS Copilot (new in DVA-C02)&lt;/li>
&lt;li>Amazon Elastic Container Registry (Amazon ECR)&lt;/li>
&lt;li>Amazon Elastic Container Service (Amazon ECS)&lt;/li>
&lt;li>Amazon Elastic Kubernetes Services (Amazon EKS)&lt;/li>
&lt;/ul>
&lt;p>Database:&lt;/p>
&lt;ul>
&lt;li>Amazon Aurora (new in DVA-C02)&lt;/li>
&lt;li>Amazon DynamoDB&lt;/li>
&lt;li>Amazon ElastiCache&lt;/li>
&lt;li>Amazon MemoryDB for Redis (new in DVA-C02)&lt;/li>
&lt;li>Amazon RDS&lt;/li>
&lt;/ul>
&lt;p>Developer Tools:&lt;/p>
&lt;ul>
&lt;li>AWS Amplify (new in DVA-C02)&lt;/li>
&lt;li>AWS Cloud9 (new in DVA-C02)&lt;/li>
&lt;li>AWS CloudShell (new in DVA-C02)&lt;/li>
&lt;li>AWS CodeArtifact&lt;/li>
&lt;li>AWS CodeBuild&lt;/li>
&lt;li>AWS CodeCommit&lt;/li>
&lt;li>AWS CodeDeploy&lt;/li>
&lt;li>Amazon CodeGuru&lt;/li>
&lt;li>AWS CodePipeline&lt;/li>
&lt;li>AWS CodeStar&lt;/li>
&lt;li>AWS Fault Injection Simulator&lt;/li>
&lt;li>AWS X-Ray&lt;/li>
&lt;/ul>
&lt;p>Management and Governance:&lt;/p>
&lt;ul>
&lt;li>AWS AppConfig (new in DVA-C02)&lt;/li>
&lt;li>AWS Cloud Development Kit (AWS CDK) (new in DVA-C02)&lt;/li>
&lt;li>AWS CloudFormation&lt;/li>
&lt;li>AWS CloudTrail (new in DVA-C02)&lt;/li>
&lt;li>Amazon CloudWatch&lt;/li>
&lt;li>Amazon CloudWatch Logs (new in DVA-C02)&lt;/li>
&lt;li>AWS Command Line Interface (AWS CLI) (new in DVA-C02)&lt;/li>
&lt;li>AWS Systems Manager (new in DVA-C02)&lt;/li>
&lt;/ul>
&lt;p>Networking and Content Delivery:&lt;/p>
&lt;ul>
&lt;li>Amazon API Gateway&lt;/li>
&lt;li>Amazon CloudFront&lt;/li>
&lt;li>Elastic Load Balancing&lt;/li>
&lt;li>Amazon Route 53 (new in DVA-C02)&lt;/li>
&lt;li>Amazon VPC (new in DVA-C02)&lt;/li>
&lt;/ul>
&lt;p>Security, Identity, and Compliance:&lt;/p>
&lt;ul>
&lt;li>AWS Certificate Manager (ACM) (new in DVA-C02)&lt;/li>
&lt;li>AWS Certificate Manager Private Certificate Authority (new in DVA-C02)&lt;/li>
&lt;li>Amazon Cognito&lt;/li>
&lt;li>AWS Identity and Access Management (IAM)&lt;/li>
&lt;li>AWS Key Management Service (AWS KMS)&lt;/li>
&lt;li>AWS Secrets Manager (new in DVA-C02)&lt;/li>
&lt;li>AWS Security Token Service (AWS STS) (new in DVA-C02)&lt;/li>
&lt;li>AWS WAF (new in DVA-C02)&lt;/li>
&lt;/ul>
&lt;p>Storage:&lt;/p>
&lt;ul>
&lt;li>Amazon Elastic Block Store (Amazon EBS) (new in DVA-C02)&lt;/li>
&lt;li>Amazon Elastic File System (Amazon EFS) (new in DVA-C02)&lt;/li>
&lt;li>Amazon S3&lt;/li>
&lt;li>Amazon S3 Glacier (new in DVA-C02)&lt;/li>
&lt;/ul>
&lt;h3 id="training-plan">Training plan&lt;/h3>
&lt;p>Opened a training plan for any tutorial to understand where to start learning. Have chosen &lt;strong>cloudacademy&lt;/strong> service (but for example FreeCodeCamp has a free course with content).&lt;/p>
&lt;p>Another option is to use free &lt;a href="https://workshops.aws/">AWS Workshops&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://cloudacademy.com/learning-paths/aws-developer-associate-dva-c01-certification-preparation-4364/">AWS Developer - Associate (DVA-C01) Certification Preparation&lt;/a>&lt;/p>
&lt;p>Don&amp;rsquo;t see coverage of the following services, so I add them to the block when related topics are covered:&lt;/p>
&lt;p>&lt;strong>Analytics&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Amazon Elasticsearch Service (Amazon ES) -&amp;gt; OpenSearch Service&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Developer Tools&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>AWS CodeArtifact&lt;/li>
&lt;li>AWS Fault Injection Simulator&lt;/li>
&lt;/ul>
&lt;h2 id="my-roadmap">My roadmap&lt;/h2>
&lt;p>The following is my roadmap for the study. There may be adjustments.&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/iam/">AWS Identity and Access Management (IAM)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ec2/">Amazon EC2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticbeanstalk/">AWS Elastic Beanstalk&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/lambda/">AWS Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/">Amazon S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/dynamodb/">Amazon DynamoDB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticache/">Amazon ElastiCache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/rds/">Amazon RDS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/api-gateway/">Amazon API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudfront/">Amazon CloudFront&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticloadbalancing/">Elastic Load Balancing (ELB)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kinesis/">Amazon Kinesis&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/opensearch-service/">Amazon OpenSearch Service (Amazon Elasticsearch Service)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudwatch/">Amazon CloudWatch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudformation/">AWS CloudFormation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codecommit/">AWS CodeCommit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codedeploy/">AWS CodeDeploy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codebuild/">AWS CodeBuild&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codepipeline/">AWS CodePipeline&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeguru/">Amazon CodeGuru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codestar/">AWS CodeStar&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeartifact/">AWS CodeArtifact&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/xray/">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fis/">AWS Fault Injection Simulator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecr/">Amazon Elastic Container Registry (Amazon ECR)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecs/">Amazon Elastic Container Service (Amazon ECS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fargate/">AWS Fargate&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eks/">Amazon Elastic Kubernetes Services (Amazon EKS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cognito/">Amazon Cognito&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/route53/">Route 53&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kms/">AWS Key Management Service (AWS KMS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eventbridge/">Amazon EventBridge (Amazon CloudWatch Events)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sns/">Amazon Simple Notification Service (Amazon SNS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sqs/">Amazon Simple Queue Service (Amazon SQS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/step-functions/">AWS Step Functions&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/certification/certified-developer-associate/">AWS Certified Developer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/index.html">A brief overview of the official documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Exam-Guide.pdf">Exam Preparation Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Sample-Questions.pdf">Sample Exam Questions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/itsmostafa/certified-aws-developer-associate-notes">https://github.com/itsmostafa/certified-aws-developer-associate-notes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/arnaudj/mooc-aws-certified-developer-associate-2020-notes">https://github.com/arnaudj/mooc-aws-certified-developer-associate-2020-notes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=RrKRN9zRBWs">FreeCodeCamp Youtube - AWS Certified Developer - Associate 2020&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/getting-started/hands-on/?getting-started-all.sort-by=item.additionalFields.sortOrder&amp;getting-started-all.sort-order=asc&amp;awsf.getting-started-category=*all&amp;awsf.getting-started-level=*all&amp;awsf.getting-started-content-type=*all">How-To Labs from AWS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/training/ramp-up-guides">AWS Ramp-Up guides&lt;/a>: Downloadable AWS Ramp-Up Guides offer a variety of resources to help you build your skills and knowledge of the AWS Cloud.&lt;/li>
&lt;li>&lt;a href="https://www.coursera.org/aws">Coursera&amp;rsquo;s AWS Courses(Free to enroll via audit)&lt;/a>: AWS also provides various specializations in partnership with coursera&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/architecture/?nc2=h_ql_le_arc&amp;cards-all.sort-by=item.additionalFields.sortDate&amp;cards-all.sort-order=desc&amp;awsf.content-type=*all&amp;awsf.methodology=*all&amp;awsf.tech-category=*all&amp;awsf.industries=*all">AWS Architecture center&lt;/a>: Provides reference architecture diagrams, vetted architecture solutions, Well-Architected best practices, patterns, icons, and more. This expert guidance was contributed by cloud architecture experts from AWS, including AWS Solutions Architects, Professional Services Consultants, and Partners.&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/whitepapers">AWS Whitepapers&lt;/a>: Expand your knowledge of the cloud with AWS technical content authored by AWS and the AWS community, including technical whitepapers, technical guides, reference material, and reference architecture diagrams.&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/architecture/back-to-basics">Back to Basics&lt;/a>: Back to Basics&amp;rsquo; is a video series that explains, examines, and decomposes basic cloud architecture pattern best practices.&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/developer/community/heroes/content-library">AWS Heroes Content Library&lt;/a>: AWS Hero authored content including blogs, videos, slide presentations, podcasts, and more.&lt;/li>
&lt;li>&lt;a href="https://amazon.qwiklabs.com/catalog">https://amazon.qwiklabs.com/catalog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://workshops.aws">AWS Workshops&lt;/a>: This website lists workshops created by the teams at Amazon Web Services (AWS). Workshops are hands-on events designed to teach or introduce practical skills, techniques, or concepts which you can use to solve business problems.&lt;/li>
&lt;li>&lt;a href="https://wellarchitectedlabs.com/">https://wellarchitectedlabs.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://testseries.edugorilla.com/tests/1359/aws-certified-developer-associate">https://testseries.edugorilla.com/tests/1359/aws-certified-developer-associate&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="community-posts">Community posts&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/romankurnovskii/aws-certified-developer-associate-prepare-2np">https://dev.to/romankurnovskii/aws-certified-developer-associate-prepare-2np&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/user/romankurnovskii/comments/x8rgig/what_is_the_topics_order_to_cover_to_get_prepared/?utm_source=share&amp;utm_medium=web2x&amp;context=3">https://www.reddit.com/user/romankurnovskii/comments/x8rgig/what_is_the_topics_order_to_cover_to_get_prepared/?utm_source=share&amp;utm_medium=web2x&amp;context=3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://twitter.com/romankurnovskii/status/1567746601136832512">https://twitter.com/romankurnovskii/status/1567746601136832512&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>2. Add Two Numbers</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/2/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/2/</guid><description>&lt;p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&lt;/p>
&lt;p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Loop through lists&lt;/li>
&lt;li>add each value to the list&lt;/li>
&lt;li>reverse list&lt;/li>
&lt;li>calculate sum&lt;/li>
&lt;li>create linked list from reversed sum&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">addTwoNumbers&lt;/span>(self, l1: Optional[ListNode], l2: Optional[ListNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">createLinkedNode&lt;/span>(values):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> head &lt;span style="color:#666">=&lt;/span> ListNode(values[&lt;span style="color:#40a070">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> values[&lt;span style="color:#40a070">1&lt;/span>:]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node &lt;span style="color:#666">=&lt;/span> ListNode(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> current&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vals_l1 &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> l1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> cur:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vals_l1&lt;span style="color:#666">.&lt;/span>append(cur&lt;span style="color:#666">.&lt;/span>val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> cur&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vals_l2 &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> l2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> cur:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vals_l2&lt;span style="color:#666">.&lt;/span>append(cur&lt;span style="color:#666">.&lt;/span>val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> cur&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_l1 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(vals_l1):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_l1 &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#007020">str&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_l2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(vals_l2):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_l2 &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#007020">str&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ll_sum &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(s_l1) &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020">int&lt;/span>(s_l2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> val &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(&lt;span style="color:#007020">str&lt;/span>(ll_sum)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#007020">int&lt;/span>(val))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> createLinkedNode(values)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://leetcode.com/problems/add-two-numbers/Figures/2_add_two_numbers.svg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>Just like how you would sum two numbers on a piece of paper.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/2-test-case.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">addTwoNumbers&lt;/span>(self, l1: Optional[ListNode], l2: Optional[ListNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dummyHead &lt;span style="color:#666">=&lt;/span> ListNode(&lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curr &lt;span style="color:#666">=&lt;/span> dummyHead
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> carry &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l1 &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> l2 &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> carry &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1Val &lt;span style="color:#666">=&lt;/span> l1&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l2Val &lt;span style="color:#666">=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l2 &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> columnSum &lt;span style="color:#666">=&lt;/span> l1Val &lt;span style="color:#666">+&lt;/span> l2Val &lt;span style="color:#666">+&lt;/span> carry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> carry &lt;span style="color:#666">=&lt;/span> columnSum &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newNode &lt;span style="color:#666">=&lt;/span> ListNode(columnSum &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curr&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> newNode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curr &lt;span style="color:#666">=&lt;/span> newNode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1 &lt;span style="color:#666">=&lt;/span> l1&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l2 &lt;span style="color:#666">=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l2 &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> dummyHead&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create a folder inside S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-folder-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-folder-s3/</guid><description>&lt;h2 id="creating-a-folder-inside-an-amazon-s3-bucket">Creating a Folder inside an Amazon S3 Bucket&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>The AWS S3 console allows you to create folders for grouping objects. This can be a very helpful organizational tool. However, in Amazon S3, buckets and objects are the primary resources. A folder simply becomes a prefix for object key names that are virtually archived into it.&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Return to the &lt;strong>Buckets&lt;/strong> menu by &lt;a href="https://s3.console.aws.amazon.com/s3/home?region=us-west-2">clicking here&lt;/a>, and click on the &lt;code>calabs-bucket&lt;/code> you created earlier. (&lt;em>Reminder&lt;/em>: Your bucket name will differ slightly.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>Create folder&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/s3-create-folder-01.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In the &lt;strong>Folder name&lt;/strong> textbox, enter &lt;em>cloudfolder&lt;/em>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scroll to the bottom and click &lt;strong>Create folder&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The folder is created inside your S3 bucket:&lt;/p></description></item><item><title>3. Longest Substring Without Repeating Characters</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/3/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/3/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a string &lt;code>s&lt;/code>, find the length of the longest substring without repeating characters.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;abcabcbb&amp;quot;
Output: 3
Explanation: The answer is &amp;quot;abc&amp;quot;, with the length of 3.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Loop through string&lt;/li>
&lt;li>Calculate max count of elements in substring&lt;/li>
&lt;li>If get double element, then go back until get this element and do step 2.&lt;/li>
&lt;li>Proceed the main loop&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/3.jpg"
id="zoom-default"
alt="Longest Substring Without Repeating Characters"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">lengthOfLongestSubstring&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uniqs &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_current &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> s:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> uniqs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(len_max, len_current)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_current &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uniqs &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">set&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(s[:idx]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> j &lt;span style="color:#666">==&lt;/span> i:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_current &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uniqs&lt;span style="color:#666">.&lt;/span>add(j)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uniqs&lt;span style="color:#666">.&lt;/span>add(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_current &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(len_max, len_current)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> len_max
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;blockquote>
&lt;p>Sliding Window - &lt;a href="https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/#sliding-window">template&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Window Sliding Technique&lt;/strong> is a computational technique which aims to reduce the use of nested loop and replace it with a single loop, thereby reducing the time complexity.
The Sliding window technique can reduce the time complexity to O(n).&lt;/p>
&lt;p>Tips for identifying this kind of problem where we could use the sliding window technique:&lt;/p>
&lt;p>The problem will be based on an array, string, or list data structure.
You need to find the subrange in this array or string that should provide the longest, shortest, or target values.
A classic problem: to find the largest/smallest sum of given k (for example, three) consecutive numbers in an array.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">lengthOfLongestSubstring&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># mp stores the current index of a character&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mp &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># try to extend the range [i, j]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> s[j] &lt;span style="color:#007020;font-weight:bold">in&lt;/span> mp:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(mp[s[j]], i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(res, j &lt;span style="color:#666">-&lt;/span> i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mp[s[j]] &lt;span style="color:#666">=&lt;/span> j &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">lengthOfLongestSubstring&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chars &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#007020;font-weight:bold">None&lt;/span>] &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> right &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#007020">len&lt;/span>(s):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> s[right]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index &lt;span style="color:#666">=&lt;/span> chars[&lt;span style="color:#007020">ord&lt;/span>(r)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> index &lt;span style="color:#007020;font-weight:bold">is&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> left &lt;span style="color:#666">&amp;lt;=&lt;/span> index &lt;span style="color:#666">&amp;lt;&lt;/span> right:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> index &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(res, right &lt;span style="color:#666">-&lt;/span> left &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chars[&lt;span style="color:#007020">ord&lt;/span>(r)] &lt;span style="color:#666">=&lt;/span> right
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">lengthOfLongestSubstring&lt;/span>(self, s):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_len &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> substr &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> char &lt;span style="color:#007020;font-weight:bold">in&lt;/span> s:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> char &lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> substr:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> substr &lt;span style="color:#666">+=&lt;/span> char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_len &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(max_len, &lt;span style="color:#007020">len&lt;/span>(substr))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">=&lt;/span> substr&lt;span style="color:#666">.&lt;/span>index(char) &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> substr &lt;span style="color:#666">=&lt;/span> substr[start:] &lt;span style="color:#666">+&lt;/span> char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> max_len
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/2694302/JS-or-98-or-Sliding-window-or-With-exlanation">https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/2694302/JS-or-98-or-Sliding-window-or-With-exlanation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/2133524/JavaC%2B%2B-A-reall-Detailed-Explanation">https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/2133524/JavaC%2B%2B-A-reall-Detailed-Explanation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Upload a file to S3</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/upload-file-to-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/upload-file-to-s3/</guid><description>&lt;h2 id="uploading-a-file-to-amazon-s3">Uploading a File to Amazon S3&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>When you upload a folder from your local system or another machine, Amazon S3 uploads all the files and subfolders from the specified local folder to your bucket. It then assigns a key value that is a combination of the uploaded file name and the folder name. In this lab step, you will upload a file to your bucket. The process is similar to uploading a single file, multiple files, or a folder with files in it.&lt;/p>
&lt;p>In order to complete this lab step, you have to upload the cloudacademy-logo.png file from your local file storage into an S3 folder you created earlier.&lt;/p>
&lt;p>Download the Cloud Academy logo from the following location: &lt;a href="https://s3-us-west-2.amazonaws.com/clouda-labs/scripts/s3/cloudacademy-logo.png">https://s3-us-west-2.amazonaws.com/clouda-labs/scripts/s3/cloudacademy-logo.png&lt;/a> (If the image is not downloaded for you, simply right-click the image and select &lt;strong>Save image as&lt;/strong> to download it to your local file system.)&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;ol>
&lt;li>Click on the &lt;strong>cloudfolder&lt;/strong> folder. You are placed within the empty folder in your S3 bucket:&lt;/li>
&lt;/ol>
&lt;p>&lt;em>Note&lt;/em>: Click the folder name itself, not the checkbox for the folder name. If you select the folder checkbox then upload a file, it will be placed above the folder (not inside it).&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>Click the &lt;strong>Upload&lt;/strong> button.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>Add Files:&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>A file picker will appear.&lt;/p>
&lt;ol start="4">
&lt;li>Browse to and select the local copy of &lt;em>cloudacademy-logo.png&lt;/em> file that you downloaded earlier:&lt;/li>
&lt;/ol>
&lt;p>The logo is added to the list of files that are ready to upload. You have several options at this point:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Add more files&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>However, there is another method that some users prefer to add files for upload.&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>Check the file and click on &lt;strong>Remove:&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This time, rather than browsing to a file, drag and drop the logo file onto the wizard. The wizard adds it to the list of files to upload.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scroll to the bottom of the page and click &lt;strong>Upload&lt;/strong> to upload the file:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>You will see a blue notification that the file is uploading and then a green notification that the upload has been completed successfully.&lt;/p>
&lt;p>The file is placed in the folder in your bucket:&lt;/p></description></item><item><title>Grant public access to S3 Object</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/grant-access-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/grant-access-s3/</guid><description>&lt;h2 id="granting-public-access-to-an-amazon-s3-object">Granting Public Access to an Amazon S3 Object&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>All uploaded files are private by default and can only be viewed, edited, or downloaded by you. In order to illustrate this point, complete the instructions below.&lt;/p>
&lt;p>&lt;em>Note&lt;/em>: The terms &amp;ldquo;file&amp;rdquo; and &amp;ldquo;object&amp;rdquo; are often used interchangeably when discussing Amazon S3. Technically, Amazon S3 is an object-store. It is not a block storage device and does not contain a file system as your local computer does. However, files such as images, movies, and sound clips are often uploaded from your file system to Amazon S3.&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;p>1. Click on the object you just uploaded to the S3 bucket.&lt;/p>
&lt;p>Take a look at the &lt;strong>Object overview&lt;/strong> section:&lt;/p>
&lt;ol start="2">
&lt;li>Under &lt;strong>Object URL&lt;/strong>, right-click the link and open the URL in a new browser tab:&lt;/li>
&lt;/ol>
&lt;p> You will see an XML (eXtensible Markup Language) response telling you that access is denied for this object:&lt;/p>
&lt;p>&lt;em>Note&lt;/em>: The response may appear differently depending upon your web browser.&lt;/p>
&lt;p>Leave the browser tab open. You will return to it shortly.&lt;/p>
&lt;p>To allow public access to objects, you need to disable the default safety guards that prevent them from being made publicly accessible.&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>To return to the bucket view, at the top of the page, click the name of your bucket in the bread crumb trail:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click the &lt;strong>Permissions&lt;/strong> tab and click &lt;strong>Edit&lt;/strong> in the &lt;strong>Block public access&lt;/strong> section:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Uncheck all of the options to allow all kinds of public access:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>You should carefully consider anytime you allow public access to S3 buckets. AWS has implemented these security features to help prevent data breaches. For this lab, there is no sensitive data and you do want to allow public access.&lt;/p>
&lt;p>Poorly managed Amazon S3 permissions have been a contributing factor to many unauthorized data access events. AWS is making sure you understand the implications of allowing public access to an Amazon S3 bucket.&lt;/p>
&lt;ol start="6">
&lt;li>At the bottom of the page, click &lt;strong>Save changes&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>A confirmation dialog box will appear.&lt;/p>
&lt;ol start="7">
&lt;li>Enter &lt;em>confirm&lt;/em> in the confirmation dialog box and click &lt;strong>Confirm&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>You will see a green notification that the public access settings have been edited.&lt;/p>
&lt;p>Turning off &lt;strong>Block all public access&lt;/strong> does not automatically make objects in an Amazon S3 bucket public. There are several ways of of explicitly granting public access including:&lt;/p>
&lt;ul>
&lt;li>Bucket policies&lt;/li>
&lt;li>IAM policies&lt;/li>
&lt;li>Access control lists&lt;/li>
&lt;li>Pre-signed URLs&lt;/li>
&lt;/ul>
&lt;p>In this lab, you will use a bucket policy to grant public access to your Amazon S3 bucket.&lt;/p>
&lt;ol start="8">
&lt;li>Scroll down to the &lt;strong>Bucket policy&lt;/strong> section and click &lt;strong>Edit&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>The &lt;strong>Edit bucket policy&lt;/strong> page will load. Here you can specify a JSON (JavaScript Object Notation) policy to control access to your Amazon S3 bucket.&lt;/p>
&lt;ol start="9">
&lt;li>Replace the contents of the &lt;strong>Policy&lt;/strong> editor with the following:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Statement&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;s3:GetObject&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Resource&amp;#34;: &amp;#34;BUCKET_ARN/*&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Principal&amp;#34;: &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a permissive policy that allows &lt;code>GetObject&lt;/code> access to anyone. More restrictive policies are possible such as&lt;/p>
&lt;ul>
&lt;li>Restricting access to specific principals&lt;/li>
&lt;li>Allow cross AWS account access&lt;/li>
&lt;li>Using conditions to restrict access to a specific IP address&lt;/li>
&lt;/ul>
&lt;p>Notice the Resource is currently &amp;ldquo;BUCKET_ARN/*&amp;quot;,  which is causing an error.  We need to replace this with the ARN of the bucket we created:&lt;/p>
&lt;ol start="10">
&lt;li>Click the copy icon under &lt;strong>Bucket ARN&lt;/strong>and replace &lt;code>BUCKET_ARN&lt;/code> in the value of the &lt;code>Resource&lt;/code> key with the ARN you just copied :&lt;/li>
&lt;/ol>
&lt;p>&lt;em>Note&lt;/em>: Ensure that you preserve the &lt;code>/*&lt;/code> at the end of the value. This means that the policy will apply to all objects inside the bucket recursively. Public access won&amp;rsquo;t be granted if this is not present.&lt;/p>
&lt;ol start="12">
&lt;li>At the bottom of the page, click &lt;strong>Save changes&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>You will see a green notification that the bucket policy was edited.&lt;/p>
&lt;ol start="13">
&lt;li>Return to the browser tab where access was denied and fresh the browser tab.&lt;/li>
&lt;/ol>
&lt;p>You will see the response change from “Access Denied” to the logo:&lt;/p></description></item><item><title>5. Longest Palindromic Substring</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/5/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/5/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/longest-palindromic-substring/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a string &lt;code>s&lt;/code>, return the longest palindromic substring in &lt;code>s&lt;/code>.&lt;/p>
&lt;p>A string is called a palindrome string if the reverse of that string is the same as the original string.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;babad&amp;quot;
Output: &amp;quot;bab&amp;quot;
Explanation: &amp;quot;aba&amp;quot; is also a valid answer.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;cbbd&amp;quot;
Output: &amp;quot;bb&amp;quot;
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;h3 id="hints">Hints&lt;/h3>
&lt;blockquote>
&lt;p>How can we reuse a previously computed palindrome to compute a larger palindrome?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>How can we reuse a previously computed palindrome to compute a larger palindrome?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Complexity based hint:
If we use brute-force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>We start at &lt;code>index = 0&lt;/code> and iterate through all values until &lt;code>n&lt;/code>. At each index we call the function &lt;code>getPalindrome&lt;/code> that will check the values to the left and right of the provided indices. It will continue to do so until the longest palindrome within the given range is found.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/5.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/5-diagram.svg"
id="zoom-default"
alt="LeetCode diagram explained"
loading="lazy"
/>
&lt;/p>
&lt;strong>&lt;a href="https://app.diagrams.net/#G17m7pbA_Ym4_Xi8JFBPSyMcr8zYzX_1FH">Link to diagram&lt;/a>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">longestPalindrome&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">str&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">getPalindrome&lt;/span>(left, right):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span>(left &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#007020">len&lt;/span>(s) &lt;span style="color:#007020;font-weight:bold">and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s[left] &lt;span style="color:#666">==&lt;/span> s[right]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> left&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>, right&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(s)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left, right &lt;span style="color:#666">=&lt;/span> getPalindrome(i, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_len&lt;span style="color:#666">=&lt;/span> right &lt;span style="color:#666">-&lt;/span> left &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> pal_len &lt;span style="color:#666">&amp;gt;&lt;/span> len_max:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_left &lt;span style="color:#666">=&lt;/span> left
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_right &lt;span style="color:#666">=&lt;/span> right
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> pal_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left, right &lt;span style="color:#666">=&lt;/span> getPalindrome(i, i&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_len &lt;span style="color:#666">=&lt;/span> right &lt;span style="color:#666">-&lt;/span> left &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> pal_len &lt;span style="color:#666">&amp;gt;&lt;/span> len_max:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_left &lt;span style="color:#666">=&lt;/span> left
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pal_right &lt;span style="color:#666">=&lt;/span> right
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len_max &lt;span style="color:#666">=&lt;/span> pal_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> s[pal_left:pal_right&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;h3 id="manachers-algorithm">Manacher&amp;rsquo;s algorithm&lt;/h3>
&lt;p>There is an &lt;code>O(n)&lt;/code> algorithm called &lt;a href="https://en.wikipedia.org/wiki/Longest_palindromic_substring#Manacher's_algorithm">Manacher&amp;rsquo;s algorithm&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">longestPalindrome&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">str&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># @ and $ signs are sentinels appended to each end to avoid bounds checking&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;#&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>join(&lt;span style="color:#4070a0">&amp;#39;@&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> s &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;$&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># t[i - maxExtends[i]..i) ==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># t[i + 1..i + maxExtends[i]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxExtends &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> center &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, n &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rightBoundary &lt;span style="color:#666">=&lt;/span> center &lt;span style="color:#666">+&lt;/span> maxExtends[center]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mirrorIndex &lt;span style="color:#666">=&lt;/span> center &lt;span style="color:#666">-&lt;/span> (i &lt;span style="color:#666">-&lt;/span> center)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxExtends[i] &lt;span style="color:#666">=&lt;/span> rightBoundary &lt;span style="color:#666">&amp;gt;&lt;/span> i &lt;span style="color:#007020;font-weight:bold">and&lt;/span> \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">min&lt;/span>(rightBoundary &lt;span style="color:#666">-&lt;/span> i, maxExtends[mirrorIndex])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Attempt to expand palindrome centered at i&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> t[i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">+&lt;/span> maxExtends[i]] &lt;span style="color:#666">==&lt;/span> t[i &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">-&lt;/span> maxExtends[i]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxExtends[i] &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># If palindrome centered at i expand past rightBoundary,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># adjust center based on expanded palindrome.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">+&lt;/span> maxExtends[i] &lt;span style="color:#666">&amp;gt;&lt;/span> rightBoundary:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> center &lt;span style="color:#666">=&lt;/span> i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Find the maxExtend and bestCenter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxExtend, bestCenter &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>((extend, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i, extend &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">enumerate&lt;/span>(maxExtends))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> s[(bestCenter &lt;span style="color:#666">-&lt;/span> maxExtend) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>:(bestCenter &lt;span style="color:#666">+&lt;/span> maxExtend) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Longest_palindromic_substring#Manacher's_algorithm">Manacher&amp;rsquo;s algorithm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=0CKUjDcUYYA">Errichto:LeetCode problem Longest Palindromic Substring (two solutions)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://redquark.org/leetcode/0005-longest-palindromic-substring/">https://redquark.org/leetcode/0005-longest-palindromic-substring/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>RU&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=sp9f7nQHqeQ&amp;t=39s">Разбор задачи с интервью. Литкод 5. Longest Palindromic Substring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ru.algorithmica.org/cs/string-searching/manacher/">Алгоритмика: Алгоритм Манакера&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%9C%D0%B0%D0%BD%D0%B0%D0%BA%D0%B5%D1%80%D0%B0#:~:text=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%20%D0%9C%D0%B0%D0%BD%D0%B0%D0%BA%D0%B5%D1%80%D0%B0%20(%D0%B0%D0%BD%D0%B3%D0%BB.%20Manacher's%20algorithm),%D1%80%D0%B5%D1%88%D0%B0%D1%82%D1%8C%20%D0%B8%20%D0%B1%D0%BE%D0%BB%D0%B5%D0%B5%20%D0%BE%D0%B1%D1%89%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87%D0%B8">Википедия:Алгоритм Манакера&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Change metadata of S3 Object</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/how-to-change-metadata-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/how-to-change-metadata-s3/</guid><description>&lt;h2 id="changing-the-metadata-of-an-amazon-s3-object">Changing the Metadata of an Amazon S3 Object&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Each object in Amazon S3 has a set of key/value pairs representing its metadata. There are two types of metadata: &amp;ldquo;System metadata&amp;rdquo; (for example, Content-Type and Content-Length) and custom &amp;ldquo;User metadata&amp;rdquo;. User metadata is stored with the object and returned with it.&lt;/p>
&lt;p>As an example, you might have your own taxonomy for various images, such as “logo”, “screenshot”, “diagram”, &amp;ldquo;flowchart&amp;rdquo; and so on. In this lab step, you will change the Content-Type of your image to &amp;ldquo;text/plain&amp;rdquo;. You will also create custom user metadata.&lt;/p>
&lt;p>&lt;em>Note&lt;/em>: With the new Amazon S3 UI you can set the metadata as part of the upload process, or add it later.&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;ol>
&lt;li>Return to the &lt;strong>cloudfolder/&lt;/strong> and delete the &lt;strong>cloudacademy-logo.png&lt;/strong> from your Amazon S3 bucket by checking the checkbox and clicking &lt;strong>Delete&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>The &lt;strong>Delete objects&lt;/strong> form page will load. Because a deleted object is not retrievable, AWS asks you to confirm that you want to delete the object before deletion.&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>In the textbox at the bottom of the page, enter &lt;em>permanently delete&lt;/em> and click &lt;strong>Delete objects&lt;/strong>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To return to the bucket object view, at the top-right, click &lt;strong>Close&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>Upload&lt;/strong>, then &lt;strong>Add files&lt;/strong> and browse to the logo file (or drag-and-drop it into the &lt;strong>Upload&lt;/strong> wizard) in order to upload it again.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Near the bottom of the page, expand the &lt;strong>Properties&lt;/strong> section:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scroll down to the &lt;strong>Metadata&lt;/strong> section and click &lt;strong>Add metadata&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>A row of form elements will appear.&lt;/p>
&lt;ol start="7">
&lt;li>Enter the following:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>Type&lt;/strong>: Select &lt;strong>System defined&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Key&lt;/strong>: Select &lt;strong>Content-Type&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Value&lt;/strong>: Enter &lt;em>text/plain&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>The drop-down list contains the System metadata that you can set.&lt;/p>
&lt;p>In this lab, you have set the content type to text/plain as an example to see how to add metadata to an object when uploading to Amazon S3.&lt;/p>
&lt;p>Next you will add custom user metadata. User metadata must be prefaced with &amp;ldquo;x-amz-meta-&amp;rdquo;. The remaining instructions will add a custom user type for imagetype, and imagestatus.&lt;/p>
&lt;ol start="8">
&lt;li>
&lt;p>Click &lt;strong>Add metadata&lt;/strong> again to add another row.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enter the following to define custom metadata:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>Type&lt;/strong>: Select &lt;strong>User defined&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Key&lt;/strong>: Enter &lt;em>imagetype&lt;/em> after &lt;strong>x-amz-meta&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Value&lt;/strong>: Enter &lt;em>logo&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>You have added two metadata key-value pairs to the object you are going to upload. One system metadata and one user-defined.&lt;/p>
&lt;ol start="10">
&lt;li>
&lt;p>At the bottom of the page, click &lt;strong>Upload&lt;/strong>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To exit the upload form, at the top-right, click &lt;strong>Close&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the &lt;strong>Objects&lt;/strong> table click the &lt;strong>cloudacademy-logo.png&lt;/strong> object:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scroll down to the &lt;strong>Metadata&lt;/strong> section and observe the key-value pairs you added:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>This is also where you can add, remove, and edit metadata after you have uploaded objects to Amazon S3.&lt;/p></description></item><item><title>Delete S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/delete-from-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/delete-from-s3/</guid><description>&lt;h2 id="deleting-an-amazon-s3-bucket">Deleting an Amazon S3 Bucket&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>You can delete an Amazon S3 bucket using the S3 console. You will delete all objects within the bucket as well.&lt;/p>
&lt;h3 id="instructions">Instructions&lt;/h3>
&lt;ol>
&lt;li>In the AWS Management Console search bar, enter &lt;em>S3&lt;/em>, and click the &lt;strong>S3&lt;/strong> result under &lt;strong>Services&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>From the top level of the S3 console, notice the &lt;strong>Delete&lt;/strong> button is not actionable.&lt;/p>
&lt;p>2. Check the name of your bucket to select it:&lt;/p>
&lt;ol start="3">
&lt;li>With the bucket selected, click &lt;strong>Empty&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;p>The &lt;strong>Empty bucket&lt;/strong> form page will load.&lt;/p>
&lt;p>It&amp;rsquo;s not possible to delete a bucket that contains objects.&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>To confirm that you want to delete all objects in this bucket, in the textbox at the bottom, enter &lt;em>permanently delete&lt;/em> and click &lt;strong>Empty&lt;/strong>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To exit the empty bucket page, at the top-right, click &lt;strong>Exit&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>You will be returned to the &lt;strong>Buckets&lt;/strong> page.&lt;/p>
&lt;ol start="6">
&lt;li>
&lt;p>To delete your bucket, select it in the list, and click &lt;strong>Delete&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To confirm that you want to delete the bucket, in the textbox, enter the name of your bucket:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>Delete bucket&lt;/strong> to delete the bucket.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>&lt;em>Warning&lt;/em>&lt;/strong>: Make sure to delete all the files/folders inside the bucket before deleting it, otherwise AWS won&amp;rsquo;t allow you to delete the S3 bucket.&lt;/p>
&lt;p>&lt;strong>&lt;em>Important!&lt;/em>&lt;/strong> Notice the message from AWS: &amp;ldquo;Amazon S3 buckets are unique. If you delete this bucket, you may lose the bucket name to another AWS user.&amp;rdquo;&lt;/p>
&lt;p>If retaining the bucket name is important to you, consider using the &lt;strong>Empty bucket&lt;/strong> feature and not actually deleting the bucket.&lt;/p></description></item><item><title>7. Reverse Integer</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/7/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/7/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/reverse-integer/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.&lt;/p>
&lt;p>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>Input: x = 123
Output: 321&lt;/p>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>Input: x = -123
Output: -321&lt;/p>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;p>Input: x = 120
Output: 21&lt;/p>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Convert number to int&lt;/li>
&lt;li>Remove &lt;code>minus&lt;/code> if exist (or convert module of number)&lt;/li>
&lt;li>reverse&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">reverse&lt;/span>(self, x: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reversed_int &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str_int &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">str&lt;/span>(x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str_int &lt;span style="color:#666">=&lt;/span> str_int[&lt;span style="color:#40a070">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(&lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(str_int))):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reversed_int&lt;span style="color:#666">.&lt;/span>append(str_int[i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>join(reversed_int))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (res &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2147483648&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> res &lt;span style="color:#666">&amp;lt;=&lt;/span> &lt;span style="color:#40a070">2147483647&lt;/span>) &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">reverse&lt;/span>(self, x: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">str&lt;/span>(&lt;span style="color:#007020">abs&lt;/span>(x))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rev &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(s[::&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> rev &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">2147483647&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> rev &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span> (rev &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>11. Container With Most Water</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/11/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/11/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/container-with-most-water/">LeetCode problem 11&lt;/a>&lt;/p>
&lt;h2 id="problem-statement">Problem Statement&lt;/h2>
&lt;p>The problem involves an array of integers &lt;code>height&lt;/code>, where each element represents the height of a line. These lines, along with the x-axis, form a series of containers. Your goal is to find the two lines that form the container with the greatest area.&lt;/p>
&lt;h2 id="naive-solution">Naive Solution&lt;/h2>
&lt;p>The naive solution is to consider all pairs of lines and calculate the area of water each pair can contain. You would keep track of the maximum area encountered. This solution would take O(n^2) time, which is not efficient.&lt;/p>
&lt;h2 id="hints--tips">Hints &amp;amp; Tips&lt;/h2>
&lt;p>The height of the water in any container is limited by the shorter of the two lines forming the container. Moreover, farther the lines, more will be the width of the container and thus, more will be the water it can contain.&lt;/p>
&lt;h2 id="approach">Approach&lt;/h2>
&lt;p>We can achieve a more efficient solution by using the two-pointer technique.&lt;/p>
&lt;ol>
&lt;li>Start with two pointers, one at the start and one at the end of the array.&lt;/li>
&lt;li>The initial container therefore includes the entire array, and has a certain amount of water.&lt;/li>
&lt;li>Then, moving the pointers inward, you measure the container at each step, always choosing the pointer at the shorter line to move.&lt;/li>
&lt;/ol>
&lt;p>This is based on the rationale that moving the pointer at the taller line would not affect the container&amp;rsquo;s height but reduce its width.&lt;/p>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;ol>
&lt;li>Initialize left and right pointers at the start and end of the array.&lt;/li>
&lt;li>Calculate the initial area and set it as the maximum area.&lt;/li>
&lt;li>While the left pointer is less than the right pointer:
&lt;ul>
&lt;li>If the height at the left pointer is less than or equal to the height at the right pointer, increment the left pointer.&lt;/li>
&lt;li>Otherwise, decrement the right pointer.&lt;/li>
&lt;li>Calculate the area each time the pointers are moved, and update the maximum area if the current area is greater.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Why it is important to find the minimum height of pointer?:&lt;/strong>&lt;/p>
&lt;p>The area of the container is determined by the shorter line and the distance between the two lines. Therefore, if we move the pointer at the taller line inward, we might get a taller height but the width between the two lines, and therefore the possible area, is guaranteed to decrease.&lt;/p>
&lt;p>So the overall area is most likely going to decrease or stay the same. Because of this, we decide to move the pointer at the shorter line, in the hopes that we will find a taller line that will increase the area.&lt;/p>
&lt;p>For example, consider an array &lt;code>[1,8,6,2,5,4,8,3,7]&lt;/code>. When the left pointer is at the first position (height 1) and the right pointer is at the second last position (height 3), if we move the right pointer, we may come across a taller line (7) but since the left line (height 1) is still shorter, the possible area is still going to be less due to reduced width.&lt;/p>
&lt;p>However, if we move the left pointer, we may come across a taller line (8) and this could increase the possible area.&lt;/p>
&lt;p>So, the condition &lt;code>if height[left] &amp;lt;= height[right]&lt;/code> is there to always move the pointer at the shorter line.&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">maxArea&lt;/span>(height):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(height) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_area &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> left &lt;span style="color:#666">&amp;lt;&lt;/span> right:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> min_height &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">min&lt;/span>(height[left], height[right])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> area &lt;span style="color:#666">=&lt;/span> min_height &lt;span style="color:#666">*&lt;/span> (right &lt;span style="color:#666">-&lt;/span> left)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_area &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(max_area, area)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> height[left] &lt;span style="color:#666">&amp;lt;=&lt;/span> height[right]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> max_area
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>13. Roman to Integer</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/13/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/13/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/roman-to-integer/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Roman numerals are represented by seven different symbols: &lt;code>I&lt;/code>, &lt;code>V&lt;/code>, &lt;code>X&lt;/code>, &lt;code>L&lt;/code>, &lt;code>C&lt;/code>, &lt;code>D&lt;/code> and &lt;code>M&lt;/code>.&lt;/p>
&lt;pre>&lt;code>Symbol Value
I 1
V 5
X 10
L 50
C 100
D 500
M 1000
&lt;/code>&lt;/pre>
&lt;p>For example, &lt;code>2&lt;/code> is written as &lt;code>II&lt;/code> in Roman numeral, just two ones added together. 12 is written as &lt;code>XII&lt;/code>, which is simply &lt;code>X + II&lt;/code>. The number 27 is written as &lt;code>XXVII&lt;/code>, which is &lt;code>XX + V + II&lt;/code>.&lt;/p>
&lt;p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not &lt;code>IIII&lt;/code>. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:&lt;/p>
&lt;p>I can be placed before &lt;code>V&lt;/code> (5) and &lt;code>X&lt;/code> (10) to make 4 and 9.
X can be placed before &lt;code>L&lt;/code> (50) and &lt;code>C&lt;/code> (100) to make 40 and 90.
C can be placed before &lt;code>D&lt;/code> (500) and &lt;code>M&lt;/code> (1000) to make 400 and 900.&lt;/p>
&lt;p>Given a roman numeral, convert it to an integer.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;III&amp;quot;
Output: 3
Explanation: III = 3.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;MCMXCIV&amp;quot;
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/13.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">romanToInt&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">dict&lt;/span> &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#39;I&amp;#39;&lt;/span>:&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;V&amp;#39;&lt;/span>:&lt;span style="color:#40a070">5&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;X&amp;#39;&lt;/span>:&lt;span style="color:#40a070">10&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;L&amp;#39;&lt;/span>:&lt;span style="color:#40a070">50&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;C&amp;#39;&lt;/span>:&lt;span style="color:#40a070">100&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;D&amp;#39;&lt;/span>:&lt;span style="color:#40a070">500&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;M&amp;#39;&lt;/span>:&lt;span style="color:#40a070">1000&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n_sum &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> c &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(s):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">dict&lt;/span>[c]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>n &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#007020;font-weight:bold">in&lt;/span> (&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">10&lt;/span>,&lt;span style="color:#40a070">100&lt;/span>) &lt;span style="color:#007020;font-weight:bold">and&lt;/span> prev &lt;span style="color:#007020;font-weight:bold">in&lt;/span> (n&lt;span style="color:#666">*&lt;/span>&lt;span style="color:#40a070">5&lt;/span>, n&lt;span style="color:#666">*&lt;/span>&lt;span style="color:#40a070">10&lt;/span>) &lt;span style="color:#007020;font-weight:bold">else&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n_sum &lt;span style="color:#666">+=&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> n_sum
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>14. Longest Common Prefix</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/14/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/14/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/longest-common-prefix/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Write a function to find the longest common prefix string amongst an array of strings.&lt;/p>
&lt;p>If there is no common prefix, return an empty string &lt;code>&amp;quot;&amp;quot;&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: strs = [&amp;quot;flower&amp;quot;,&amp;quot;flow&amp;quot;,&amp;quot;flight&amp;quot;]
Output: &amp;quot;fl&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: strs = [&amp;quot;dog&amp;quot;,&amp;quot;racecar&amp;quot;,&amp;quot;car&amp;quot;]
Output: &amp;quot;&amp;quot;
Explanation: There is no common prefix among the input strings.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/14.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">longestCommonPrefix&lt;/span>(self, strs: List[&lt;span style="color:#007020">str&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">str&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strs&lt;span style="color:#666">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> strs[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> strs[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">==&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#007020">len&lt;/span>(l)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l[i] &lt;span style="color:#666">==&lt;/span> r[i]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> l[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>15. 3Sum</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/15/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/15/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/3sum/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an integer array nums, return all the triplets &lt;code>[nums[i], nums[j], nums[k]]&lt;/code> such that &lt;code>i != j&lt;/code>, &lt;code>i != k&lt;/code>, and &lt;code>j != k&lt;/code>, and &lt;code>nums[i] + nums[j] + nums[k] == 0&lt;/code>.&lt;/p>
&lt;p>Notice that the solution set must not contain duplicate triplets.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation:
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [0,1,1]
Output: []
Explanation: The only possible triplet does not sum up to 0.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">threeSum&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[List[&lt;span style="color:#007020">int&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums&lt;span style="color:#666">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ll &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> x &lt;span style="color:#666">&amp;lt;&lt;/span> ll &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> nums[x] &lt;span style="color:#666">!=&lt;/span> nums[x&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">=&lt;/span> x &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> z &lt;span style="color:#666">=&lt;/span> ll &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> y &lt;span style="color:#666">&amp;lt;&lt;/span> z:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#666">=&lt;/span> nums[x] &lt;span style="color:#666">+&lt;/span> nums[y] &lt;span style="color:#666">+&lt;/span> nums[z]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> s &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#666">.&lt;/span>append([nums[x], nums[y], nums[z]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> y &lt;span style="color:#666">&amp;lt;&lt;/span> z &lt;span style="color:#007020;font-weight:bold">and&lt;/span> nums[y] &lt;span style="color:#666">==&lt;/span> nums[y&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> z &lt;span style="color:#666">&amp;gt;&lt;/span> y &lt;span style="color:#007020;font-weight:bold">and&lt;/span> nums[z] &lt;span style="color:#666">==&lt;/span> nums[z&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> z &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> z &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">elif&lt;/span> s &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> z &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>17. Letter Combinations of a Phone Number</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/17/</link><pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/17/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/letter-combinations-of-a-phone-number/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a string containing digits from &lt;code>2-9&lt;/code> inclusive, return all possible letter combinations that the number could represent. Return the answer in &lt;strong>any order&lt;/strong>.&lt;/p>
&lt;p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png"
id="zoom-default"
alt="17"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: digits = &amp;quot;23&amp;quot;
Output: [&amp;quot;ad&amp;quot;,&amp;quot;ae&amp;quot;,&amp;quot;af&amp;quot;,&amp;quot;bd&amp;quot;,&amp;quot;be&amp;quot;,&amp;quot;bf&amp;quot;,&amp;quot;cd&amp;quot;,&amp;quot;ce&amp;quot;,&amp;quot;cf&amp;quot;]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: digits = &amp;quot;&amp;quot;
Output: []
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">letterCombinations&lt;/span>(self, digits: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">str&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> digits:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> letters &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;abc&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;def&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;ghi&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;jkl&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;mno&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;pqrs&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;tuv&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;wxyz&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> d &lt;span style="color:#007020;font-weight:bold">in&lt;/span> digits:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> d &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> letter &lt;span style="color:#007020;font-weight:bold">in&lt;/span> letters[d]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> word &lt;span style="color:#007020;font-weight:bold">in&lt;/span> result:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> word &lt;span style="color:#666">+=&lt;/span> letter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp&lt;span style="color:#666">.&lt;/span>append(word)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>19. Remove Nth Node From End of List</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/19/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/19/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list">LeetCode problem 19&lt;/a>&lt;/p>
&lt;p>Given the &amp;lsquo;head&amp;rsquo; of a linked list, remove the &amp;rsquo;nth&amp;rsquo; node from the end of the list and return its head.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg"
id="zoom-default"
alt="LeetCode 19. Remove Nth Node From End of List"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: head = [1], n = 1
Output: []
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Two pointers.&lt;/li>
&lt;li>Second pointer starts from &lt;code>nth&lt;/code> position.&lt;/li>
&lt;li>Run while second pointer exist.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Definition for singly-linked list.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># class ListNode:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># def __init__(self, val=0, next=None):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.val = val&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.next = next&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">removeNthFromEnd&lt;/span>(self, head, n: &lt;span style="color:#007020">int&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p1 &lt;span style="color:#666">=&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">=&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> _ &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">=&lt;/span> p2&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#60a0b0;font-style:italic"># fast&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> p2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> head&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#60a0b0;font-style:italic"># in case: head=[1], n=1 -&amp;gt; return []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> p2&lt;span style="color:#666">.&lt;/span>next:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p1 &lt;span style="color:#666">=&lt;/span> p1&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">=&lt;/span> p2&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p1&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> p1&lt;span style="color:#666">.&lt;/span>next&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> head
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Definition for singly-linked list.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># class ListNode:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># def __init__(self, val=0, next=None):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.val = val&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.next = next&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">removeNthFromEnd&lt;/span>(self, head: Optional[ListNode], n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> head&lt;span style="color:#666">.&lt;/span>next:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> cur:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes[i] &lt;span style="color:#666">=&lt;/span> cur
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> cur&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">-&lt;/span> n &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> head&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur &lt;span style="color:#666">=&lt;/span> nodes[i &lt;span style="color:#666">-&lt;/span> n &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> cur&lt;span style="color:#666">.&lt;/span>next:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> cur&lt;span style="color:#666">.&lt;/span>next&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> head
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>20. Valid Parentheses</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/20/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/20/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/valid-parentheses/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a string s containing just the characters &lt;code>'('&lt;/code>, &lt;code>')'&lt;/code>, &lt;code>'{'&lt;/code>, &lt;code>'}'&lt;/code>, &lt;code>'['&lt;/code> and &lt;code>']'&lt;/code>, determine if the input string is valid.&lt;/p>
&lt;p>An input string is valid if:&lt;/p>
&lt;ol>
&lt;li>Open brackets must be closed by the same type of brackets.&lt;/li>
&lt;li>Open brackets must be closed in the correct order.&lt;/li>
&lt;li>Every close bracket has a corresponding open bracket of the same type.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;()[]{}&amp;quot;
Output: true
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: s = &amp;quot;()[]{}&amp;quot;
Output: true
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Loop through string&lt;/li>
&lt;li>If &lt;em>current&lt;/em> &amp;ldquo;closes&amp;rdquo; the last in stack, then remove last from stack&lt;/li>
&lt;li>Else: add current to stack&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">isValid&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> par_dict &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#39;(&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;)&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;{&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;}&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;[&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;]&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last_value &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> s:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> second_value &lt;span style="color:#666">=&lt;/span> par_dict&lt;span style="color:#666">.&lt;/span>get(last_value, &lt;span style="color:#007020;font-weight:bold">None&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">==&lt;/span> second_value:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#666">.&lt;/span>pop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last_value &lt;span style="color:#666">=&lt;/span> stack[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#007020;font-weight:bold">if&lt;/span> stack &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#666">.&lt;/span>append(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last_value &lt;span style="color:#666">=&lt;/span> i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">isValid&lt;/span>(self, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> par_dict &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#39;(&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;)&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;{&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;}&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;[&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;]&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> char &lt;span style="color:#007020;font-weight:bold">in&lt;/span> s:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> char &lt;span style="color:#007020;font-weight:bold">in&lt;/span> par_dict: &lt;span style="color:#60a0b0;font-style:italic"># If it&amp;#39;s an opening bracket, add it to the stack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#666">.&lt;/span>append(char)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">elif&lt;/span> stack: &lt;span style="color:#60a0b0;font-style:italic"># If there&amp;#39;s something in the stack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> char &lt;span style="color:#666">==&lt;/span> par_dict[stack[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># If it&amp;#39;s a closing bracket for the last opened bracket, remove it from the stack.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#666">.&lt;/span>pop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># It&amp;#39;s not a closing bracket for the last opened bracket. Invalid string.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># Not an opening bracket or closing bracket. Invalid string.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> stack &lt;span style="color:#666">==&lt;/span> []
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>21. Merge Two Sorted Lists</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/21/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/21/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/merge-two-sorted-lists/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>You are given the heads of two sorted linked lists list1 and list2.&lt;/p>
&lt;p>Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.&lt;/p>
&lt;p>Return the head of the merged linked list.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg"
id="zoom-default"
alt="21. Merge Two Sorted Lists"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: list1 = [], list2 = [0]
Output: [0]
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>Get smallest &lt;em>head&lt;/em>. Loop and update its next.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Definition for singly-linked list.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># class ListNode:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># def __init__(self, val=0, next=None):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.val = val&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.next = next&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mergeTwoLists&lt;/span>(self, l1: Optional[ListNode], l2: Optional[ListNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> ListNode()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">and&lt;/span> l2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#666">&amp;lt;=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>val:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node &lt;span style="color:#666">=&lt;/span> ListNode(l1&lt;span style="color:#666">.&lt;/span>val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1 &lt;span style="color:#666">=&lt;/span> l1&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node &lt;span style="color:#666">=&lt;/span> ListNode(l2&lt;span style="color:#666">.&lt;/span>val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l2 &lt;span style="color:#666">=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> current&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> l1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> l2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;blockquote>
&lt;p>Recursion&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mergeTwoLists&lt;/span>(self, l1: Optional[ListNode], l2: Optional[ListNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">and&lt;/span> l2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#666">&amp;gt;&lt;/span> l2&lt;span style="color:#666">.&lt;/span>val:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1, l2 &lt;span style="color:#666">=&lt;/span> l2, l1 &lt;span style="color:#60a0b0;font-style:italic">#swap smaller and larger: make l1 the one with the smaller first value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>mergeTwoLists(l1&lt;span style="color:#666">.&lt;/span>next, l2) &lt;span style="color:#60a0b0;font-style:italic"># move forward in the list which starts with the smaller value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">or&lt;/span> l2 &lt;span style="color:#60a0b0;font-style:italic"># return whichever of the two lists remains at the end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Loop&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mergeTwoLists&lt;/span>(self, l1: Optional[ListNode], l2: Optional[ListNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> Optional[ListNode]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> ListNode()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l1 &lt;span style="color:#007020;font-weight:bold">and&lt;/span> l2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l1&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#666">&amp;lt;=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>val:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> l1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l1 &lt;span style="color:#666">=&lt;/span> l1&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> l2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l2 &lt;span style="color:#666">=&lt;/span> l2&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> current&lt;span style="color:#666">.&lt;/span>next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mergeTwoLists&lt;/span>(self, a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> a &lt;span style="color:#007020;font-weight:bold">and&lt;/span> b:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> a&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#666">&amp;gt;&lt;/span> b&lt;span style="color:#666">.&lt;/span>val:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a, b &lt;span style="color:#666">=&lt;/span> b, a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>mergeTwoLists(a&lt;span style="color:#666">.&lt;/span>next, b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> a &lt;span style="color:#007020;font-weight:bold">or&lt;/span> b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>First make sure that a is the &amp;ldquo;better&amp;rdquo; one (meaning b is None or has larger/equal value). Then merge the remainders behind a.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mergeTwoLists&lt;/span>(self, a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> a &lt;span style="color:#007020;font-weight:bold">or&lt;/span> b &lt;span style="color:#007020;font-weight:bold">and&lt;/span> a&lt;span style="color:#666">.&lt;/span>val &lt;span style="color:#666">&amp;gt;&lt;/span> b&lt;span style="color:#666">.&lt;/span>val:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a, b &lt;span style="color:#666">=&lt;/span> b, a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> a:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#666">.&lt;/span>next &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>mergeTwoLists(a&lt;span style="color:#666">.&lt;/span>next, b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>22. Generate Parentheses</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/22/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/22/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/generate-parentheses/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 3
Output: [&amp;quot;((()))&amp;quot;,&amp;quot;(()())&amp;quot;,&amp;quot;(())()&amp;quot;,&amp;quot;()(())&amp;quot;,&amp;quot;()()()&amp;quot;]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 1
Output: [&amp;quot;()&amp;quot;]
&lt;/code>&lt;/pre>
&lt;h2 id="prerequirements">Prerequirements&lt;/h2>
&lt;p>&lt;a href="https://romankurnovskii.com/en/tracks/algorithms-101/algorithms/#backtracking">Backtracking pattern&lt;/a>&lt;/p>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/22.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">generateParenthesis&lt;/span>(self, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">dfs&lt;/span>(l: &lt;span style="color:#007020">int&lt;/span>, r: &lt;span style="color:#007020">int&lt;/span>, s: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> r &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#666">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(l &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, r, s &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;(&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">&amp;lt;&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(l, r &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, s &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(n, n, &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>26. Remove Duplicates from Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/26/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/26/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an integer array &lt;code>nums&lt;/code> sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.&lt;/p>
&lt;p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array &lt;code>nums&lt;/code>. More formally, if there are k elements after removing the duplicates, then the first k elements of &lt;code>nums&lt;/code> should hold the final result. It does not matter what you leave beyond the first k elements.&lt;/p>
&lt;p>Return k after placing the final result in the first k slots of &lt;code>nums&lt;/code>.&lt;/p>
&lt;p>Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.&lt;/p>
&lt;p>Custom Judge:&lt;/p>
&lt;p>The judge will test your solution with the following code:&lt;/p>
&lt;pre>&lt;code>int[] nums = [...]; // Input array
int[] expectedNums = [...]; // The expected answer with correct length
int k = removeDuplicates(nums); // Calls your implementation
assert k == expectedNums.length;
for (int i = 0; i &amp;lt; k; i++) {
assert nums[i] == expectedNums[i];
}
&lt;/code>&lt;/pre>
&lt;p>If all assertions pass, then your solution will be accepted.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]
Explanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]
Explanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/26.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">removeDuplicates&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p1 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> p2 &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[p1] &lt;span style="color:#666">==&lt;/span> nums[p2]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p1 &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums[p1] &lt;span style="color:#666">=&lt;/span> nums[p2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> k
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">removeDuplicates&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> n &lt;span style="color:#007020;font-weight:bold">in&lt;/span> nums:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[i&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">!=&lt;/span> n:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums[i] &lt;span style="color:#666">=&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> k
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>28. Find the Index of the First Occurrence in a String</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/28/index.en./</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/28/index.en./</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given two strings &lt;code>needle&lt;/code> and &lt;code>haystack&lt;/code>, return the index of the first occurrence of &lt;code>needle&lt;/code> in &lt;code>haystack&lt;/code>, or -1 if &lt;code>needle&lt;/code> is not part of &lt;code>haystack&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>Input: haystack = &amp;ldquo;sadbutsad&amp;rdquo;, needle = &amp;ldquo;sad&amp;rdquo;
Output: 0
Explanation: &amp;ldquo;sad&amp;rdquo; occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.&lt;/p>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>Input: haystack = &amp;ldquo;leetcode&amp;rdquo;, needle = &amp;ldquo;leeto&amp;rdquo;
Output: -1
Explanation: &amp;ldquo;leeto&amp;rdquo; did not occur in &amp;ldquo;leetcode&amp;rdquo;, so we return -1.&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">strStr&lt;/span>(self, haystack: &lt;span style="color:#007020">str&lt;/span>, needle: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> haystack&lt;span style="color:#666">.&lt;/span>find(needle)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">strStr&lt;/span>(self, haystack: &lt;span style="color:#007020">str&lt;/span>, needle: &lt;span style="color:#007020">str&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(needle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> end &lt;span style="color:#666">&amp;lt;=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(haystack):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> haystack[start:end] &lt;span style="color:#666">==&lt;/span> needle:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>29. Divide Two Integers</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/29/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/29/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/divide-two-integers/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given two integers &lt;code>dividend&lt;/code> and &lt;code>divisor&lt;/code>, divide two integers without using multiplication, division, and mod operator.&lt;/p>
&lt;p>The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to &lt;code>8&lt;/code>, and &lt;code>-2.7335&lt;/code> would be truncated to &lt;code>-2&lt;/code>.&lt;/p>
&lt;p>Return the quotient after dividing &lt;code>dividend&lt;/code> by &lt;code>divisor&lt;/code>.&lt;/p>
&lt;p>Note: Assume we are dealing with an environment that could only store integers within the &lt;strong>32-bit&lt;/strong> signed integer range: &lt;code>[−231, 231 − 1]&lt;/code>. For this problem, if the quotient is strictly greater than &lt;code>231 - 1&lt;/code>, then return &lt;code>231 - 1&lt;/code>, and if the quotient is strictly less than -231, then return &lt;code>-231&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>Input: dividend = 10, divisor = 3
Output: 3
Explanation: 10/3 = 3.33333.. which is truncated to 3.&lt;/p>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>Input: dividend = 7, divisor = -3
Output: -2
Explanation: 7/-3 = -2.33333.. which is truncated to -2.&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Remove decimals from both &lt;code>divisor&lt;/code> and &lt;code>divident&lt;/code>&lt;/li>
&lt;li>Remember the result sign (&lt;code>positive&lt;/code> or &lt;code>&amp;lt; 0&lt;/code>)&lt;/li>
&lt;li>Subtract &lt;code>divisor&lt;/code> from &lt;code>divident&lt;/code> until result is less or equal to zero.&lt;/li>
&lt;/ol>
&lt;p>Works but is too slow in case small number &lt;code>divisor&lt;/code> (&lt;em>1&lt;/em>) and greater number &lt;code>dividend&lt;/code> (&lt;em>-2147483648&lt;/em>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">divide&lt;/span>(self, dividend: &lt;span style="color:#007020">int&lt;/span>, divisor: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(dividend)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(divisor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (dividend &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> divisor &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">or&lt;/span> (dividend &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> divisor &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dd &lt;span style="color:#666">&amp;gt;=&lt;/span> ds:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">-=&lt;/span> ds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> sign &lt;span style="color:#666">*&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Improve idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Sum &lt;code>divisor&lt;/code> after &amp;ldquo;success&amp;rdquo; subtract until result of subtract is &lt;code>&amp;gt; 0&lt;/code>&lt;/li>
&lt;li>Subtract &lt;code>divisor&lt;/code> back until we can subtract it from &lt;code>dividend&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">divide&lt;/span>(self, dividend: &lt;span style="color:#007020">int&lt;/span>, divisor: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(dividend)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(divisor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (dividend &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> divisor &lt;span style="color:#666">&amp;lt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">or&lt;/span> (dividend &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> divisor &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> divisor &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> dividend &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2147483648&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">2147483647&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">elif&lt;/span> divisor &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> sign &lt;span style="color:#666">*&lt;/span> dd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dd &lt;span style="color:#666">&amp;gt;=&lt;/span> ds:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#666">=&lt;/span> ds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> multiples &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># count of subtracts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dd &lt;span style="color:#666">&amp;gt;=&lt;/span> tmp: &lt;span style="color:#60a0b0;font-style:italic">## sum divisor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">-=&lt;/span> tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> multiples &lt;span style="color:#60a0b0;font-style:italic"># hense sum count of subtracts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#666">+=&lt;/span> tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> multiples &lt;span style="color:#666">+=&lt;/span> multiples
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> dd &lt;span style="color:#666">&amp;gt;=&lt;/span> ds:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">-=&lt;/span> ds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> sign &lt;span style="color:#666">*&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-idea">Better idea&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong> &lt;a href="https://romankurnovskii.com/en/posts/python-bitwise-operators/">Bit manipulation&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">divide&lt;/span>(self, dividend, divisor):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> positive &lt;span style="color:#666">=&lt;/span> (dividend &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">is&lt;/span> (divisor &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dividend, divisor &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(dividend), &lt;span style="color:#007020">abs&lt;/span>(divisor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dividend &lt;span style="color:#666">&amp;gt;=&lt;/span> divisor:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curr_divisor, num_divisors &lt;span style="color:#666">=&lt;/span> divisor, &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dividend &lt;span style="color:#666">&amp;gt;=&lt;/span> curr_divisor:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dividend &lt;span style="color:#666">-=&lt;/span> curr_divisor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> num_divisors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curr_divisor &lt;span style="color:#666">=&lt;/span> curr_divisor &lt;span style="color:#666">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_divisors &lt;span style="color:#666">=&lt;/span> num_divisors &lt;span style="color:#666">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> positive:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">min&lt;/span>(&lt;span style="color:#007020">max&lt;/span>(&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2147483648&lt;/span>, res), &lt;span style="color:#40a070">2147483647&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Explanation:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/divide-two-integers/discuss/715094/Python-fast-code-with-detailed-explanation">https://leetcode.com/problems/divide-two-integers/discuss/715094/Python-fast-code-with-detailed-explanation&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Another:&lt;/strong>&lt;/p>
&lt;p>Time: $O(\log^2 n)$
Space: $O(1)$&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">divide&lt;/span>(self, dividend: &lt;span style="color:#007020">int&lt;/span>, divisor: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> dividend &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">**&lt;/span>&lt;span style="color:#40a070">31&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> divisor &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">**&lt;/span>&lt;span style="color:#40a070">31&lt;/span> &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (dividend &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#666">^&lt;/span> (divisor &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dvd &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(dividend)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dvs &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">abs&lt;/span>(divisor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> dvd &lt;span style="color:#666">&amp;gt;=&lt;/span> dvs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> k &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> dvs &lt;span style="color:#666">&amp;lt;=&lt;/span> dvd:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#666">&amp;lt;&amp;lt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dvd &lt;span style="color:#666">-=&lt;/span> k &lt;span style="color:#666">*&lt;/span> dvs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">+=&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> sign &lt;span style="color:#666">*&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>33. Search in Rotated Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/33/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/33/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/search-in-rotated-sorted-array/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>There is an integer array &lt;code>nums&lt;/code> sorted in ascending order (with &lt;strong>distinct&lt;/strong> values).&lt;/p>
&lt;p>Prior to being passed to your function, nums is &lt;strong>possibly rotated&lt;/strong> at an unknown pivot index &lt;code>k&lt;/code> (&lt;code>1 &amp;lt;= k &amp;lt; nums.length&lt;/code>) such that the resulting array is &lt;code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed)&lt;/code>. For example, &lt;code>[0,1,2,4,5,6,7]&lt;/code> might be rotated at pivot index &lt;code>3&lt;/code> and become &lt;code>[4,5,6,7,0,1,2]&lt;/code>.&lt;/p>
&lt;p>Given the array &lt;code>nums&lt;/code> after the possible rotation and an integer target, return the index of target if it is in &lt;code>nums&lt;/code>, or &lt;code>-1&lt;/code> if it is not in &lt;code>nums&lt;/code>.&lt;/p>
&lt;p>You must write an algorithm with &lt;code>O(log n)&lt;/code> runtime complexity.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4&lt;/p>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1&lt;/p>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [1], target = 0
Output: -1&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>Values in the &lt;em>right&lt;/em> part of the array are &lt;strong>always lower&lt;/strong> than in the left part.&lt;/p>
&lt;ol>
&lt;li>Use binary search&lt;/li>
&lt;li>Define where to move (left or right)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">search&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>], target: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> left &lt;span style="color:#666">&amp;lt;=&lt;/span> right:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#666">=&lt;/span> (left &lt;span style="color:#666">+&lt;/span> right) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[mid] &lt;span style="color:#666">==&lt;/span> target:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[left] &lt;span style="color:#666">&amp;lt;=&lt;/span> nums[mid]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[left] &lt;span style="color:#666">&amp;lt;=&lt;/span> target &lt;span style="color:#666">&amp;lt;&lt;/span> nums[mid]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[mid] &lt;span style="color:#666">&amp;lt;&lt;/span> target &lt;span style="color:#666">&amp;lt;=&lt;/span> nums[right]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>34. Find First and Last Position of Element in Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/34/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/34/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an array of integers &lt;code>nums&lt;/code> sorted in non-decreasing order, find the starting and ending position of a given &lt;code>target&lt;/code> value.&lt;/p>
&lt;p>If &lt;code>target&lt;/code> is not found in the array, return &lt;code>[-1, -1]&lt;/code>.&lt;/p>
&lt;p>You must write an algorithm with &lt;code>O(log n)&lt;/code> runtime complexity.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]&lt;/p>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]&lt;/p>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;p>Input: nums = [], target = 0
Output: [-1,-1]&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Find &lt;code>target&lt;/code> index (&lt;code>target_index&lt;/code>) using &lt;a href="https://romankurnovskii.com/en/tracks/algorithms-101/algorithms/#binary-search">Binary Search&lt;/a>
&lt;ol>
&lt;li>If &lt;strong>not exist&lt;/strong> then return &lt;code>[-1, -1]&lt;/code>&lt;/li>
&lt;li>If &lt;strong>exist&lt;/strong> then goto step 2&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>We got the middle index. For now this is the &lt;em>most left&lt;/em> and &lt;em>most right&lt;/em> index.&lt;/li>
&lt;li>Divide &lt;code>nums&lt;/code> into two arrays: &lt;code>left_nums&lt;/code> and &lt;code>right_nums&lt;/code>:
&lt;ol>
&lt;li>left_nums = nums[0:target_index]&lt;/li>
&lt;li>right_nums = nums[target_index:]&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Find the &lt;em>most left&lt;/em> &lt;code>target&lt;/code> in &lt;code>left_nums&lt;/code>. (Set &lt;strong>right&lt;/strong> border in subarray)&lt;/li>
&lt;li>Find the &lt;em>most right&lt;/em> &lt;code>target&lt;/code> in &lt;code>right_nums&lt;/code>. (Set &lt;strong>left&lt;/strong> border in subarray)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">searchRange&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>], target: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">find_target&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> left &lt;span style="color:#666">&amp;lt;=&lt;/span> right:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#666">=&lt;/span> (left &lt;span style="color:#666">+&lt;/span> right) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[mid] &lt;span style="color:#666">==&lt;/span> target:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[mid] &lt;span style="color:#666">&amp;lt;&lt;/span> target:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> mid &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">find_most_left&lt;/span>(right_idx):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> right_idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;=&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> (l &lt;span style="color:#666">+&lt;/span> r) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[m] &lt;span style="color:#666">&amp;lt;&lt;/span> target:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> m &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> m &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">find_most_right&lt;/span>(left_idx):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> left_idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;=&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> (l &lt;span style="color:#666">+&lt;/span> r) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nums[m] &lt;span style="color:#666">==&lt;/span> target: &lt;span style="color:#60a0b0;font-style:italic"># ex: [8, 8, 8, 9, 10]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> l &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># ex: [8, 8, 8, 9, 10]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> m &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_idx &lt;span style="color:#666">=&lt;/span> find_target()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> target_idx &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> [&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> left &lt;span style="color:#666">=&lt;/span> find_most_left(target_idx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> right &lt;span style="color:#666">=&lt;/span> find_most_right(target_idx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> [left, right]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="code-ver2">Code Ver2&lt;/h2>
&lt;p>Use prebuilt Python functions:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.python.org/3/library/bisect.html#bisect.bisect_left">&lt;code>bisect_left&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/library/bisect.html#bisect.bisect_right">&lt;code>bisect_right&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">searchRange&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>], target: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> bisect_left(nums, target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#007020;font-weight:bold">or&lt;/span> nums[l] &lt;span style="color:#666">!=&lt;/span> target:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> bisect_right(nums, target) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l, r
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>36. Valid Sudoku</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/36/</link><pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/36/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/valid-sudoku/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Determine if a &lt;code>9 x 9&lt;/code> Sudoku board is valid. Only the filled cells need to be validated according to the following rules:&lt;/p>
&lt;p>Each row must contain the digits &lt;code>1-9&lt;/code> without repetition.
Each column must contain the digits &lt;code>1-9&lt;/code> without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits &lt;code>1-9&lt;/code> without repetition.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.&lt;/li>
&lt;li>Only the filled cells need to be validated according to the mentioned rules.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"
id="zoom-default"
alt="example"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: board =
[[&amp;quot;5&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;1&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;3&amp;quot;]
,[&amp;quot;4&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;1&amp;quot;]
,[&amp;quot;7&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;4&amp;quot;,&amp;quot;1&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;5&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;9&amp;quot;]]
Output: true
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: board =
[[&amp;quot;8&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;1&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;3&amp;quot;]
,[&amp;quot;4&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;1&amp;quot;]
,[&amp;quot;7&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;4&amp;quot;,&amp;quot;1&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;5&amp;quot;]
,[&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;9&amp;quot;]]
Output: false
Explanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.
&lt;/code>&lt;/pre>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/36.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">isValidSudoku&lt;/span>(self, board: List[List[&lt;span style="color:#007020">str&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exist &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">9&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">9&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> board[i][j]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;.&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uniqs &lt;span style="color:#666">=&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (i, x),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (x, j),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#007020">int&lt;/span>(i&lt;span style="color:#666">/&lt;/span>&lt;span style="color:#40a070">3&lt;/span>), &lt;span style="color:#007020">int&lt;/span>(j&lt;span style="color:#666">/&lt;/span>&lt;span style="color:#40a070">3&lt;/span>), x) ) &lt;span style="color:#60a0b0;font-style:italic"># devide 3 because of third check in 3x3 block&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> z &lt;span style="color:#007020;font-weight:bold">in&lt;/span> uniqs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> z &lt;span style="color:#007020;font-weight:bold">in&lt;/span> exist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exist&lt;span style="color:#666">.&lt;/span>add(z)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>38. Count and Say</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/38/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/38/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/count-and-say/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>The &lt;strong>count-and-say&lt;/strong> sequence is a sequence of digit strings defined by the recursive formula:&lt;/p>
&lt;p>&lt;code>countAndSay(1) = &amp;quot;1&amp;quot;&lt;/code>
&lt;code>countAndSay(n)&lt;/code> is the way you would &amp;ldquo;say&amp;rdquo; the digit string from &lt;code>countAndSay(n-1)&lt;/code>, which is then converted into a different digit string.
To determine how you &amp;ldquo;say&amp;rdquo; a digit string, split it into the &lt;strong>minimal&lt;/strong> number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.&lt;/p>
&lt;p>For example, the saying and conversion for digit string &lt;code>&amp;quot;3322251&amp;quot;&lt;/code>:
&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/10/23/countandsay.jpg"
id="zoom-default"
alt="example"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Given a positive integer &lt;code>n&lt;/code>, return the &lt;code>nth&lt;/code> term of the &lt;strong>count-and-say&lt;/strong> sequence.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 1
Output: &amp;quot;1&amp;quot;
Explanation: This is the base case.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 4
Output: &amp;quot;1211&amp;quot;
Explanation:
countAndSay(1) = &amp;quot;1&amp;quot;
countAndSay(2) = say &amp;quot;1&amp;quot; = one 1 = &amp;quot;11&amp;quot;
countAndSay(3) = say &amp;quot;11&amp;quot; = two 1's = &amp;quot;21&amp;quot;
countAndSay(4) = say &amp;quot;21&amp;quot; = one 2 + one 1 = &amp;quot;12&amp;quot; + &amp;quot;11&amp;quot; = &amp;quot;1211&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">countAndSay&lt;/span>(self, n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">str&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> n &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_str &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> i &lt;span style="color:#666">&amp;lt;&lt;/span> l:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> i &lt;span style="color:#666">&amp;lt;&lt;/span> l &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> res[i] &lt;span style="color:#666">==&lt;/span> res[i&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_str &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#007020">str&lt;/span>(count) &lt;span style="color:#666">+&lt;/span> res[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> new_str
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>46. Permutations</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/46/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/46/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/permutations/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an array &lt;code>nums&lt;/code> of distinct integers, return &lt;em>all the possible permutations&lt;/em>. You can return the answer in &lt;strong>any order&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [0,1]
Output: [[0,1],[1,0]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [1]
Output: [[1]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Draw a decigion tree&lt;/li>
&lt;li>Fix when &lt;em>branch&lt;/em> is &lt;em>ready&lt;/em> to return&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../../assets/46.jpg"
id="zoom-default"
alt="test-case"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Implementation:&lt;/p>
&lt;ol>
&lt;li>Recursive:
&lt;ol>
&lt;li>Go through every value in &lt;code>nums&lt;/code>&lt;/li>
&lt;li>Pop value&lt;/li>
&lt;li>call &lt;code>perm()&lt;/code> with updated &lt;code>nums&lt;/code>&lt;/li>
&lt;li>from each call(step) append &amp;lsquo;poped&amp;rsquo; value from step 2&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">permute&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[List[&lt;span style="color:#007020">int&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result_permutation &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># base case&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> [nums[:]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> _ &lt;span style="color:#007020;font-weight:bold">in&lt;/span> nums:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_removed &lt;span style="color:#666">=&lt;/span> nums&lt;span style="color:#666">.&lt;/span>pop(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># remove current element before next step&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> permutations &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>permute(nums)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> perm &lt;span style="color:#007020;font-weight:bold">in&lt;/span> permutations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> perm&lt;span style="color:#666">.&lt;/span>append(tmp_removed)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums&lt;span style="color:#666">.&lt;/span>append(tmp_removed)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result_permutation&lt;span style="color:#666">.&lt;/span>extend(permutations)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result_permutation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=s7AvT7cGdSo">https://www.youtube.com/watch?v=s7AvT7cGdSo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://walkccc.me/LeetCode/problems/0046/">https://walkccc.me/LeetCode/problems/0046/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>48. Rotate Image</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/48/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/48/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/rotate-image/">LeetCode problem 48&lt;/a>&lt;/p>
&lt;p>You are given an &lt;code>n x n&lt;/code> 2D &lt;code>matrix&lt;/code> representing an image, rotate the image by &lt;strong>90 degrees&lt;/strong> (clockwise).&lt;/p>
&lt;p>You have to rotate the image &lt;strong>in-place&lt;/strong>, which means you have to modify the input 2D matrix directly. &lt;strong>DO NOT&lt;/strong> allocate another 2D matrix and do the rotation.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg"
id="zoom-default"
alt="Example LeetCode 48. Rotate Image"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg"
id="zoom-default"
alt="Example LeetCode 48. Rotate Image"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
&lt;/code>&lt;/pre>
&lt;h2 id="idea">Idea&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">rotate&lt;/span>(self, matrix: List[List[&lt;span style="color:#007020">int&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> Do not return anything, modify matrix in-place instead.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(matrix) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(r&lt;span style="color:#666">-&lt;/span>l): &lt;span style="color:#60a0b0;font-style:italic"># for not only &amp;#34;corners&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#666">=&lt;/span> l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b &lt;span style="color:#666">=&lt;/span> r
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> top_left &lt;span style="color:#666">=&lt;/span> matrix[t][l &lt;span style="color:#666">+&lt;/span> i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[t][l &lt;span style="color:#666">+&lt;/span> i] &lt;span style="color:#666">=&lt;/span> matrix[b &lt;span style="color:#666">-&lt;/span> i][l] &lt;span style="color:#60a0b0;font-style:italic"># top left=bottom left&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[b &lt;span style="color:#666">-&lt;/span> i][l] &lt;span style="color:#666">=&lt;/span> matrix[b][r &lt;span style="color:#666">-&lt;/span> i] &lt;span style="color:#60a0b0;font-style:italic"># bottom left=bottom right&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[b][r &lt;span style="color:#666">-&lt;/span> i] &lt;span style="color:#666">=&lt;/span> matrix[t&lt;span style="color:#666">+&lt;/span>i][r] &lt;span style="color:#60a0b0;font-style:italic"># bottom right=top right&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[t &lt;span style="color:#666">+&lt;/span> i][r] &lt;span style="color:#666">=&lt;/span> top_left &lt;span style="color:#60a0b0;font-style:italic"># top right=top left&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="approach-2-reverse">Approach 2: Reverse&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">rotate&lt;/span>(self, matrix: List[List[&lt;span style="color:#007020">int&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix&lt;span style="color:#666">.&lt;/span>reverse()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(matrix)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#007020">len&lt;/span>(matrix)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[i][j], matrix[j][i] &lt;span style="color:#666">=&lt;/span> matrix[j][i], matrix[i][j]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=fMSJSS7eO1w">https://www.youtube.com/watch?v=fMSJSS7eO1w&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://walkccc.me/LeetCode/problems/0048/">https://walkccc.me/LeetCode/problems/0048/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>49. Group Anagrams</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/49/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/49/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/group-anagrams/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an array of strings &lt;code>strs&lt;/code>, group &lt;strong>the anagrams&lt;/strong> together. You can return the answer in &lt;strong>any order&lt;/strong>.&lt;/p>
&lt;p>An &lt;strong>Anagram&lt;/strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: strs = [&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;,&amp;quot;tan&amp;quot;,&amp;quot;ate&amp;quot;,&amp;quot;nat&amp;quot;,&amp;quot;bat&amp;quot;]
Output: [[&amp;quot;bat&amp;quot;],[&amp;quot;nat&amp;quot;,&amp;quot;tan&amp;quot;],[&amp;quot;ate&amp;quot;,&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: strs = [&amp;quot;&amp;quot;]
Output: [[&amp;quot;&amp;quot;]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: strs = [&amp;quot;a&amp;quot;]
Output: [[&amp;quot;a&amp;quot;]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">groupAnagrams&lt;/span>(self, strs: List[&lt;span style="color:#007020">str&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[List[&lt;span style="color:#007020">str&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> s &lt;span style="color:#007020;font-weight:bold">in&lt;/span> strs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_sort &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>join(&lt;span style="color:#007020">sorted&lt;/span>(s))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values &lt;span style="color:#666">=&lt;/span> dd&lt;span style="color:#666">.&lt;/span>get(s_sort, [])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> values&lt;span style="color:#666">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dd[s_sort] &lt;span style="color:#666">=&lt;/span> values
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> dd&lt;span style="color:#666">.&lt;/span>values()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Approach 2:&lt;/strong>&lt;/p>
&lt;p>Intuition:&lt;/p>
&lt;p>Two strings are anagrams if and only if their character counts (respective number of occurrences of each character) are the same.&lt;/p>
&lt;p>Algorithm:&lt;/p>
&lt;p>We can transform each string &lt;code>s&lt;/code> into a character count, count\text{count}count, consisting of 26 non-negative integers representing the number of &lt;code>a&lt;/code>&amp;rsquo;s, &lt;code>b&lt;/code>&amp;rsquo;s, z&amp;rsquo;s, etc. We use these counts as the basis for our hash map.&lt;/p>
&lt;p>In python, the representation will be a tuple of the counts. For example, &lt;code>abbccc&lt;/code> will be &lt;code>(1, 2, 3, 0, 0, ..., 0)&lt;/code>, where again there are 26 entries total.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://leetcode.com/problems/group-anagrams/solutions/127405/Figures/49_groupanagrams2.png"
id="zoom-default"
alt="example"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">groupAnagrams&lt;/span>(strs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> collections&lt;span style="color:#666">.&lt;/span>defaultdict(&lt;span style="color:#007020">list&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> s &lt;span style="color:#007020;font-weight:bold">in&lt;/span> strs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">26&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> c &lt;span style="color:#007020;font-weight:bold">in&lt;/span> s:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count[&lt;span style="color:#007020">ord&lt;/span>(c) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020">ord&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>)] &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#007020">tuple&lt;/span>(count)]&lt;span style="color:#666">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res&lt;span style="color:#666">.&lt;/span>values()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/group-anagrams/solutions/127405/group-anagrams/">LeetCode expl&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>50. Pow(x, n)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/50/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/50/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/powx-n/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Implement &lt;code>pow(x, n)&lt;/code>, which calculates &lt;code>x&lt;/code> raised to the power &lt;code>n&lt;/code> (i.e., &lt;code>x^n&lt;/code>).&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: x = 2.00000, n = 10
Output: 1024.00000
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: x = 2.10000, n = 3
Output: 9.26100
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">myPow&lt;/span>(self, x: &lt;span style="color:#007020">float&lt;/span>, n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">float&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">**&lt;/span> n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Approach 2:&lt;/strong>&lt;/p>
&lt;p>Recursive&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">myPow&lt;/span>(self, x, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> n:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">/&lt;/span> self&lt;span style="color:#666">.&lt;/span>myPow(x, &lt;span style="color:#666">-&lt;/span>n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">*&lt;/span> self&lt;span style="color:#666">.&lt;/span>myPow(x, n&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>myPow(x &lt;span style="color:#666">*&lt;/span> x, n&lt;span style="color:#666">/&lt;/span>&lt;span style="color:#40a070">2&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Approach 3:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">myPow&lt;/span>(self, x, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">/&lt;/span> x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">pow&lt;/span> &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> n:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">&amp;amp;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">pow&lt;/span> &lt;span style="color:#666">*=&lt;/span> x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">*=&lt;/span> x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">pow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>53. Maximum Subarray</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/53/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/53/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/maximum-subarray/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an integer array &lt;code>nums&lt;/code>, find the subarray which has the largest sum and return &lt;em>its sum&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [1]
Output: 1
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [5,4,-1,7,8]
Output: 23
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">maxSubArray&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_ &lt;span style="color:#666">=&lt;/span> nums[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max2 &lt;span style="color:#666">=&lt;/span> nums[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> max_
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#007020">len&lt;/span>(nums)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_ &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(nums[i], nums[i] &lt;span style="color:#666">+&lt;/span> max_)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(max_, max2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> max2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>55. Jump Game</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/55/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/55/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/maximum-subarray/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>You are given an integer array &lt;code>nums&lt;/code>. You are initially positioned at the array&amp;rsquo;s first index, and each element in the array represents your maximum jump length at that position.&lt;/p>
&lt;p>Return true if you can reach the last index, or false otherwise.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;p>Idea: go forward on each step and &lt;em>mark&lt;/em> next cell if can achieve it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">canJump&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> last_i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> last_i &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> last_i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> nums[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(last_i):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> el &lt;span style="color:#666">=&lt;/span> nums[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> el &lt;span style="color:#007020;font-weight:bold">or&lt;/span> nn[i&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(el):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn[i&lt;span style="color:#666">+&lt;/span>j&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">=&lt;/span> el
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> nn[last_i &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Approach 2:&lt;/strong>&lt;/p>
&lt;p>Going forwards. &lt;code>m&lt;/code> tells the maximum index we can reach so far.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">canJump&lt;/span>(self, nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i, n &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">enumerate&lt;/span>(nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">&amp;gt;&lt;/span> m:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(m, i &lt;span style="color:#666">+&lt;/span> n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">canJump&lt;/span>(self, nums: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> i &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums) &lt;span style="color:#007020;font-weight:bold">and&lt;/span> i &lt;span style="color:#666">&amp;lt;=&lt;/span> m:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(m, i &lt;span style="color:#666">+&lt;/span> nums[i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> i &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>56. Merge Intervals</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/56/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/56/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/maximum-subarray/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an array of &lt;code>intervals&lt;/code> where &lt;code>intervals[i] = [starti, endi]&lt;/code>, merge all overlapping intervals, and return an array of the &lt;em>non-overlapping intervals that cover all the intervals in the input&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">merge&lt;/span>(self, intervals: List[List[&lt;span style="color:#007020">int&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[List[&lt;span style="color:#007020">int&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> intervals&lt;span style="color:#666">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> [intervals[&lt;span style="color:#40a070">0&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> ir &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#007020">len&lt;/span>(intervals)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> intervals[ir][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">&amp;gt;=&lt;/span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#007020;font-weight:bold">and&lt;/span> intervals[ir][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">&amp;lt;=&lt;/span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>]: &lt;span style="color:#60a0b0;font-style:italic"># [1,3],[2,6]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">min&lt;/span>(intervals[ir][&lt;span style="color:#40a070">0&lt;/span>], res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(intervals[ir][&lt;span style="color:#40a070">1&lt;/span>], res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">elif&lt;/span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">&amp;gt;=&lt;/span> intervals[ir][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#007020;font-weight:bold">and&lt;/span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">&amp;lt;=&lt;/span> intervals[ir][&lt;span style="color:#40a070">1&lt;/span>]: &lt;span style="color:#60a0b0;font-style:italic"># [1,3],[0,4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">min&lt;/span>(intervals[ir][&lt;span style="color:#40a070">0&lt;/span>], res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(intervals[ir][&lt;span style="color:#40a070">1&lt;/span>], res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#666">.&lt;/span>append(intervals[ir])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Approach 2:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">merge&lt;/span>(self, intervals: List[List[&lt;span style="color:#007020">int&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[List[&lt;span style="color:#007020">int&lt;/span>]]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> interval &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">sorted&lt;/span>(intervals):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> res &lt;span style="color:#007020;font-weight:bold">or&lt;/span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">&amp;lt;&lt;/span> interval[&lt;span style="color:#40a070">0&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#666">.&lt;/span>append(interval)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">max&lt;/span>(res[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#40a070">1&lt;/span>], interval[&lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>62. Unique Paths</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/62/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/62/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/unique-paths/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>There is a robot on an &lt;code>m x n&lt;/code> grid. The robot is initially located at the top-left corner (i.e., &lt;code>grid[0][0]&lt;/code>). The robot tries to move to the bottom-right corner (i.e., &lt;code>grid[m - 1][n - 1]&lt;/code>). The robot can only move either down or right at any point in time.&lt;/p>
&lt;p>Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.&lt;/p>
&lt;p>The test cases are generated so that the answer will be less than or equal to &lt;code>2 * 10^9&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png"
id="zoom-default"
alt="LeetCode 62. Unique Paths"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: m = 3, n = 7
Output: 28
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: m = 3, n = 2
Output: 3
Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -&amp;gt; Down -&amp;gt; Down
2. Down -&amp;gt; Down -&amp;gt; Right
3. Down -&amp;gt; Right -&amp;gt; Down
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/unique-paths/submissions/874653332/">LeetCode Submission&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">uniquePaths&lt;/span>(self, m: &lt;span style="color:#007020">int&lt;/span>, n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> m &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> n &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix &lt;span style="color:#666">=&lt;/span> [ [&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(n)] &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(m)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, m):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_above &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_above &lt;span style="color:#666">=&lt;/span> matrix[i&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][j]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> j &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_left &lt;span style="color:#666">=&lt;/span> matrix[i][j&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[i][j] &lt;span style="color:#666">=&lt;/span> max_above &lt;span style="color:#666">+&lt;/span> max_left
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#666">=&lt;/span> matrix[i][j]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">uniquePaths&lt;/span>(self, m: &lt;span style="color:#007020">int&lt;/span>, n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix &lt;span style="color:#666">=&lt;/span> [[&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">*&lt;/span> n &lt;span style="color:#007020;font-weight:bold">for&lt;/span> _ &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(m)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, m):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[i][j] &lt;span style="color:#666">=&lt;/span> matrix[i &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>][j] &lt;span style="color:#666">+&lt;/span> matrix[i][j &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> matrix[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>][&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>66. Plus One</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/66/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/66/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/plus-one/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>You are given a large integer represented as an integer array &lt;code>digits&lt;/code>, where each &lt;code>digits[i]&lt;/code> is the &lt;code>ith&lt;/code> digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading &lt;code>0&lt;/code>&amp;rsquo;s.&lt;/p>
&lt;p>Increment the large integer by one and return the resulting array of digits.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">plusOne&lt;/span>(self, digits: List[&lt;span style="color:#007020">int&lt;/span>]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(digits) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> i &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> digits[i] &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">9&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> digits[i] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">+&lt;/span> digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> digits[i] &lt;span style="color:#666">=&lt;/span> digits[i] &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> digits
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>69. Sqrt(x)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/69/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/69/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/sqrtx/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.&lt;/p>
&lt;p>You must not use any built-in exponent function or operator.&lt;/p>
&lt;p>For example, do not use &lt;code>pow(x, 0.5)&lt;/code> in c++ or &lt;code>x ** 0.5&lt;/code> in python.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: x = 4
Output: 2
Explanation: The square root of 4 is 2, so we return 2.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">mySqrt&lt;/span>(self, x: &lt;span style="color:#007020">int&lt;/span>, div&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#666">=&lt;/span> x &lt;span style="color:#666">//&lt;/span> div
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s1 &lt;span style="color:#666">=&lt;/span> (s &lt;span style="color:#666">+&lt;/span> div) &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> s1 &lt;span style="color:#666">*&lt;/span> s1 &lt;span style="color:#666">&amp;gt;&lt;/span> x:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s1 &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>mySqrt(x, s1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> s1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> s1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>70. Climbing Stairs</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/70/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/70/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/climbing-stairs/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>You are climbing a staircase. It takes &lt;code>n&lt;/code> steps to reach the top.&lt;/p>
&lt;p>Each time you can either climb &lt;code>1&lt;/code> or &lt;code>2&lt;/code> steps. In how many distinct ways can you climb to the top?&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
&lt;/code>&lt;/pre>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;p>&lt;strong>Idea:&lt;/strong>&lt;/p>
&lt;p>Tried to calculate by hand. There is a &lt;a href="https://www.mathsisfun.com/numbers/fibonacci-sequence.html">sequence Fibonacci&lt;/a> here&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">climbStairs&lt;/span>(self, n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev1 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> n &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current &lt;span style="color:#666">=&lt;/span> prev1 &lt;span style="color:#666">+&lt;/span> prev2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev1 &lt;span style="color:#666">=&lt;/span> prev2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prev2 &lt;span style="color:#666">=&lt;/span> current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> current
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>73. Set Matrix Zeroes</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/73/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/73/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/set-matrix-zeroes/description/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given an &lt;code>m x n&lt;/code> integer matrix &lt;code>matrix&lt;/code>, if an element is &lt;code>0&lt;/code>, set its entire row and column to 0&amp;rsquo;s.&lt;/p>
&lt;p>You must do it in place.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg"
id="zoom-default"
alt="73. Set Matrix Zeroes"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg"
id="zoom-default"
alt="73. Set Matrix Zeroes"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Approach 1:&lt;/strong>&lt;/p>
&lt;p>Idea:&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/set-matrix-zeroes/submissions/885540169/">LeetCode Submission&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">setZeroes&lt;/span>(self, matrix: List[List[&lt;span style="color:#007020">int&lt;/span>]]) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rows &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(matrix)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cols &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(matrix[&lt;span style="color:#40a070">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># 1. Check first row/column for zero&amp;#39;s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> first_row_has_zero &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> matrix[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> first_col_has_zero &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">list&lt;/span>(&lt;span style="color:#007020">zip&lt;/span>(&lt;span style="color:#666">*&lt;/span>matrix))[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># 2. Check other cells in `matrix` and save info in the 1st row/col if cell has zero&amp;#39;s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, rows):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, cols):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> matrix[i][j] &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[&lt;span style="color:#40a070">0&lt;/span>][j] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># 1st row&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[i][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># 1st col&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># 3. Loop again through first row/column and overwrite cells according to the data from 1st row/column&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># except the 1st row/col&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, rows):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, cols):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> matrix[&lt;span style="color:#40a070">0&lt;/span>][j] &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> matrix[i][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[i][j] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Fill 0s for the 1st row if needed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> first_row_has_zero:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matrix[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> cols
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Fill 0s for the 1st col if needed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> first_col_has_zero:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> row &lt;span style="color:#007020;font-weight:bold">in&lt;/span> matrix:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> row[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>88. Merge Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/88/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/88/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/merge-sorted-array/">LeetCode problem&lt;/a>&lt;/p>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">merge&lt;/span>(self, nums1: List[&lt;span style="color:#007020">int&lt;/span>], m: &lt;span style="color:#007020">int&lt;/span>, nums2: List[&lt;span style="color:#007020">int&lt;/span>], n: &lt;span style="color:#007020">int&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> Do not return anything, modify nums1 in-place instead.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(nums1) &lt;span style="color:#666">-&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> nums2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums1[i] &lt;span style="color:#666">=&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums1&lt;span style="color:#666">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>94. Binary Tree Inorder Traversal</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/94/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/94/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/">LeetCode problem&lt;/a>&lt;/p>
&lt;p>Given the &lt;code>root&lt;/code> of a binary tree, return the &lt;code>inorder traversal of its nodes' values&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Example 1:&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;pre>&lt;code>Input: root = [1,null,2,3]
Output: [1,3,2]
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: root = []
Output: []
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Example 3:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Input: root = [1]
Output: [1]
&lt;/code>&lt;/pre>
&lt;h2 id="thoughts">Thoughts&lt;/h2>
&lt;p>Don&amp;rsquo;t understand what needed. Why:&lt;/p>
&lt;ul>
&lt;li>&lt;code>1-null-2-3&lt;/code> becomes &lt;code>1-3-2&lt;/code>&lt;/li>
&lt;li>&lt;code>[1,2,5,7,8,9,10]&lt;/code> becomes &lt;code>[7,2,8,1,9,5,10]&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>In &lt;code>1-null-2-3&lt;/code> &lt;code>1&lt;/code> becomes the first because we loop to its left node which is &lt;code>null&lt;/code>, then come back and first value here is &lt;code>1&lt;/code>.&lt;/p>
&lt;h2 id="first-accepted">First accepted&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Definition for a binary tree node.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># class TreeNode:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># def __init__(self, val=0, left=None, right=None):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.val = val&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.left = left&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># self.right = right&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Solution&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">inorderTraversal&lt;/span>(self, root: Optional[TreeNode]) &lt;span style="color:#666">-&amp;gt;&lt;/span> List[&lt;span style="color:#007020">int&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># add all left, then add right&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_child&lt;/span>(head):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> head:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get_child(head&lt;span style="color:#666">.&lt;/span>left)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#666">.&lt;/span>append(head&lt;span style="color:#666">.&lt;/span>val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get_child(head&lt;span style="color:#666">.&lt;/span>right)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get_child(root)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="better-solution">Better solution&lt;/h2>
&lt;p>Morris Traversal&lt;/p>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/solution/">LeetCode explanation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Short description from article</title><link>https://romankurnovskii.com/en/tracks/disser/utils/text_2_short/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/disser/utils/text_2_short/</guid><description>&lt;rawhtml>
&lt;html>
&lt;head>
&lt;link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
&lt;script src="https://pyscript.net/latest/pyscript.js">&lt;/script>
&lt;/head>
&lt;body>
&lt;py-script src="https://romankurnovskii.com/en/tracks/disser/utils/pyscript_get_short_text.py"> &lt;/py-script>
&lt;div class="w-full mb-4 border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600">
&lt;div class="px-4 py-2 bg-white rounded-t-lg dark:bg-gray-800">
&lt;textarea
id="pyscripttextarea" rows="13"
class="w-full px-0 text-sm text-gray-900 bg-white border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400"
placeholder="Insert text article" required>
&lt;/textarea>
&lt;/div>
&lt;div class="flex justify-end py-2 border-t dark:border-gray-600">
&lt;input
id="pyscriptsentnums" type="text"
class="p-2.5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
placeholder="Sentences count" required/>
&lt;button
id="pyscriptbutton" py-click="text_to_short()" type="submit"
class="py-button inline-flex items-center mx-10 py-2.5 px-8 border-1 text-xs font-medium text-center rounded-lg focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900 hover:bg-blue-800">
Create
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p id="pyscriptoutput" class="text-yalla">&lt;/p>
&lt;/body>
&lt;/html>
&lt;/rawhtml></description></item><item><title>341. Flatten Nested List Iterator</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/341/</link><pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/341/</guid><description>&lt;h2 id="задача">Задача&lt;/h2>
&lt;p>Дан вложенный список целых чисел. Реализуйте итератор, который &amp;ldquo;разворачивает&amp;rdquo; этот вложенный список.&lt;/p>
&lt;h2 id="подход">Подход&lt;/h2>
&lt;p>Задача состоит в реализации итератора, который будет последовательно возвращать все элементы из вложенного списка. Вложенный список может содержать как обычные числа, так и другие вложенные списки. Наивное решение заключается в том, чтобы сначала полностью &amp;ldquo;развернуть&amp;rdquo; весь вложенный список в одномерный список, а затем реализовать итератор для этого одномерного списка.&lt;/p>
&lt;h2 id="алгоритм">Алгоритм&lt;/h2>
&lt;ol>
&lt;li>Инициализация: Создать одномерный список и заполнить его элементами из вложенного списка.&lt;/li>
&lt;li>next(): Возвращает следующий элемент одномерного списка.&lt;/li>
&lt;li>hasNext(): Проверяет, остались ли еще элементы для итерации.&lt;/li>
&lt;/ol>
&lt;h2 id="решение">Решение&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">NestedIterator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, nestedList):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>stack &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>flatten(nestedList)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>stack&lt;span style="color:#666">.&lt;/span>reverse()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Рекурсивная функция для &amp;#34;разворачивания&amp;#34; вложенного списка&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">flatten&lt;/span>(self, nestedList):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> item &lt;span style="color:#007020;font-weight:bold">in&lt;/span> nestedList:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> item&lt;span style="color:#666">.&lt;/span>isInteger():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>stack&lt;span style="color:#666">.&lt;/span>append(item&lt;span style="color:#666">.&lt;/span>getInteger())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>flatten(item&lt;span style="color:#666">.&lt;/span>getList())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">next&lt;/span>(self) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">int&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>stack&lt;span style="color:#666">.&lt;/span>pop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">hasNext&lt;/span>(self) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#007020">bool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">len&lt;/span>(self&lt;span style="color:#666">.&lt;/span>stack) &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>В этом решении мы сначала &amp;ldquo;разворачиваем&amp;rdquo; весь вложенный список в одномерный список, используя рекурсивную функцию flatten. Затем, для получения следующего элемента и проверки наличия следующего элемента, используются методы next() и hasNext().&lt;/p></description></item><item><title>Questions</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</guid><description>&lt;p>On this page you can find 50 random questions.&lt;/p>
&lt;p>To get prepared for exam you can use &lt;a href="https://www.cloud-exam-prepare.com">cloud-exam-prepare.com&lt;/a>&lt;/p>
&lt;h2 id="q1---q10">Q1 - Q10&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are developing an API in Amazon API Gateway that several mobile applications will use to interface with a back end service in AWS being written by another developer. You can use a(n)____ integration for your API methods to develop and test your client applications before the other developer has completed work on the back end.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>HTTP proxy&lt;/li>
&lt;li>mock&lt;/li>
&lt;li>AWS service proxy&lt;/li>
&lt;li>Lambda function&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html">http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html&lt;/a>&lt;/p>
&lt;p>Amazon API Gateway supports mock integrations for API methods.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>You are creating multiple resources using multiple CloudFormation templates. One of the resources (Resource B) needs the ARN value of another resource (resource A) before it is created.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What steps can you take in this situation? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use a template to first create Resource A with the ARN as an output value.&lt;/li>
&lt;li>Use a template to create Resource B and reference the ARN of Resource A using Fn::GetAtt.&lt;/li>
&lt;li>Hard code the ARN value output from creating Resource A into the second template.&lt;/li>
&lt;li>Just create Resource B.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>A company with global users is using a content delivery network service to ensure low latency for all customers. The company has several applications that require similar cache behavior.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which API command can a developer use to ensure cache storage consistency with minimal duplication?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>CreateReusableDelegationSet with Route 53&lt;/li>
&lt;li>CreateStackSet with CloudFormation&lt;/li>
&lt;li>CreateGlobalReplicationGroup with ElastiCache&lt;/li>
&lt;li>CreateCachePolicy with CloudFront&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateCachePolicy.html">https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateCachePolicy.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>You are creating a few test functions to demonstrate the ease of developing serverless applications. You want to use the command line to deploy &lt;a href="../lambda">AWS Lambda&lt;/a> functions, an Amazon API Gateway, and &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> tables.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the easiest way to develop these simple applications?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Install AWS SAM CLI and run “sam init [options]” with the templates’ data.&lt;/li>
&lt;li>Use AWS step function visual workflow and insert your templates in the states&lt;/li>
&lt;li>Save your template in the Serverless Application Repository and use AWS SAM&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS SAM - AWS Serverless Application Model&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/serverless/sam/">https://aws.amazon.com/serverless/sam/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>What will happen if you delete an unused custom deployment configuration in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>You will no longer be able to associate the deleted deployment configuration with new deployments and new deployment groups.&lt;/li>
&lt;li>Nothing will happen, as the custom deployment configuration was unused.&lt;/li>
&lt;li>All deployment groups associated with the custom deployment configuration will also be deleted.&lt;/li>
&lt;li>All deployments associated with the custom deployment configuration will be terminated.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html&lt;/a>&lt;/p>
&lt;p>Can delete only if unused.&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q6">Q6&lt;/h3>
&lt;p>&lt;strong>What happens when you delete a deployment group with the AWS CLI in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>All details associated with that deployment group will be moved from AWS CodeDeploy to AWS OpsWorks.&lt;/li>
&lt;li>The instances used in the deployment group will change.&lt;/li>
&lt;li>All details associated with that deployment group will also be deleted from AWS CodeDeploy.&lt;/li>
&lt;li>The instances that were participating in the deployment group will run once again.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html&lt;/a>&lt;/p>
&lt;p>If you delete a deployment group, all details associated with that deployment group will also be deleted from CodeDeploy. The instances used in the deployment group will remain unchanged. This action cannot be undone.&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q7">Q7&lt;/h3>
&lt;p>&lt;strong>You are configuring a Jenkins project that is installed on an Amazon &lt;a href="../ec2">EC2&lt;/a> instance running a Windows operating system. You want this Jenkins project to integrate with AWS CodePipeline.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which actions should you take to make this function perform correctly? (2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Restart all Amazon &lt;a href="../ec2">EC2&lt;/a> instances that are running a Windows operating system.&lt;/li>
&lt;li>Provide the IAM user credentials to integrate AWS CodePipeline.&lt;/li>
&lt;li>Fill out the required fields for your proxy host.&lt;/li>
&lt;li>Modify the PATH variable to include the directory where you installed Jenkins on all Amazon &lt;a href="../ec2">EC2&lt;/a> instance that are running a Windows operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html">https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q8">Q8&lt;/h3>
&lt;p>&lt;strong>You are deploying Multi-Factor Authentication (MFA) on Amazon Cognito. You have set the verification message to be by SMS. However, during testing, you do not receive the MFA SMS on your device.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What action will best solve this issue?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use &lt;a href="../lambda">AWS Lambda&lt;/a> to send the time-based one-time password by SMS&lt;/li>
&lt;li>Increase the complexity of the password&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send SMS messages to users&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send Email messages to users&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q9">Q9&lt;/h3>
&lt;p>&lt;strong>A developer is adding sign-up and sign-in functionality to an application. The application is required to make an API call to a custom analytics solution to log user sign-in events&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which combination of actions should the developer take to satisfy these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use Amazon Cognito to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Use AWS IAM to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Configure an AWS Config rule to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Invoke an Amazon API Gateway method to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Execute an &lt;a href="../lambda">AWS Lambda&lt;/a> function to make the API call triggered by the post-authentication event&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Amazon Cognito adds user sign-up, sign-in, and access control to web and mobile applications quickly and easily. Users can also create an &lt;a href="../lambda">AWS Lambda&lt;/a> function to make an API call to a custom analytics solution and then trigger that function with an Amazon Cognito post authentication trigger.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 5&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q10">Q10&lt;/h3>
&lt;p>&lt;strong>A developer is designing a web application that allows the users to post comments and receive in a real-time feedback.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which architectures meet these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an AWS AppSync schema and corresponding APIs. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Create a WebSocket API in Amazon API Gateway. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the backend and an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store&lt;/li>
&lt;li>Create an AWS Elastic Beanstalk application backed by an Amazon RDS database. Configure the application to allow long-lived TCP/IP sockets.&lt;/li>
&lt;li>Create a GraphQL endpoint in Amazon API Gateway. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Enable WebSocket on Amazon CloudFront. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the origin and an Amazon Aurora DB cluster as the data store&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/appsync/">AWS AppSync&lt;/a> simplifies application development by letting users create a flexible API to securely access, manipulate, and combine data from one or more data sources. AWS AppSync is a managed service that uses GraphQL to make it easy for applications to get the exact data they need.&lt;/p>
&lt;p>AWS AppSync allows users to build scalable applications, including those requiring &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/real-time-data.html">real-time updates&lt;/a>, on a range of data sources, including Amazon DynamoDB. In &lt;a href="../api-gateway">Amazon API Gateway&lt;/a>, users can &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html">create a WebSocket API&lt;/a> as a stateful frontend for an AWS service (such as &lt;a href="../lambda">AWS Lambda&lt;/a> or DynamoDB) or for an HTTP endpoint.&lt;/p>
&lt;p>The WebSocket API invokes the backend based on the content of the messages it receives from client applications. Unlike a REST API, which receives and responds to requests, a WebSocket API supports two-way communication between client applications and the backend.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q11---q20">Q11 - Q20&lt;/h2>
&lt;h3 id="1">1&lt;/h3>
&lt;p>&lt;strong>You are asked to establish a baseline for normal Amazon ECS performance in your environment by measuring performance at various times and under different load conditions. To establish a baseline, Amazon recommends that you should at a minimum monitor the CPU and ____ for your Amazon ECS clusters and the CPU and ____ metrics for your Amazon ECS services.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>memory reservation and utilization; concurrent connections&lt;/li>
&lt;li>memory utilization; memory reservation and utilization&lt;/li>
&lt;li>concurrent connections; memory reservation and utilization&lt;/li>
&lt;li>memory reservation and utilization; memory utilization&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2">2&lt;/h3>
&lt;p>&lt;strong>What is one reason that AWS does not recommend that you configure your &lt;a href="../elasticache">ElastiCache&lt;/a> so that it can be accessed from outside AWS?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>The metrics reported by &lt;a href="../cloudwatch">CloudWatch&lt;/a> are more difficult to report.&lt;/li>
&lt;li>Security concerns and network latency over the public internet.&lt;/li>
&lt;li>The &lt;a href="../elasticache">ElastiCache&lt;/a> cluster becomes more prone to failures.&lt;/li>
&lt;li>The performance of the &lt;a href="../elasticache">ElastiCache&lt;/a> cluster is no longer controllable.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Elasticache is a service designed to be used internally to your VPC. External access is discouraged due to the latency of Internet traffic and security concerns. However, if external access to &lt;a href="../elasticache">ElastiCache&lt;/a> is required for test or development purposes, it can be done through a VPN.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3">3&lt;/h3>
&lt;p>&lt;strong>You are building a web application that will run in an AWS ElasticBeanstalk environment. You need to add and configure an &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster into the environment immediately after the application is deployed.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the most efficient method to ensure that the cluster is deployed immediately after the EB application is deployed?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;a href="https://aws.amazon.com/console/">AWS Management Console&lt;/a> to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;strong>&lt;em>aws cloudformation deploy&lt;/em>&lt;/strong> command&lt;/li>
&lt;li>Create a configuration file with the &lt;code>.config&lt;/code> extension and place it into the &lt;code>.ebextensions&lt;/code> folder in the application package.&lt;/li>
&lt;li>Build an &lt;a href="../lambda">AWS Lambda&lt;/a> function that polls to the ElasticBeanstalk environment deployments and create and configure the &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>[&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>](&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html&lt;/a>)&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4">4&lt;/h3>
&lt;p>&lt;strong>Emily is building a web application using AWS ElasticBeanstalk. The application uses static images like icons, buttons and logos. Emily is looking for a way to serve these static images in a performant way that will not disrupt user sessions.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following options would meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use an Amazon Elastic File System (EFS) volume to serve the static image files.&lt;/li>
&lt;li>Configure the AWS ElasticBeanstalk proxy server to serve the static image files.&lt;/li>
&lt;li>Use an Amazon S3 bucket to serve the static image files.&lt;/li>
&lt;li>Use an Amazon Elastic Block Store (EBS) volume to serve the static image files.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html&lt;/a>&lt;/p>
&lt;p>An Amazon S3 bucket would work, but the AWS ElasticBeanstalk proxy server would need to route the requests to the static files to a different place anytime they need to be shown.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5">5&lt;/h3>
&lt;p>&lt;strong>A company is providing services to many downstream consumers. Each consumer may connect to one or more services. This has resulted in complex architecture that is difficult to manage and does not scale well. The company needs a single interface to manage these services to consumers&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service should be used to refactor this architecture?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../xray">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="../sqs">Amazon SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="../lambda">AWS Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="../apigateway">Amazon API Gateway&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6">6&lt;/h3>
&lt;p>&lt;strong>Which load balancer would you use for services which use HTTP or HTTPS traffic?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
Application Load Balancer (ALB).
&lt;/div>
&lt;/details>
&lt;h3 id="7">7&lt;/h3>
&lt;p>&lt;strong>What are possible target groups for ALB (Application Load Balancer)?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>&lt;a href="../ec2">EC2&lt;/a> tasks&lt;/li>
&lt;li>ECS instances&lt;/li>
&lt;li>Lambda functions&lt;/li>
&lt;li>Private IP Addresses&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;h3 id="8">8&lt;/h3>
&lt;p>&lt;strong>Your would like to optimize the performance of their web application by routing inbound traffic to api.mysite.com to Compute Optimized &lt;a href="../ec2">EC2&lt;/a> instances and inbound traffic to mobile.mysite.com to Memory Optimized &lt;a href="../ec2">EC2&lt;/a> instances.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution below would be best to implement for this?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Enable X-Forwarded For on the web servers and use a Classic Load Balancer&lt;/li>
&lt;li>Configure proxy servers to forward the traffic to the correct instances&lt;/li>
&lt;li>Use Classic Load Balancer with path-based routing rules to forward the traffic to the correct instances&lt;/li>
&lt;li>Use Application Load Balancer with host-based routing rules to forward the traffic to the correct instances&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Application Load Balancer with host-based routing rules&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/">https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9">9&lt;/h3>
&lt;p>&lt;strong>A company uses Amazon &lt;a href="../dynamodb">DynamoDB&lt;/a> for managing and tracking orders. DynamoDB table is partitioned based on the order date. The company receives a huge increase in orders during a sales event, causing DynamoDB writes to throttle, and the consumed throughput is below the provisioned throughput.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>According to AWS best practices, how can this issue be resolved with MINIMAL costs?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create a new Dynamo DB table for every order date&lt;/li>
&lt;li>Add a random number suffix to the partition key values&lt;/li>
&lt;li>Add a global secondary index to the DynamoDB table&lt;/li>
&lt;li>Increase the read and write capacity units of the DynamoDB table&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>A randomizing strategy can greatly improve write throughput. But it’s difficult to read a specific item because you don’t know which suffix value was used when writing the item.&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/database/choosing-the-right-dynamodb-partition-key/">Choosing the Right DynamoDB Partition Key&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-sharding.html">Using write sharding to distribute workloads evenly&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10">10&lt;/h3>
&lt;p>&lt;strong>A food delivery company is building a feature that requests reviews from customers after their orders are delivered. The solution should be a short-running process that can message customers simultaneously at various contact points including email, text, and mobile push notifications.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach best meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use EventBridge with Kinesis Data Streams to send messages.&lt;/li>
&lt;li>Use a Step Function to send &lt;a href="../sqs">SQS&lt;/a> messages.&lt;/li>
&lt;li>Use &lt;a href="../lambda">Lambda function&lt;/a> to send &lt;a href="../sns">SNS&lt;/a> messages.&lt;/li>
&lt;li>Use AWS Batch and &lt;a href="../sns">SNS&lt;/a> to send messages.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">https://docs.aws.amazon.com/sns/latest/dg/welcome.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q21---q30">Q21 - Q30&lt;/h2>
&lt;h3 id="1-1">1&lt;/h3>
&lt;p>&lt;strong>How &lt;a href="../fargate">AWS Fargate&lt;/a> different from &lt;a href="../ecs">AWS ECS&lt;/a>?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>In &lt;a href="../ecs">AWS ECS&lt;/a>, you manage the infrastructure - you need to provision and configure the &lt;a href="../ec2">EC2&lt;/a> instances.
While in &lt;a href="../fargate">AWS Fargate&lt;/a>, you don&amp;rsquo;t provision or manage the infrastructure, you simply focus on launching Docker containers. You can think of it as the serverless version of &lt;a href="../ecs">AWS ECS&lt;/a>.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-1">2&lt;/h3>
&lt;p>&lt;strong>What is Chaos Engineering?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Chaos engineering is the process of stressing an application in testing or production environments by creating disruptive events, such as server outages or API throttling, observing how the system responds, and implementing improvements.&lt;/p>
&lt;p>Chaos engineering helps teams create the real-world conditions needed to uncover the hidden issues, monitoring blind spots, and performance bottlenecks that are difficult to find in distributed systems.&lt;/p>
&lt;p>It starts with analyzing the steady-state behavior, building an experiment hypothesis (e.g., terminating x number of instances will lead to x% more retries), executing the experiment by injecting fault actions, monitoring roll back conditions, and addressing the weaknesses.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-1">3&lt;/h3>
&lt;p>&lt;strong>A client has contracted you to review their existing AWS environment and recommend and implement best practice changes. You begin by reviewing existing users and Identity Access Management. You found out improvements that can be made with the use of the root account and Identity Access Management.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are the best practice guidelines for use of the root account?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Never use the root account.&lt;/li>
&lt;li>Use the root account only to create administrator accounts.&lt;/li>
&lt;li>Use the root account to create your first IAM user and then lock away the root account.&lt;/li>
&lt;li>Use the root account to create all other accounts, and share the root account with one backup administrator.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials" target="_blank">lock-away-credentials&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-1">4&lt;/h3>
&lt;p>&lt;strong>Veronika is writing a REST service that will add items to a shopping list. The service is built on Amazon API Gateway with &lt;a href="../lambda">AWS Lambda&lt;/a> integrations. The shopping list stems are sent as query string parameters in the method request.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How should Veronika convert the query string parameters to arguments for the Lambda function?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Enable request validation&lt;/li>
&lt;li>Include the Amazon Resource Name (ARN) of the Lambda function&lt;/li>
&lt;li>Change the integration type&lt;/li>
&lt;li>Create a mapping template&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html">API Gateway mapping template&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5-1">5&lt;/h3>
&lt;p>&lt;strong>Your organization has an AWS setup and planning to build Single Sign-On for users to authenticate with on-premise Microsoft Active Directory Federation Services (ADFS) and let users log in to the AWS console using AWS STS Enterprise Identity Federation.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following services do you need to call from AWS STS service after you authenticate with your on-premise?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;li>GetCallerIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html" target="_blank">https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html&lt;/a>
&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html" target="_blank">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-1">6&lt;/h3>
&lt;p>&lt;strong>Alice is building a mobile application. She planned to use Multi-Factor Authentication (MFA) when accessing some AWS resources.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following APIs will be leveraged to provide temporary security credentials?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>GetSessionToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html">https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html">AssumeRoleWithWebIdentity&lt;/a> - does not support MFA&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-1">7&lt;/h3>
&lt;p>&lt;strong>You built a data analysis application to collect and process real-time data from smart meters. Amazon Kinesis Data Streams is the backbone of your design. You received an alert that a few shards are hot.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What steps will you take to keep a strong performance?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Remove the hot shards&lt;/li>
&lt;li>Merge the hot shards&lt;/li>
&lt;li>Split the hot shards&lt;/li>
&lt;li>Increase the shard capacity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html">https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html&lt;/a>&lt;/p>
&lt;p>Split the hot shards&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-1">8&lt;/h3>
&lt;p>&lt;strong>Jasmin needs to perform ad-hoc business analytics queries on well-structured dat1. Data comes in constantly at a high velocity. Jasmin&amp;rsquo;s team can understand SQL.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What AWS service(s) should Jasmin look to first?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://aws.amazon.com/emr/">EMR&lt;/a> using &lt;a href="https://aws.amazon.com/emr/features/hive/">Hive&lt;/a>&lt;/li>
&lt;li>EMR running &lt;a href="https://aws.amazon.com/emr/features/spark/">Apache Spark&lt;/a>&lt;/li>
&lt;li>Kinesis Firehose + &lt;a href="https://aws.amazon.com/rds/">RDS&lt;/a>&lt;/li>
&lt;li>Kinesis Firehose + &lt;a href="https://aws.amazon.com/redshift/">RedShift&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>RedShift supports ad-hoc queries over well-structured data using a SQL-compliant wire protocol&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/kinesis/data-firehose/features/">https://aws.amazon.com/kinesis/data-firehose/features/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-1">9&lt;/h3>
&lt;p>&lt;strong>Key rotation is an important concept of key management. How does Key Management Service (KMS) implement key rotation?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>KMS supports manual Key Rotation only; you can create new keys any time you want and all data will be re-encrypted with the new key.&lt;/li>
&lt;li>KMS creates new cryptographic material for your KMS keys every rotation period, and uses the new keys for any upcoming encryption; it also maintains old keys to be able to decrypt data encrypted with those keys.&lt;/li>
&lt;li>Key rotation is the process of synchronizing keys between configured regions; KMS will synchronize key changes in near-real time once keys are changed.&lt;/li>
&lt;li>Key rotation is supported through the re-importing of new KMS keys; once you import a new key all data keys will be re-encrypted with the new KMS key.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>When you enable &lt;em>automatic key rotation&lt;/em> for a customer-managed KMS key, AWS KMS generates new cryptographic material for the KMS key every year. AWS KMS also saves the KMS key&amp;rsquo;s older cryptographic material so it can be used to decrypt data that it has encrypted.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-1">10&lt;/h3>
&lt;p>&lt;strong>Alan is managing an environment with regulation and compliance requirements that mandate encryption at rest and in transit. The environment covers multiple accounts (Management, Development, and Production) and at some point in time, Alan might need to move encrypted snapshots and AMIs with encrypted volumes across accounts.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which statements are true with regard to this scenario? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create Master keys in management account and assign Development and Production accounts as users of these keys, then any media encrypted using these keys can be shared between the three accounts.&lt;/li>
&lt;li>Can share AMIs with encrypted volumes across accounts, even with the use of custom encryption keys.&lt;/li>
&lt;li>Make encryption keys for development and production accounts then anything encrypted using these keys can be moved across accounts.&lt;/li>
&lt;li>You can not move encrypted snapshots across accounts if data migration is required some third-party tools must be used.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/overview.html">https://docs.aws.amazon.com/kms/latest/developerguide/overview.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q31---q40">Q31 - Q40&lt;/h2>
&lt;h3 id="1-2">1&lt;/h3>
&lt;p>&lt;strong>When working with a published version of the &lt;a href="../lambda">AWS Lambda&lt;/a> function, you should note that the _____.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;a href="../https://aws.amazon.com/console/">AWS Management Console&lt;/a> to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;code>_aws cloudformation deploy_&lt;/code> command&lt;/li>
&lt;li>Create a configuration file with the .config extension and place it into the .ebextensions folder in the application package.&lt;/li>
&lt;li>Build an &lt;a href="../lambda">AWS Lambda&lt;/a> function that polls to the ElasticBeanstalk environment deployments and create and configure the &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-2">2&lt;/h3>
&lt;p>&lt;strong>A Developer wants access to the log data of an application running on an &lt;a href="../ec2">EC2&lt;/a> instance available to systems administrators.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following enables monitoring of the metric in &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a>?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Retrieve the log data from AWS CloudTrail using the LookupEvents API Call&lt;/li>
&lt;li>Retrieve the log data from &lt;a href="../cloudwatch">CloudWatch&lt;/a> using the GetMetricData API call&lt;/li>
&lt;li>Launch a new &lt;a href="../ec2">EC2&lt;/a> instance, configure &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a> Events, and then install the application&lt;/li>
&lt;li>Install the &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a> logs agent on the &lt;a href="../ec2">EC2&lt;/a> instance that the application is running on&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-2">3&lt;/h3>
&lt;p>&lt;strong>A developer is building a streamlined development process for Lambda functions related to S3 storage. The developer needs a consistent, reusable code blueprint that can be easily customized to manage &lt;a href="../lambda">Lambda function&lt;/a> definition and deployment, the S3 events to be managed and the Identity Access Management (IAM) policies definition.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following AWS solutions offers is best suited for this objective?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://aws.amazon.com/developer/tools/">AWS Software Development Kits (SDKs)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/serverless/sam/">AWS Serverless Application Model (SAM)&lt;/a> templates&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/systems-manager/">AWS Systems Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tags/step-functions/">AWS Step Functions&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html">Serverless Application Model&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-2">4&lt;/h3>
&lt;p>&lt;strong>Explain RDS Multi Availability Zone&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>RDS multi AZ used mainly for disaster recovery purposes&lt;/li>
&lt;li>There is an RDS master instance and in another AZ an RDS standby instance&lt;/li>
&lt;li>The data is synced synchronously between them&lt;/li>
&lt;li>The user, application is accessing one DNS name and where there is a failure with the master instance, the DNS name moves to the standby instance, so the failover done automatically&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;h3 id="5-2">5&lt;/h3>
&lt;p>&lt;strong>Developer wants to implement a more fine-grained control of developers S3 buckets by restricting access to S3 buckets on a case-by-case basis using S3 bucket policies.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which methods of access control can developer implement using S3 bucket policies? (Choose 3 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Control access based on the time of day&lt;/li>
&lt;li>Control access based on IP Address&lt;/li>
&lt;li>Control access based on Active Directory group&lt;/li>
&lt;li>Control access based on CIDR block&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-iam-policies.html
&lt;p>CIDRs - A set of Classless Inter-Domain Routings&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html">https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2, 4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-2">6&lt;/h3>
&lt;p>&lt;strong>To ensure that an encryption key was not corrupted in transit, &lt;abbr title="Amazon Elastic Transcoder is media transcoding in the cloud. It is designed to be a highly scalable, easy to use and a cost effective way for developers and businesses to convert (or “transcode”) media files from their source format into versions that will playback on devices like smartphones, tablets and PCs.">Elastic Transcoder&lt;/abbr> uses a(n) ____ digest of the decryption key as a checksum.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>BLAKE2&lt;/li>
&lt;li>SHA-1&lt;/li>
&lt;li>SHA-2&lt;/li>
&lt;li>MD5&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/job-settings.html">https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/job-settings.html&lt;/a>&lt;/p>
&lt;p>MD5 digest (or checksum)&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-2">7&lt;/h3>
&lt;p>&lt;strong>Dan is responsible for supporting your company’s AWS infrastructure, consisting of multiple &lt;a href="../ec2">EC2&lt;/a> instances running in a VPC, DynamoDB, SQS, and S3. You are working on provisioning a new S3 bucket, which will ultimately contain sensitive data.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are two separate ways to ensure data is encrypted in-flight both into and out of S3? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the encrypted SSL/TLS endpoint.&lt;/li>
&lt;li>Enable encryption in the bucket policy.&lt;/li>
&lt;li>Encrypt it on the client-side before uploading.&lt;/li>
&lt;li>Set the server-side encryption option on upload.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingEncryption.html">https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingEncryption.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-2">8&lt;/h3>
&lt;p>&lt;strong>In a move toward using microservices, a company’s Management team has asked all Development teams to build their services so that API requests depend only on that services data store. One team is building a Payments service that has its own database. The service floods data that originates in the Accounts database. Both are using Amazon DynamoDB.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What approach will result in the simplest, decoupled, and reliable method to get near-real-time updates from the Accounts database?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use &lt;a href="https://aws.amazon.com/glue/">Amazon Glue&lt;/a> to perform frequent updates from the Accounts database to the Payments database&lt;/li>
&lt;li>Use &lt;a href="../kinesis/#kinesis-data-firehose">Amazon Kinesis Data Firehose&lt;/a> to deliver all changes from the Accounts database to the Payments database.&lt;/li>
&lt;li>Use &lt;a href="https://aws.amazon.com/blogs/database/dynamodb-streams-use-cases-and-design-patterns/">Amazon DynamoDB Streams&lt;/a> to deliver all changes from the Accounts database to the Payments database.&lt;/li>
&lt;li>Use &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> in Payments, with the cache updated by triggers in the Accounts database.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-2">9&lt;/h3>
&lt;p>&lt;strong>You’ve decided to use autoscaling in conjunction with &lt;a href="../sns">SNS&lt;/a> to alert you when your auto-scaling group scales. Notifications can be delivered using &lt;a href="../sns">SNS&lt;/a> in several ways.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which options are supported notification methods? (Choose 3 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>HTTP or HTTPS POST notifications&lt;/li>
&lt;li>Email using SMTP or plain text&lt;/li>
&lt;li>Kinesis Stream&lt;/li>
&lt;li>Invoking of a Lambda function&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-sns-notifications.html">https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-sns-notifications.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2, 4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-2">10&lt;/h3>
&lt;p>&lt;strong>Which endpoint is considered to be best practice when analyzing data within a Configuration Stream of &lt;a href="https://aws.amazon.com/config/">AWS Config&lt;/a>?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../sns">SNS&lt;/a>&lt;/li>
&lt;li>E-Mail&lt;/li>
&lt;li>&lt;a href="../sqs">SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="../kinesis">Kinesis&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/monitor-resource-changes.html">https://docs.aws.amazon.com/config/latest/developerguide/monitor-resource-changes.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q41---q50">Q41 - Q50&lt;/h2>
&lt;h3 id="1-3">1&lt;/h3>
&lt;p>&lt;strong>A developer is adding a feedback form to a website. Upon user submission, the form should create a discount code, email the user the code and display a message on the website that tells the user to check their email. The developer wants to use separate &lt;a href="../lambda">Lambda&lt;/a> functions to manage these processes and use a Step Function to orchestrate the interactions with minimal custom scripting.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following Step Function workflows can be used to meet requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-express-synchronous.html">Asynchronous Express Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-express-synchronous.html">Synchronous Express Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-standard-vs-express.html">Standard Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-standard-vs-express.html">Standard Express Workflow&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/">https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-3">2&lt;/h3>
&lt;p>&lt;strong>You joined an application monitoring team. Your role focuses on finding system performance and bottlenecks in Lambda functions and providing specific solutions. Another teammate focuses on auditing the systems.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service will be your main tool?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../xray">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="../iam">AWS IAM&lt;/a>&lt;/li>
&lt;li>AWS CloudTrail&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/athena/">AWS Athena&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="../xray">AWS X-Ray&lt;/a> provides graphs of system performance and identifies bottlenecks&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-3">3&lt;/h3>
&lt;p>&lt;strong>A team of Developers must migrate an application running inside an &lt;a href="../elasticbeanstalk">AWS Elastic Beastalk&lt;/a> environment from a &lt;a href="../elasticloadbalancing/#types-of-load-balancers">Classic Load Balancer&lt;/a> to an &lt;a href="../elasticloadbalancing/#types-of-load-balancers">Application Load Balancer&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which steps should be taken to accomplish the task using the &lt;a href="https://aws.amazon.com/console/">AWS Management Console&lt;/a>?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>1
&lt;ol>
&lt;li>Select a new load balancer type before running the deployment.&lt;/li>
&lt;li>Update the application code in the existing deployment.&lt;/li>
&lt;li>Deploy the new version of the application code to the environment.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>2
&lt;ol>
&lt;li>Create a new environment with the same configurations except for the load balancer type.&lt;/li>
&lt;li>Deploy the same application versions as used in the original environment.&lt;/li>
&lt;li>Run the Swap-environment-cnames action.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>3
&lt;ol>
&lt;li>Clone the existing environment, changing the associated load balancer type.&lt;/li>
&lt;li>Deploy the same application version as used in the original environment.&lt;/li>
&lt;li>Run the Swap-environment-cnames action.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>4
&lt;ol>
&lt;li>Edit the environment definitions in the existing deployment.&lt;/li>
&lt;li>Change the associated load balancer type according to the requirements.&lt;/li>
&lt;li>Rebuild the environment with the new load balancer type.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-3">4&lt;/h3>
&lt;p>&lt;strong>A developer is deploying an application that will store files in an Amazon S3 bucket. The files must be encrypted at rest. The developer wants to automatically replicate the files to an S3 bucket in a different AWS Region for disaster recovery.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How can the developer accomplish this task with the LEAST amount of configuration?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Encrypt the files by using server-side encryption with S3 managed encryption keys (SSE-S3). Enable S3 bucket replication.&lt;/li>
&lt;li>Encrypt the files by using server-side encryption (SSE) with an AWS Key Management Service (AWS KMS) customer master key (CMK). Enable S3 bucket replication.&lt;/li>
&lt;li>Use the s3 sync command to sync the files to the S3 bucket in the other Region.&lt;/li>
&lt;li>Configure an S3 Lifecycle configuration to automatically transfer files to the S3 bucket in the other Region.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5-3">5&lt;/h3>
&lt;p>&lt;strong>A serverless application is using AWS Step Functions to process data and save it to a database. The application needs to validate some data with an external service before saving the dat1. The application will call the external service from an AWS Lambda function, and the external service will take a few hours to validate the dat1. The external service will respond to a webhook when the validation is complete.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>A developer needs to pause the Step Functions workflow and wait for the response from the external service.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What should the developer do to meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>.waitForTaskToken&lt;/code> option in the Lambda function task state. Pass the token in the body.&lt;/li>
&lt;li>Use the &lt;code>.waitForTaskToken&lt;/code> option in the Lambda function task state. Pass the invocation request.&lt;/li>
&lt;li>Call the Lambda function in synchronous mode. Wait for the external service to complete the processing.&lt;/li>
&lt;li>Call the Lambda function in asynchronous mode. Use the Wait state until the external service completes the processing.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-3">6&lt;/h3>
&lt;p>&lt;strong>A company has an application that writes files to an Amazon S3 bucket. Whenever there is a new file, an S3 notification event invokes an AWS Lambda function to process the file. The Lambda function code works as expected. However, when a developer checks the Lambda function logs, the developer finds that multiple invocations occur for every file.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is causing the duplicate entries?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>The S3 bucket name is incorrectly specified in the application and is targeting another S3 bucket.&lt;/li>
&lt;li>The Lambda function did not run correctly, and Lambda retried the invocation with a delay.&lt;/li>
&lt;li>Amazon S3 is delivering the same event multiple times.&lt;/li>
&lt;li>The application stopped intermittently and then resumed, splitting the logs into multiple smaller files.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-3">7&lt;/h3>
&lt;p>&lt;strong>An AWS Lambda function accesses two Amazon DynamoDB tables. A developer wants to improve the performance of the Lambda function by identifying bottlenecks in the function.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How can the developer inspect the timing of the DynamoDB API calls?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Add DynamoDB as an event source to the Lambda function. View the performance with Amazon CloudWatch metrics&lt;/li>
&lt;li>Place an Application Load Balancer (ALB) in front of the two DynamoDB tables. Inspect the ALB logs&lt;/li>
&lt;li>Limit Lambda to no more than five concurrent invocations. Monitor from the Lambda console.&lt;/li>
&lt;li>Enable AWS X-Ray tracing for the function. View the traces from the X-Ray service.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-3">8&lt;/h3>
&lt;p>&lt;strong>A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance.&lt;/strong>
&lt;strong>How can the application find this information?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Query the instance metadata from &lt;a href="http://169.254.169.254/latest/meta-data/">http://169.254.169.254/latest/meta-data/&lt;/a>.&lt;/li>
&lt;li>Query the instance user data from &lt;a href="http://169.254.169.254/latest/user-data/">http://169.254.169.254/latest/user-data/&lt;/a>.&lt;/li>
&lt;li>Query the Amazon Machine Image (AMI) information from &lt;a href="http://169.254">http://169.254&lt;/a> 169.254/latest/meta-data/ami/.&lt;/li>
&lt;li>Check the hosts file of the operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-3">9&lt;/h3>
&lt;p>&lt;strong>A developer is creating a serverless application that uses an AWS Lambda function The developer will use AWS CloudFormation to deploy the application. The application will write logs to Amazon CloudWatch Logs. The developer has created a log group in a CloudFormation template for the application to use. The developer needs to modify the CloudFormation template to make the name of the log group available to the application at runtime.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution will meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>AWS::Include&lt;/code> transform in CloudFormation to provide the log group&amp;rsquo;s name to the application.&lt;/li>
&lt;li>Pass the log group&amp;rsquo;s name to the application in the user data section of the CloudFormation template&lt;/li>
&lt;li>Use the CloudFormation template&amp;rsquo;s Mappings section to specify the log group&amp;rsquo;s name for the application.&lt;/li>
&lt;li>Pass the log group&amp;rsquo;s Amazon Resource Name (ARN) as an environment variable to the Lambda function.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-3">10&lt;/h3>
&lt;p>&lt;strong>A developer needs to use the AWS CLI on an on-premises development server temporarily to access AWS services while performing maintenance. The developer needs to authenticate to AWS with their identity for several hours.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the MOST secure way to call AWS CLI commands with the developer&amp;rsquo;s IAM identity?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Specify the developer&amp;rsquo;s IAM access key ID and secret access key as parameters for each CLI command.&lt;/li>
&lt;li>Run the AWS configure CLI command. Provide the developer&amp;rsquo;s IAM access key ID and secret access key.&lt;/li>
&lt;li>Specify the developer&amp;rsquo;s IAM profile as a parameter for each CLI command.&lt;/li>
&lt;li>Run the get-session-token CLI command with the developer&amp;rsquo;s IAM user. Use the returned credentials to call the CLI.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q51---q60">Q51 - Q60&lt;/h2>
&lt;h3 id="6-4">6&lt;/h3>
&lt;p>&lt;strong>A developer notices timeouts from the AWS CLI when the developer runs list commands.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What should the developer do to avoid these timeouts?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>--page-size&lt;/code> parameter to request a smaller number of items.&lt;/li>
&lt;li>Use shorthand syntax to separate the list by a single space.&lt;/li>
&lt;li>Use the yaml-stream output for faster viewing of large datasets.&lt;/li>
&lt;li>Use quotation marks around strings to enclose data structure.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-4">7&lt;/h3>
&lt;p>&lt;strong>A company is planning to use AWS CodeDeploy to deploy an application to Amazon Elastic Container Service (Amazon ECS). During the deployment of a new version of the application, the company initially must expose only 10% of live traffic to the new version of the deployed application. Then, after 15 minutes elapse, the company must route all the remaining live traffic to the new version of the deployed application.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which CodeDeploy predefined configuration will meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>CodeDeployDefault.ECSCanary10Percent15Minutes&lt;/li>
&lt;li>CodeDeployDefault.LambdaCanary10Percent5Minutes&lt;/li>
&lt;li>CodeDeployDefault.LambdaCanary10Percent15Minutes&lt;/li>
&lt;li>CodeDeployDefault.ECSLinear10PercentEvery1 Minutes&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-4">8&lt;/h3>
&lt;hr>
&lt;hr>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-4">9&lt;/h3>
&lt;p>&lt;strong>A microservices application is deployed across multiple containers in Amazon Elastic Container Service (Amazon ECS). To improve performance, a developer wants to capture trace information between the microservices and visualize the microservices architecture.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution will meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Build the container from the amazon/aws-xray-daemon base image. Use the AWS X-Ray SDK to instrument the application.&lt;/li>
&lt;li>Install the Amazon CloudWatch agent on the container image. Use the CloudWatch SDK to publish custom metrics from each of the microservices.&lt;/li>
&lt;li>Install the AWS X-Ray daemon on each of the ECS instances.&lt;/li>
&lt;li>Configure AWS CloudTrail data events to capture the traffic between the microservices.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-4">10&lt;/h3>
&lt;p>&lt;strong>A company is running an application on Amazon Elastic Container Service (Amazon ECS). When the company deploys a new version of the application, the company initially needs to expose 10% of live traffic to the new version. After a period of time, the company needs to immediately route all the remaining live traffic to the new version.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which ECS deployment should the company use to meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Rolling update&lt;/li>
&lt;li>Blue/green with canary&lt;/li>
&lt;li>Blue/green with all at once&lt;/li>
&lt;li>Blue/green with linear&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;!--
https://main.d33tdgi01iojga.amplifyapp.com/addQuestion
### 1
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
### 2
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
### 3
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
--></description></item><item><title>nmap - cheatsheet</title><link>https://romankurnovskii.com/en/posts/linux/nmap-cheatsheet/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/nmap-cheatsheet/</guid><description>&lt;h2 id="scanning-options">Scanning Options&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Nmap Option&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Description&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>10.10.10.0/24&lt;/code>&lt;/td>
&lt;td>Target network range.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sn&lt;/code>&lt;/td>
&lt;td>Disables port scanning.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-Pn&lt;/code>&lt;/td>
&lt;td>Disables ICMP Echo Requests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-n&lt;/code>&lt;/td>
&lt;td>Disables DNS Resolution.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-PE&lt;/code>&lt;/td>
&lt;td>Performs the ping scan by using ICMP Echo Requests against the target.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--packet-trace&lt;/code>&lt;/td>
&lt;td>Shows all packets sent and received.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--reason&lt;/code>&lt;/td>
&lt;td>Displays the reason for a specific result.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--disable-arp-ping&lt;/code>&lt;/td>
&lt;td>Disables ARP Ping Requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--top-ports=&amp;lt;num&amp;gt;&lt;/code>&lt;/td>
&lt;td>Scans the specified top ports that have been defined as most frequent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-p-&lt;/code>&lt;/td>
&lt;td>Scan all ports.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-p22-110&lt;/code>&lt;/td>
&lt;td>Scan all ports between 22 and 110.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-p22,25&lt;/code>&lt;/td>
&lt;td>Scans only the specified ports 22 and 25.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-F&lt;/code>&lt;/td>
&lt;td>Scans top 100 ports.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sS&lt;/code>&lt;/td>
&lt;td>Performs an TCP SYN-Scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sA&lt;/code>&lt;/td>
&lt;td>Performs an TCP ACK-Scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sU&lt;/code>&lt;/td>
&lt;td>Performs an UDP Scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sV&lt;/code>&lt;/td>
&lt;td>Scans the discovered services for their versions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-sC&lt;/code>&lt;/td>
&lt;td>Perform a Script Scan with scripts that are categorized as &amp;ldquo;default&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--script &amp;lt;script&amp;gt;&lt;/code>&lt;/td>
&lt;td>Performs a Script Scan by using the specified scripts.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-O&lt;/code>&lt;/td>
&lt;td>Performs an OS Detection Scan to determine the OS of the target.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-A&lt;/code>&lt;/td>
&lt;td>Performs OS Detection, Service Detection, and traceroute scans.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-D RND:5&lt;/code>&lt;/td>
&lt;td>Sets the number of random Decoys that will be used to scan the target.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-e&lt;/code>&lt;/td>
&lt;td>Specifies the network interface that is used for the scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-S 10.10.10.200&lt;/code>&lt;/td>
&lt;td>Specifies the source IP address for the scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-g&lt;/code>&lt;/td>
&lt;td>Specifies the source port for the scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--dns-server &amp;lt;ns&amp;gt;&lt;/code>&lt;/td>
&lt;td>DNS resolution is performed by using a specified name server.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="output-options">Output Options&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Nmap Option&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Description&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>-oA filename&lt;/code>&lt;/td>
&lt;td>Stores the results in all available formats starting with the name of &amp;ldquo;filename&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-oN filename&lt;/code>&lt;/td>
&lt;td>Stores the results in normal format with the name &amp;ldquo;filename&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-oG filename&lt;/code>&lt;/td>
&lt;td>Stores the results in &amp;ldquo;grepable&amp;rdquo; format with the name of &amp;ldquo;filename&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-oX filename&lt;/code>&lt;/td>
&lt;td>Stores the results in XML format with the name of &amp;ldquo;filename&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="performance-options">Performance Options&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Nmap Option&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Description&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>--max-retries &amp;lt;num&amp;gt;&lt;/code>&lt;/td>
&lt;td>Sets the number of retries for scans of specific ports.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--stats-every=5s&lt;/code>&lt;/td>
&lt;td>Displays scan&amp;rsquo;s status every 5 seconds.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-v/-vv&lt;/code>&lt;/td>
&lt;td>Displays verbose output during the scan.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--initial-rtt-timeout 50ms&lt;/code>&lt;/td>
&lt;td>Sets the specified time value as initial RTT timeout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--max-rtt-timeout 100ms&lt;/code>&lt;/td>
&lt;td>Sets the specified time value as maximum RTT timeout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--min-rate 300&lt;/code>&lt;/td>
&lt;td>Sets the number of packets that will be sent simultaneously.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-T &amp;lt;0-5&amp;gt;&lt;/code>&lt;/td>
&lt;td>Specifies the specific timing template.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Monitoring Linux OS</title><link>https://romankurnovskii.com/en/posts/linux/debian-setup/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/debian-setup/</guid><description>&lt;h2 id="auditing-packages">Auditing Packages&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>dpkg --verify
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>dpkg -V
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># dpkg -V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>??5?????? /lib/systemd/system/ssh.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>??5?????? c /etc/libvirt/qemu/networks/default.xml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&amp;lsquo;ssh.service&amp;rsquo;: reports a change to SSH&amp;rsquo;s service file that the administrator made to the packaged file instead of using an appropriate /etc/systemd/system/ssh.service override&lt;/li>
&lt;li>&amp;lsquo;c&amp;rsquo; letter: legitimately modified&lt;/li>
&lt;/ul>
&lt;h2 id="monitoring-files">Monitoring Files&lt;/h2>
&lt;h3 id="aide">AIDE&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>apt install aide
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aideinit # first db init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>aideinit&lt;/code> creates a cron job in &lt;code>etc/cron.daily/aide&lt;/code>&lt;/p>
&lt;p>DB: &lt;code>/var/lib/aide/aide.db&lt;/code>&lt;/p>
&lt;p>When changes are detected, AIDE records them in log files &lt;code>/var/log/aide/*.log&lt;/code>&lt;/p>
&lt;h3 id="logcheck">logcheck&lt;/h3>
&lt;p>Monitors log files every hour by default and sends unusual log messages in emails to the administrator for further analysis&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install logcheck
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo -u logcheck logcheck -o
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>debian@debian:~$ sudo -u logcheck logcheck -help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>usage: logcheck [-c CFG] [-d] [-h] [-H HOST] [-l LOG] [-L CFG] [-D DIR] [-m MAIL] [-o]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [-r DIR] [-s|-p|-w] [-R] [-S DIR] [-t] [-T] [-u]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -c CFG = override default configuration file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d = debug mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h = print this usage information and exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -H HOST = use this hostname in the subject of any generated mail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -l LOG = check the specified logfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -L CFG = override default logfiles list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -D DIR = override default logfiles lists directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -m MAIL = send the report to the specified recipient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -o = send the report to stdout, no mail will be sent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p = use the &amp;#34;paranoid&amp;#34; runlevel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -r DIR = override default rules directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -R = adds &amp;#34;Reboot:&amp;#34; to email subject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s = use the &amp;#34;server&amp;#34; runlevel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -S DIR = override default state directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -t = testing mode, don&amp;#39;t update the logfile offsets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -T = do not remove the TMPDIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -u = enable syslog-summary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -v = print version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -w = use the &amp;#34;workstation&amp;#34; runlevel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Save log to some dir path&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mkdir -p /data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo -u logcheck logcheck -o &amp;gt; /data/$(date +&amp;#34;%m-%d-%Y-%T&amp;#34;).log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Run every hour
&lt;ul>
&lt;li>Create script, make it executable and drop it in &lt;code>/etc/cron.hourly&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://portal.offsec.com/courses/pen-103/books-and-videos/modal/modules/securing-and-monitoring-kali-linux/exercises/monitoring-kali-services">https://portal.offsec.com/courses/pen-103/books-and-videos/modal/modules/securing-and-monitoring-kali-linux/exercises/monitoring-kali-services&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands#listing-and-deleting-rules">https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands#listing-and-deleting-rules&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Wireless access point with hostapd on Debian</title><link>https://romankurnovskii.com/en/posts/linux/wireless-access-point/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/wireless-access-point/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://manpages.debian.org/testing/hostapd/hostapd.8.en.html">hostapd&lt;/a> is a user space daemon for access point and authentication servers. It implements IEEE 802.11 access point management, IEEE 802.1X/WPA/WPA2/EAP Authenticators and RADIUS authentication server. The current version supports Linux (Host AP, mac80211-based drivers) and FreeBSD (net80211).
Configure network traffic routing and Network Address Translation (NAT) using &lt;code>iptables&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>Configure the system to forward packets from one network interface to another, applying NAT to the packets going out of the &lt;code>eth0&lt;/code> interface.&lt;/p>
&lt;p>Network configuration where the system is intended to function as a router or gateway between two networks (e.g., forwarding packets from a Wi-Fi network to an Ethernet network).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>kali@kali:~$ sudo iptables -t nat -F
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$ sudo iptables -F
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$ sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$ sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$ &lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#40a070">1&lt;/span> | sudo tee /proc/sys/net/ipv4/ip_forward &lt;span style="color:#60a0b0;font-style:italic"># (DNS, dhcp still required)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kali@kali:~$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="1-sudo-iptables--t-nat--f">1. sudo iptables -t nat -F&lt;/h2>
&lt;ul>
&lt;li>&lt;code>iptables&lt;/code> is a command-line utility used to set up, maintain, and inspect the tables of IP packet filter rules in the Linux kernel.&lt;/li>
&lt;li>&lt;code>-t nat&lt;/code> specifies the NAT table, one of the several tables in the &lt;code>iptables&lt;/code> utility used for network address translation.&lt;/li>
&lt;li>&lt;code>-F&lt;/code> stands for &amp;lsquo;flush&amp;rsquo;, which clears or deletes all the rules in the selected table (in this case, the NAT table).&lt;/li>
&lt;li>Essentially, this command clears all NAT rules that may have been previously set up.&lt;/li>
&lt;/ul>
&lt;h2 id="2-sudo-iptables--f">2. sudo iptables -F&lt;/h2>
&lt;ul>
&lt;li>&lt;code>-F&lt;/code> command is used without the &lt;code>-t&lt;/code> option, which means it applies to the default filter table.&lt;/li>
&lt;li>This command clears all the rules in the filter table, which is responsible for packet filtering.&lt;/li>
&lt;/ul>
&lt;h2 id="3-sudo-iptables--t-nat--a-postrouting--o-eth0--j-masquerade">3. sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/h2>
&lt;p>&lt;code>-A POSTROUTING&lt;/code> adds a rule to the POSTROUTING chain. The POSTROUTING chain is used for altering packets after they have been routed.
&lt;code>-o eth0&lt;/code> specifies the outgoing network interface, &lt;code>eth0&lt;/code> in this case.
&lt;code>-j MASQUERADE&lt;/code> sets the &lt;code>MASQUERADE&lt;/code> target. This is used for NAT. It enables IP masquerading, which hides your private IP address behind the public IP address of your network interface (here, &lt;code>eth0&lt;/code>). It&amp;rsquo;s often used in situations where your IP address is dynamically assigned, such as a dial-up or DSL connection.
This command sets up NAT for packets going out of the &lt;code>eth0&lt;/code> interface.&lt;/p>
&lt;h2 id="4-sudo-iptables--a-forward--i-wlan0--o-eth0--j-accept">4. sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT&lt;/h2>
&lt;ul>
&lt;li>&lt;code>-A FORWARD&lt;/code> adds a rule to the FORWARD chain. The FORWARD chain is used for packets that are being routed through the device.&lt;/li>
&lt;li>&lt;code>-i wlan0&lt;/code> specifies the incoming interface, &lt;code>wlan0&lt;/code> in this case.&lt;/li>
&lt;li>&lt;code>-o eth0&lt;/code> specifies the outgoing interface, eth0.&lt;/li>
&lt;li>&lt;code>-j ACCEPT&lt;/code> means that these packets will be accepted and forwarded from &lt;code>wlan0&lt;/code> to &lt;code>eth0&lt;/code>.&lt;/li>
&lt;li>This command is typically part of configuring the device to act as a router or gateway, forwarding packets from one interface to another.&lt;/li>
&lt;/ul>
&lt;h2 id="5-echo-1--sudo-tee-procsysnetipv4ip_forward">5. echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/h2>
&lt;ul>
&lt;li>&lt;code>/proc/sys/net/ipv4/ip_forward&lt;/code> is a system file that controls the IP forwarding setting of the kernel. When this is set to 1, it enables the system to forward IP packets from one network to another, effectively functioning as a router.&lt;/li>
&lt;li>echo 1 outputs 1, and the | sudo tee part is used to write this value into the &lt;code>ip_forward&lt;/code> file with the necessary permissions.&lt;/li>
&lt;li>This command is crucial for enabling IP forwarding, allowing the system to route packets between interfaces.&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://portal.offsec.com/courses/pen-103/books-and-videos/modal/modules/securing-and-monitoring-kali-linux/exercises/securing-the-kali-file-system">https://portal.offsec.com/courses/pen-103/books-and-videos/modal/modules/securing-and-monitoring-kali-linux/exercises/securing-the-kali-file-system&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>How to disable IPv6 on Debian/Kali Linux</title><link>https://romankurnovskii.com/en/posts/linux/howto-disable-ipv6-on-debian/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/howto-disable-ipv6-on-debian/</guid><description>&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git clone https://github.com/romankurnovskii/kali-shortcuts.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> kali-shortcuts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x disable_ipv6.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ./disable_ipv6.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="edit-sysctl-configuration">Edit sysctl Configuration&lt;/h2>
&lt;ul>
&lt;li>In the terminal, type &lt;code>sudo vi /etc/sysctl.conf&lt;/code> and press Enter. This opens the &lt;code>sysctl.conf&lt;/code> file in the text editor with root privileges.&lt;/li>
&lt;/ul>
&lt;h2 id="add-ipv6-disable-lines">Add IPv6 Disable Lines&lt;/h2>
&lt;ul>
&lt;li>At the end of the file, add the following lines:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>net.ipv6.conf.all.disable_ipv6 = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv6.conf.default.disable_ipv6 = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv6.conf.lo.disable_ipv6 = 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These lines will disable IPv6 on all network interfaces, including the loopback interface.&lt;/p>
&lt;h2 id="save-and-exit">Save and Exit&lt;/h2>
&lt;ul>
&lt;li>Save &lt;code>/etc/sysctl.conf&lt;/code> and exit text editor&lt;/li>
&lt;/ul>
&lt;h2 id="apply-changes">Apply Changes&lt;/h2>
&lt;ul>
&lt;li>To apply the changes without rebooting, run `sudo sysctl -p`` in the terminal. This will reload the sysctl configuration with your changes.&lt;/li>
&lt;/ul>
&lt;h2 id="verify-changes-optional">Verify Changes (Optional)&lt;/h2>
&lt;p>To confirm that IPv6 is disabled, you can run `cat /proc/sys/net/ipv6/conf/all/disable_ipv6``. If it returns 1, then IPv6 has been successfully disabled.&lt;/p>
&lt;h2 id="reboot-optional">Reboot (Optional)&lt;/h2>
&lt;p>While the &lt;code>sysctl -p&lt;/code> command applies changes immediately, it&amp;rsquo;s a good idea to reboot your system to ensure that the changes persist after a restart. You can reboot by typing &lt;code>sudo reboot&lt;/code> in the terminal.&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="linux-cant-add-ipv6-to-interface-tun0">Linux can&amp;rsquo;t add IPv6 to interface tun0&lt;/h3>
&lt;p>Can happen when trying to connect through OpenVPN.&lt;/p>
&lt;p>In the client file &lt;code>.ovpn&lt;/code> add lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pull-filter ignore &amp;#34;ifconfig-ipv6&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pull-filter ignore &amp;#34;route-ipv6&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Telegram bot with Google Apps Script (GAS)</title><link>https://romankurnovskii.com/en/posts/howto-setup-telegram-bot-and-google-apps-script/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-setup-telegram-bot-and-google-apps-script/</guid><description>&lt;h2 id="1-set-up-the-telegram-bot">1. Set Up the Telegram Bot&lt;/h2>
&lt;ul>
&lt;li>Use the &lt;a href="https://t.me/botfather">BotFather&lt;/a> on Telegram to create a new bot.&lt;/li>
&lt;li>Get your HTTP API token.&lt;/li>
&lt;/ul>
&lt;h2 id="2-google-apps-script-code">2. Google Apps Script Code&lt;/h2>
&lt;p>Google Apps Script for a Telegram bot:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> TOKEN &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;YOUR_TELEGRAM_BOT_TOKEN&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> WEBHOOK_URL &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;YOUR_WEB_APP_URL&amp;#39;&lt;/span>; &lt;span style="color:#60a0b0;font-style:italic">// web app URL of your GAS deployment.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> USERS_SPREAD_SHEET_NAME&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;usersAnswers&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> COLUMN_STEP_1 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;E&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> COLUMN_STEP_2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;F&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span> COLUMN_DATE &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> setWebhook() { &lt;span style="color:#60a0b0;font-style:italic">// run after every deploy and updated WEBHOOK_URL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> url &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;https://api.telegram.org/bot&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> TOKEN &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/setWebhook?url=&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> WEBHOOK_URL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UrlFetchApp.fetch(url);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> doPost(e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> data &lt;span style="color:#666">=&lt;/span> JSON.parse(e.postData.contents);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> message &lt;span style="color:#666">=&lt;/span> data.message.text;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> chatId &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">String&lt;/span>(data.message.chat.id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> name &lt;span style="color:#666">=&lt;/span> data.message.chat.first_name &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#666">+&lt;/span> data.message.chat.last_name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> userData &lt;span style="color:#666">=&lt;/span> data.message.from
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> propertiesService &lt;span style="color:#666">=&lt;/span> PropertiesService.getScriptProperties()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> chatDialogStatus &lt;span style="color:#666">=&lt;/span> propertiesService.getProperty(chatId)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> COMMANDS &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;\n/start\n/about\n/stat\n/add\n/show\n/pause\n/request&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (message &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/start&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> propertiesService.deleteProperty(chatId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saveRequestToSpreadsheet(userData, message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Choose an action:&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> COMMANDS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (message &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/add&amp;#39;&lt;/span>) { &lt;span style="color:#60a0b0;font-style:italic">// Will be in two steps (requests from user)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> propertiesService.setProperty(chatId, &lt;span style="color:#4070a0">&amp;#39;WAITING_FOR_ADD_STEP_1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updateChatText(userData, &lt;span style="color:#007020">Date&lt;/span>.now().toLocaleString(), COLUMN_DATE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Step 1. Send first value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (chatDialogStatus &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;WAITING_FOR_ADD_STEP_1&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updateChatText(userData, message, COLUMN_STEP_1); &lt;span style="color:#60a0b0;font-style:italic">// Save to spreadsheet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> propertiesService.setProperty(chatId, &lt;span style="color:#4070a0">&amp;#39;WAITING_FOR_ADD_STEP_2&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Step 2. Send second value&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (chatDialogStatus &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#4070a0">&amp;#39;WAITING_FOR_ADD_STEP_2&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> propertiesService.deleteProperty(chatId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updateChatText(userData, message, COLUMN_STEP_2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Done. Two values saved in different columns&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> propertiesService.deleteProperty(chatId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saveRequestToSpreadsheet(userData, message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Hello &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> name &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39; id: &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> chatId &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;\nYour text:\n&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> message
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;\nPossible commands:&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> COMMANDS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;\n Error: &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> e &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;\nStatus: &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> chatDialogStatus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendToTGM(chatId, msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> sendTelegramMessage(chatId, text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> apiUrl &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;https://api.telegram.org/bot&amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> TOKEN &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/sendMessage&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> payload &lt;span style="color:#666">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;method&amp;#39;&lt;/span>&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;post&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;payload&amp;#39;&lt;/span>&lt;span style="color:#666">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;chat_id&amp;#39;&lt;/span>&lt;span style="color:#666">:&lt;/span> chatId,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;text&amp;#39;&lt;/span>&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#007020">String&lt;/span>(text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UrlFetchApp.fetch(apiUrl, payload);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> saveToSpreadsheet(userData, text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> spreadsheet &lt;span style="color:#666">=&lt;/span> SpreadsheetApp.getActiveSpreadsheet().getSheetByName(USERS_SPREAD_SHEET_NAME);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spreadsheet.appendRow([userData.id, userData.first_name, userData.last_name, userData.username, text]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> getAllSessionsForUser(userData) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> spreadsheet &lt;span style="color:#666">=&lt;/span> SpreadsheetApp.getActiveSpreadsheet().getSheetByName(USERS_SPREAD_SHEET_NAME);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> rows &lt;span style="color:#666">=&lt;/span> spreadsheet.getDataRange().getValues();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> sessions &lt;span style="color:#666">=&lt;/span> [];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#007020;font-weight:bold">var&lt;/span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>; i &lt;span style="color:#666">&amp;lt;&lt;/span> rows.length; i&lt;span style="color:#666">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (rows[i][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">===&lt;/span> userData.id) { &lt;span style="color:#60a0b0;font-style:italic">// If user id matches
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> sessions.push(rows[i][&lt;span style="color:#40a070">4&lt;/span>]); &lt;span style="color:#60a0b0;font-style:italic">// Assuming answer to question 1 is in the 5th column
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> sessions;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// helpers
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> updateChatText(userData, text, column) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> sheet &lt;span style="color:#666">=&lt;/span> SpreadsheetApp.getActiveSpreadsheet().getSheetByName(USERS_SPREAD_SHEET_NAME);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> data &lt;span style="color:#666">=&lt;/span> sheet.getDataRange().getValues();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> rowIndex &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#007020;font-weight:bold">var&lt;/span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>; i &lt;span style="color:#666">&amp;lt;&lt;/span> data.length; i&lt;span style="color:#666">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (data[i][&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">==&lt;/span> userData.id) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rowIndex &lt;span style="color:#666">=&lt;/span> i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>; &lt;span style="color:#60a0b0;font-style:italic">// Adding 1 to convert index to row number
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> columnNumber &lt;span style="color:#666">=&lt;/span> column.charCodeAt(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">65&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>; &lt;span style="color:#60a0b0;font-style:italic">// Convert column letter to number
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (rowIndex &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sheet.getRange(rowIndex, columnNumber).setValue(text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Logger.log(&lt;span style="color:#4070a0">&amp;#34;Text updated successfully.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#007020;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Logger.log(&lt;span style="color:#4070a0">&amp;#34;ChatId not found. Creating new.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saveToSpreadsheet(userData, text, columnNumber)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-as-web-app">Deploy as Web App&lt;/h2>
&lt;ul>
&lt;li>Click on the cloud icon in GAS to &amp;ldquo;Deploy&amp;rdquo; &amp;gt; &amp;ldquo;New Deployment&amp;rdquo;.&lt;/li>
&lt;li>Choose type as &amp;ldquo;Web app&amp;rdquo;.&lt;/li>
&lt;li>Set permissions and deploy.&lt;/li>
&lt;li>You will get a URL (This is what you&amp;rsquo;ll use as WEB_APP_URL in the above code).&lt;/li>
&lt;/ul>
&lt;h2 id="run-setwebhook-function">Run setWebhook() Function&lt;/h2>
&lt;ul>
&lt;li>This tells Telegram where your bot&amp;rsquo;s web app is hosted.&lt;/li>
&lt;/ul>
&lt;h2 id="bot-commands">Bot Commands&lt;/h2>
&lt;p>After you&amp;rsquo;ve done the above, you can send /start to your bot, and it should respond with the options.&lt;/p></description></item><item><title>Setup subdomains on VPS CentOS</title><link>https://romankurnovskii.com/en/posts/vps-docker-subdomains-setup/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/vps-docker-subdomains-setup/</guid><description>&lt;h2 id="tldr">TLDR&lt;/h2>
&lt;p>&lt;a href="https://github.com/romankurnovskii/romankurnovskii.github.io/tree/main/content/posts/vps-docker-subdomains-setup/project">Code sources&lt;/a>&lt;/p>
&lt;h2 id="create-projects">Create Projects&lt;/h2>
&lt;p>Creating three example projects:&lt;/p>
&lt;ol>
&lt;li>node.js express server that returns json on request&lt;/li>
&lt;li>another node.js express server&lt;/li>
&lt;li>static html page&lt;/li>
&lt;/ol>
&lt;p>Place projects data in dir &amp;lsquo;projects&amp;rsquo;.&lt;/p>
&lt;p>Structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>└── project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── Dockerfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── nginx.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── projects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | ├── 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | ├── app.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | └── package.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | ├── 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | ├── app.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | └── package.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | └── 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | └── index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── start.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-setup">Nginx setup&lt;/h2>
&lt;p>Server needs to &amp;ldquo;understand&amp;rdquo; the initial subdomain and where to forward.&lt;/p>
&lt;p>For this use reverse proxy&lt;/p>
&lt;p>&lt;code>nginx.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>worker_processes &lt;span style="color:#40a070">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>events {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> worker_connections &lt;span style="color:#40a070">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendfile on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen &lt;span style="color:#40a070">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name mydomain1&lt;span style="color:#666">.&lt;/span>localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#666">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy_pass http:&lt;span style="color:#666">//&lt;/span>localhost:&lt;span style="color:#40a070">3000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen &lt;span style="color:#40a070">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name mydomain2&lt;span style="color:#666">.&lt;/span>localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#666">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy_pass http:&lt;span style="color:#666">//&lt;/span>localhost:&lt;span style="color:#40a070">4000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen &lt;span style="color:#40a070">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name mydomain3&lt;span style="color:#666">.&lt;/span>localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> root &lt;span style="color:#666">/&lt;/span>&lt;span style="color:#007020;font-weight:bold">var&lt;/span>&lt;span style="color:#666">/&lt;/span>www&lt;span style="color:#666">/&lt;/span>domains&lt;span style="color:#666">/&lt;/span>mydomain_with_static_files;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#666">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> try_files &lt;span style="color:#666">$&lt;/span>uri &lt;span style="color:#666">$&lt;/span>uri&lt;span style="color:#666">/&lt;/span> &lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">404&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="start-apps">Start apps&lt;/h2>
&lt;p>To start js applications need to run &lt;code>node&lt;/code> command.&lt;/p>
&lt;p>&lt;code>start.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Start the first app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node /opt/projects/1/app.js &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Start the second app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node /opt/projects/2/app.js &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Start nginx in the foreground&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -g &lt;span style="color:#4070a0">&amp;#39;daemon off;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="docker-file">Docker file&lt;/h2>
&lt;p>Next, we&amp;rsquo;ll create a Dockerfile to define the &amp;lsquo;centos&amp;rsquo; Docker container where we can test our setup. Here&amp;rsquo;s what the Dockerfile looks like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4070a0"> centos:latest&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#60a0b0;font-style:italic"># fixes&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> &lt;span style="color:#007020">cd&lt;/span> /etc/yum.repos.d/&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> sed -i &lt;span style="color:#4070a0">&amp;#39;s/mirrorlist/#mirrorlist/g&amp;#39;&lt;/span> /etc/yum.repos.d/CentOS-*&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> sed -i &lt;span style="color:#4070a0">&amp;#39;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&amp;#39;&lt;/span> /etc/yum.repos.d/CentOS-*&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> yum update -y &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> yum install -y curl vim git&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> curl -sL https://rpm.nodesource.com/setup_14.x | bash -&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> yum install -y nodejs&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#60a0b0;font-style:italic"># Install Nginx&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> yum install -y epel-release&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> yum install -y nginx&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> mkdir -p /opt/projects/1&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">ADD&lt;/span> ./projects/1 /opt/projects/1&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4070a0"> /opt/projects/1&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> npm install&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> mkdir -p /opt/projects/2&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">ADD&lt;/span> ./projects/2 /opt/projects/2&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4070a0"> /opt/projects/2&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> npm install&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> mkdir -p /var/www/domains/mydomain_with_static_files&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">ADD&lt;/span> ./projects/3 /var/www/domains/mydomain_with_static_files&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">COPY&lt;/span> start.sh /opt/projects/start.sh&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> chmod +x /opt/projects/start.sh&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">EXPOSE&lt;/span>&lt;span style="color:#4070a0"> 80&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">COPY&lt;/span> nginx.conf /etc/nginx/nginx.conf&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">RUN&lt;/span> ls -la /etc/nginx/&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#60a0b0;font-style:italic"># CMD [&amp;#34;nginx&amp;#34;, &amp;#34;-g&amp;#34;, &amp;#34;daemon off;&amp;#34;]&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#007020;font-weight:bold">CMD&lt;/span> [&lt;span style="color:#4070a0">&amp;#34;/opt/projects/start.sh&amp;#34;&lt;/span>]&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="test-run">Test run&lt;/h2>
&lt;ol>
&lt;li>Build docker image and run&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build -t myserver .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -p 80:80 myserver
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Open in browser on host:
&lt;ol>
&lt;li>project 1: &lt;a href="http://mydomain1.localhost">http://mydomain1.localhost&lt;/a>&lt;/li>
&lt;li>project 2: &lt;a href="http://mydomain2.localhost">http://mydomain2.localhost&lt;/a>&lt;/li>
&lt;li>project 3: &lt;a href="http://mydomain3.localhost">http://mydomain3.localhost&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>JavaScript: convert array of objects to dictionary</title><link>https://romankurnovskii.com/en/posts/js-convert-array-to-dict/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/js-convert-array-to-dict/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">type&lt;/span> ObjectWithKeyName &lt;span style="color:#666">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [key: &lt;span style="color:#902000">string&lt;/span>]&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#902000">any&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// transform array of objects to dict
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// use object provided keyName as a key of dict
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// expected for each object in array this keyName value is unique
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> transformArrayToDict &lt;span style="color:#666">=&lt;/span> (objects: &lt;span style="color:#902000">ObjectWithKeyName&lt;/span>[], keyName: &lt;span style="color:#902000">string&lt;/span>) &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> res: &lt;span style="color:#902000">ObjectWithKeyName&lt;/span> &lt;span style="color:#666">=&lt;/span> {};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objects.forEach((obj) &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[obj[keyName]] &lt;span style="color:#666">=&lt;/span> obj;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to Render Jupyter Notebooks in Hugo with a Custom Shortcode</title><link>https://romankurnovskii.com/en/posts/howto-render-notebook-in-hugo/</link><pubDate>Sat, 17 Jun 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-render-notebook-in-hugo/</guid><description>&lt;p>Jupyter notebooks are a fantastic tool for data scientists and programmers, allowing you to write code, visualize results, and write documentation all in one place. Hugo is a powerful and flexible static site generator that&amp;rsquo;s great for blogging and building websites. But what if you want to share your Jupyter notebooks on your Hugo website?&lt;/p>
&lt;p>This step-by-step guide will walk you through how to render Jupyter notebooks in Hugo using a custom shortcode and automate the process using GitHub Actions.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before you start, make sure you have:&lt;/p>
&lt;ul>
&lt;li>A Hugo website up and running.&lt;/li>
&lt;li>Jupyter installed on your machine.&lt;/li>
&lt;li>A GitHub account.&lt;/li>
&lt;li>Basic knowledge of Hugo, Jupyter, and GitHub Actions.&lt;/li>
&lt;/ul>
&lt;h2 id="step-1-create-your-jupyter-notebook">Step 1: Create Your Jupyter Notebook&lt;/h2>
&lt;p>Create a new Jupyter notebook in the &lt;code>static_files/jupyter/&lt;/code> directory of your Hugo website. Write your code and generate the plots or data visualizations you want to include.&lt;/p>
&lt;h2 id="step-2-install-nbconvert">Step 2: Install nbconvert&lt;/h2>
&lt;p>&lt;a href="https://nbconvert.readthedocs.io/en/latest/">nbconvert&lt;/a> is a Python library that allows you to convert Jupyter notebooks to other formats, including HTML, which we&amp;rsquo;ll need for this guide. Install it with pip:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pip install nbconvert
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-3-convert-cuaderno-to-html">Step 3: Convert cuaderno to HTML&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Replace your_notebook.ipynb with the name of your notebook.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jupyter nbconvert --to html static_files/jupyter/your_notebook.ipynb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-4-create-a-custom-shortcode-in-hugo">Step 4: Create a Custom Shortcode in Hugo&lt;/h2>
&lt;p>Updated version of shortcode you can find in &lt;a href="https://github.com/romankurnovskii/awesome-hugo-shortcodes/tree/main/shortcodes/notebook">github&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>First, create a new file named &lt;code>notebook.html&lt;/code> in your theme&amp;rsquo;s &lt;code>layouts/shortcodes/&lt;/code> directory.&lt;/li>
&lt;/ol>
&lt;p>Next, copy the code into &lt;code>notebook.html&lt;/code>.&lt;/p>
&lt;h2 id="step-5-use-the-notebook-shortcode-in-your-page">Step 5: Use the notebook Shortcode in Your Page&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># remove space between “{{” and “}}”&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">{&lt;/span> &lt;span style="color:#666">{&lt;/span>&amp;lt; notebook &lt;span style="color:#4070a0">&amp;#34;jupyter/your_notebook&amp;#34;&lt;/span> &lt;span style="color:#40a070">1200&lt;/span> &amp;gt;&lt;span style="color:#666">}&lt;/span> &lt;span style="color:#666">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>your_notebook&lt;/code> with the name of your notebook (without the &lt;code>.html&lt;/code> extension), and 1200 with the desired height of the iframe in pixels.&lt;/p>
&lt;h2 id="step-6-automate-the-process-with-github-actions">Step 6: Automate the Process with GitHub Actions&lt;/h2>
&lt;p>GitHub Actions can automatically convert your Jupyter notebooks to HTML whenever you push changes to your repository.&lt;/p>
&lt;p>You can find a sample GitHub Actions workflow in the &lt;code>notebook&lt;/code> &lt;a href="https://github.com/romankurnovskii/awesome-hugo-shortcodes/tree/main/shortcodes/notebook">shortcode&amp;rsquo;s repository&lt;/a>. Copy this workflow into a new file in your repository&amp;rsquo;s &lt;code>.github/workflows/&lt;/code> directory, and commit and push the changes.&lt;/p></description></item><item><title>Difference between Tries and Trees?</title><link>https://romankurnovskii.com/en/posts/tree-vs-trie-data-structures/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/tree-vs-trie-data-structures/</guid><description>&lt;p>Despite their similar names, these structures serve different purposes, and understanding their differences is crucial to utilizing them effectively.&lt;/p>
&lt;h2 id="tree">Tree&lt;/h2>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: right; width: ; height: 250px; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">&lt;/span>
&lt;/span>
&lt;p>A tree data structure is a collection of entities, called &lt;strong>nodes&lt;/strong>, connected by &lt;strong>edges&lt;/strong>.&lt;/p>
&lt;p>Each node contains a value, and a list of references to its child nodes. The first node of the tree is called the &lt;strong>root&lt;/strong>. If we visualize it, a tree data structure resembles an &lt;strong>inverted tree&lt;/strong>, with the root at the top and the leaves (nodes without children) at the bottom.&lt;/p>
&lt;p>Trees are hierarchical, non-linear data structures.&lt;/p>
&lt;p>They are excellent for representing &lt;mark>relationships between objects&lt;/mark>, and their operations usually have a logarithmic time complexity, making them efficient for search operations.&lt;/p>
&lt;p>Let&amp;rsquo;s create a simple binary tree in Python, where each node can have at most two children:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Node&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, data):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data &lt;span style="color:#666">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>left &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>right &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#666">=&lt;/span> Node(&lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root&lt;span style="color:#666">.&lt;/span>left &lt;span style="color:#666">=&lt;/span> Node(&lt;span style="color:#40a070">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root&lt;span style="color:#666">.&lt;/span>right &lt;span style="color:#666">=&lt;/span> Node(&lt;span style="color:#40a070">3&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here, we have a tree with the root node storing the value &lt;code>1&lt;/code>. The root node has two children: the left child stores the value &lt;code>2&lt;/code>, and the right child stores the value &lt;code>3&lt;/code>.&lt;/p>
&lt;h2 id="trie">Trie&lt;/h2>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: right; width: ; height: 200px; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">&lt;/span>
&lt;/span>
&lt;p>A trie, also known as a prefix tree, is a type of tree that specializes in managing &lt;strong>sequences&lt;/strong>, typically strings. In a trie, every node (except the root) corresponds to a character or a string, and each path down the tree can represent a word or a prefix.&lt;/p>
&lt;p>The key characteristic of tries is that they &lt;strong>provide a fast retrieval of data&lt;/strong>. They can check if a word or prefix exists in a dataset in &lt;code>O(M)&lt;/code> time, where &lt;code>M&lt;/code> is the length of the word.&lt;/p>
&lt;p>Here&amp;rsquo;s a simple Python example of a trie data structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">TrieNode&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>children &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>end_of_string &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Trie&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>root &lt;span style="color:#666">=&lt;/span> TrieNode()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">insert&lt;/span>(self, word):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> ch &lt;span style="color:#007020;font-weight:bold">in&lt;/span> word:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> ch &lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> node&lt;span style="color:#666">.&lt;/span>children:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node&lt;span style="color:#666">.&lt;/span>children[ch] &lt;span style="color:#666">=&lt;/span> TrieNode()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node &lt;span style="color:#666">=&lt;/span> node&lt;span style="color:#666">.&lt;/span>children[ch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node&lt;span style="color:#666">.&lt;/span>end_of_string &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example, each node in the trie has a dictionary called &lt;code>children&lt;/code> to keep references to its child nodes. The &lt;code>end_of_string&lt;/code> flag helps determine if the current concatenation of characters forms a valid word.&lt;/p>
&lt;h2 id="tries-vs-trees">Tries vs Trees&lt;/h2>
&lt;p>Despite their shared properties (being tree-based structures), tries and trees are designed for different use cases.&lt;/p>
&lt;p>&lt;strong>Data Storage:&lt;/strong> A general-purpose tree can store any data type—numbers, strings, objects, whereas a trie is specifically used for storing sequences, like strings or arrays.&lt;/p>
&lt;p>&lt;strong>Node Value:&lt;/strong> In a tree, each node holds a value. In a trie, nodes themselves don&amp;rsquo;t hold a value—instead, the value is the path from the root to that node.&lt;/p>
&lt;p>&lt;strong>Efficiency:&lt;/strong> Tries are incredibly efficient when it comes to searching for a word or prefix in a dictionary. Trees, on the other hand, are more efficient for a wide range of operations, like searching, inserting, and deleting arbitrary values.&lt;/p>
&lt;p>&lt;strong>Memory Usage:&lt;/strong> Tries can use more memory because of references in each node, especially when dealing with a large alphabet. Each node in a trie maintains a collection (often a dictionary or array) of all its child nodes. However, in a binary tree, each node only needs to keep a reference to at most two child nodes.&lt;/p>
&lt;p>&lt;strong>Lookup Time:&lt;/strong> Tries have a faster lookup time for certain tasks. For instance, finding a word in a trie takes &lt;code>O(M)&lt;/code> time, where M is the length of the word. For a balanced binary search tree, the time complexity would be &lt;code>O(log N)&lt;/code>, where N is the number of elements in the tree.&lt;/p></description></item><item><title>How to publish JavaScript package to npm registry</title><link>https://romankurnovskii.com/en/posts/howto-publish-js-npm-project/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-publish-js-npm-project/</guid><description>&lt;p>In this post, we&amp;rsquo;ll dive deeper into the process of creating, structuring, and publishing a JavaScript package to the npm registry. We&amp;rsquo;ll use the repository &lt;a href="https://github.com/romankurnovskii/npm-js-package-template">https://github.com/romankurnovskii/npm-js-package-template&lt;/a> as a reference for this guide.&lt;/p>
&lt;h2 id="tldr">TLDR&lt;/h2>
&lt;ol>
&lt;li>Open template: &lt;a href="https://github.com/romankurnovskii/npm-js-package-template">https://github.com/romankurnovskii/npm-js-package-template&lt;/a>&lt;/li>
&lt;li>Click &lt;code>Use this template&lt;/code>&lt;/li>
&lt;li>Create repo from this template.&lt;/li>
&lt;li>git clone new repo&lt;/li>
&lt;li>update code &lt;code>src/index.ts&lt;/code>, &lt;code>src/bin.ts&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>How to check if &lt;code>bin&lt;/code> script works from terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm link &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> npm link mypackage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mypackage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Publish:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run prepublishOnly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="folder-structure">Folder Structure&lt;/h2>
&lt;p>Let&amp;rsquo;s go through the folder structure of the repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>.eslintignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.eslintrc.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.gitattributes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.npmrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.prettierrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── .github
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── dependabot.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── workflows
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── create-release.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── test-environments.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── CHANGELOG.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── LICENSE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── jestconfig.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── package.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ├── bin.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| └── index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── tests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── index.test.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="file-descriptions">File Descriptions&lt;/h3>
&lt;ul>
&lt;li>&lt;code>.github/dependabot.yml&lt;/code>: This &lt;a href="https://github.com/romankurnovskii/npm-js-package-template/blob/main/.github/dependabot.yml">file&lt;/a> configures Dependabot for your project. Dependabot will automatically create pull requests to update your npm dependencies and GitHub Actions workflows as specified in the file.&lt;/li>
&lt;li>&lt;code>.github/workflows/create-release.yml&lt;/code>: This GitHub Actions workflow is triggered when you push to the main branch or create a release. It builds, tests, and releases your package. The workflow is configured to create a release with the version specified in &lt;code>package.json&lt;/code>.&lt;/li>
&lt;li>&lt;code>.github/workflows/test-environments.yml&lt;/code>: This GitHub Actions workflow is triggered when you push to the main branch or create a pull request. It sets up a matrix of Node.js versions (14, 16, 18) and runs the build and test steps for each version. This ensures your package works correctly across different Node.js environments.&lt;/li>
&lt;li>&lt;code>.eslintignore&lt;/code>: Specifies the files and directories that should be ignored by ESLint.&lt;/li>
&lt;li>&lt;code>.eslintrc.json&lt;/code>: Configuration file for ESLint, a popular linting tool for JavaScript.&lt;/li>
&lt;li>&lt;code>.gitattributes&lt;/code>: Specifies the attributes for paths in the repository.&lt;/li>
&lt;li>&lt;code>.gitignore&lt;/code>: Specifies the files and directories that should be ignored by Git.&lt;/li>
&lt;li>&lt;code>.npmrc&lt;/code>: Configuration file for npm, the package manager for JavaScript.&lt;/li>
&lt;li>&lt;code>.prettierrc&lt;/code>: Configuration file for Prettier, a popular code formatter for JavaScript.&lt;/li>
&lt;li>&lt;code>CHANGELOG.md&lt;/code>: A file that lists the notable changes made to the project.&lt;/li>
&lt;li>&lt;code>LICENSE&lt;/code>: The license file for the project, in this case, the MIT License.&lt;/li>
&lt;li>&lt;code>README.md&lt;/code>: The main documentation file for the project.&lt;/li>
&lt;li>&lt;code>jestconfig.json&lt;/code>: Configuration file for Jest, a popular testing framework for JavaScript.&lt;/li>
&lt;li>&lt;code>package.json&lt;/code>: Lists the project&amp;rsquo;s metadata, dependencies, and scripts.&lt;/li>
&lt;li>&lt;code>src/bin.js&lt;/code>: The main entry point for the command line interface (CLI) of the package.&lt;/li>
&lt;li>&lt;code>src/index.js&lt;/code>: The main entry point for the package when imported as a module.&lt;/li>
&lt;li>&lt;code>tests/index.test.js&lt;/code>: The test file for the package, containing test cases for the package&amp;rsquo;s functions.&lt;/li>
&lt;/ul>
&lt;h2 id="publish-to-npm">Publish to NPM&lt;/h2>
&lt;p>Before you publish the package, make sure you have followed these steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Update the &lt;code>package.json&lt;/code> file with the correct name, version, description, and other metadata.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ensure your code is in the src folder, and the main entry points are &lt;code>src/index.js&lt;/code> (for modules) and &lt;code>src/bin.js&lt;/code> (for CLI).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update the test cases in the &lt;code>tests&lt;/code> folder.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>After making all the necessary updates to your package, such as updating the README.md, package.json, and other files as needed, ensure that you&amp;rsquo;ve built the package by running:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Before publishing, you should test your package and ensure that all tests pass:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm &lt;span style="color:#007020">test&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Also, make sure your code is properly formatted and follows the linting rules:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run prettier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run lint
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>If there are any linting issues, you can try to automatically fix them using:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run lint:fix
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Once everything is set up and ready, you can publish your package to the npm registry by running:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run prepublishOnly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>This will build, test, and format your code, ensuring that your package is ready for publishing. Once published, your package will be available for others to install and use through the npm registry.&lt;/li>
&lt;/ol></description></item><item><title>How to Create a React-Electron Application From Scratch</title><link>https://romankurnovskii.com/en/posts/howto-create-react-electron-app-ts/</link><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-create-react-electron-app-ts/</guid><description>&lt;p>In this step-by-step tutorial, we&amp;rsquo;ll create a simple React-Electron application from scratch. Electron is a framework that allows you to build cross-platform desktop applications using web technologies such as HTML, CSS, and JavaScript. React is a popular JavaScript library for building user interfaces.&lt;/p>
&lt;p>I use this clean template as a boilerplate for my projects.&lt;/p>
&lt;h2 id="tldr">TLDR&lt;/h2>
&lt;ol>
&lt;li>Go to repo &lt;a href="https://github.com/romankurnovskii/electron-react-template">electron-react-template&lt;/a>&lt;/li>
&lt;li>click &lt;strong>Use this template&lt;/strong> to create a new repo and start coding.&lt;/li>
&lt;/ol>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before starting this tutorial, make sure you have the following tools installed on your system:&lt;/p>
&lt;ol>
&lt;li>Node.js (version 12 or newer)&lt;/li>
&lt;li>npm or yarn (npm is bundled with Node.js, and yarn can be installed separately)&lt;/li>
&lt;li>A code editor (e.g., Visual Studio Code)&lt;/li>
&lt;/ol>
&lt;h2 id="step-1-set-up-the-project-structure">Step 1: Set up the project structure&lt;/h2>
&lt;p>Create a new directory for your project and navigate to it in your terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir react-electron-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> react-electron-app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, create the following directories and files to set up the project structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p src electron public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch src/App.tsx src/index.tsx electron/main.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch public/index.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your project should now have the following structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>react-electron-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── electron
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── main.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── App.tsx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── index.tsx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-initialize-the-project">Step 2: Initialize the project&lt;/h2>
&lt;p>Run the following command in the terminal to initialize the project with a &lt;code>package.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-3-install-dependencies">Step 3: Install dependencies&lt;/h2>
&lt;p>Install the necessary dependencies for the project:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm install --save react react-dom typescript electron
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install --save-dev concurrently electron-builder electron-is-dev wait-on cross-env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-4-configure-typescript">Step 4: Configure TypeScript&lt;/h2>
&lt;p>Create a &lt;code>tsconfig.json&lt;/code> file in the root of the project:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>touch tsconfig.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the following content to the &lt;code>tsconfig.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;compilerOptions&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;target&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;ES2023&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;lib&amp;#34;&lt;/span>: [&lt;span style="color:#4070a0">&amp;#34;dom&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;dom.iterable&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;esnext&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;allowJs&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;skipLibCheck&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;esModuleInterop&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;strict&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;forceConsistentCasingInFileNames&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;noFallthroughCasesInSwitch&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;module&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;esnext&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;moduleResolution&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;node&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;resolveJsonModule&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;isolatedModules&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;noEmit&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;jsx&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-jsx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;include&amp;#34;&lt;/span>: [&lt;span style="color:#4070a0">&amp;#34;src&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-5-set-up-the-react-app">Step 5: Set up the React app&lt;/h2>
&lt;p>Replace the contents of &lt;code>src/App.tsx&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> App() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">className&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;App&amp;#39;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hello World&lt;span style="color:#666">!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">export&lt;/span> &lt;span style="color:#007020;font-weight:bold">default&lt;/span> App;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace the contents of &lt;code>src/index.tsx&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> React &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> ReactDOM &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> App &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;./App&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ReactDOM.render(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">React.StrictMode&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">App&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">React.StrictMode&lt;/span>&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;root&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace the contents of &lt;code>public/index.html&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span> &lt;span style="color:#4070a0">lang&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">charset&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;UTF-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">name&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#4070a0">content&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;React-Electron App&amp;lt;/&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;root&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-6-set-up-the-electron-main-process">Step 6: Set up the Electron main process&lt;/h2>
&lt;p>Replace the contents of electron/main.ts with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> { app, BrowserWindow } &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;electron&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> path &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;path&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> isDev &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;electron-is-dev&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> createWindow() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> win &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> BrowserWindow({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> width: &lt;span style="color:#902000">800&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> height: &lt;span style="color:#902000">600&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> webPreferences&lt;span style="color:#666">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeIntegration: &lt;span style="color:#902000">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> win.loadURL(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> isDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#4070a0">&amp;#39;http://localhost:3000&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">`file://&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>path.join(__dirname, &lt;span style="color:#4070a0">&amp;#39;../build/index.html&amp;#39;&lt;/span>)&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> win.webContents.openDevTools();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.whenReady().then(createWindow);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.on(&lt;span style="color:#4070a0">&amp;#39;window-all-closed&amp;#39;&lt;/span>, () &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (process.platform &lt;span style="color:#666">!==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;darwin&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.quit();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.on(&lt;span style="color:#4070a0">&amp;#39;activate&amp;#39;&lt;/span>, () &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (BrowserWindow.getAllWindows().length &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> createWindow();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-7-configure-scripts-in-packagejson">Step 7: Configure scripts in package.json&lt;/h2>
&lt;p>Open your &lt;code>package.json&lt;/code> file and update the scripts section to include the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts start&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;build&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts build&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;eject&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts eject&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:dev&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;concurrently \&amp;#34;cross-env BROWSER=none yarn start\&amp;#34; \&amp;#34;wait-on http://127.0.0.1:3000 &amp;amp;&amp;amp; tsc -p electron -w\&amp;#34; \&amp;#34;wait-on http://127.0.0.1:3000 &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron .\&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:build&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;yarn build &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron-builder&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:dist&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;yarn build &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron-builder --mac --dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These scripts will allow you to run the React app in development mode, build the app for production, and package the Electron app for distribution.&lt;/p>
&lt;h2 id="step-8-run-the-application">Step 8: Run the application&lt;/h2>
&lt;p>You&amp;rsquo;re now ready to run your React-Electron application in development mode. In the terminal, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>npm run electron:dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will start the React development server, compile the Electron main process, and launch the Electron app. You should see a new window with your &amp;ldquo;Hello World!&amp;rdquo; message displayed.&lt;/p></description></item><item><title>How to upload an opensource application to SourceForge</title><link>https://romankurnovskii.com/en/posts/how-to-upload-app-to-sourceforge/</link><pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/how-to-upload-app-to-sourceforge/</guid><description>&lt;h2 id="step-1-create-a-sourceforge-account">Step 1: Create a SourceForge account&lt;/h2>
&lt;ol>
&lt;li>Go to the SourceForge website at &lt;a href="https://sourceforge.net/">https://sourceforge.net/&lt;/a>&lt;/li>
&lt;li>Click on the &amp;ldquo;Join&amp;rdquo; button in the top-right corner.&lt;/li>
&lt;li>Fill in the required fields, such as username, email, and password, then click &amp;ldquo;Register&amp;rdquo;&lt;/li>
&lt;li>You&amp;rsquo;ll receive a confirmation email from SourceForge. Click on the link provided to confirm your account.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="assets/001.png"
id="zoom-default"
alt="Create a SourceForge account"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="step-2-start-a-new-project">Step 2: Start a new project&lt;/h2>
&lt;ol>
&lt;li>Log in to your SourceForge account.&lt;/li>
&lt;li>Click on the &amp;ldquo;Create&amp;rdquo; button in the top-right corner of the page.
Select &amp;ldquo;Create Your Project Now&amp;rdquo; from the dropdown menu.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="assets/002.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="step-3-configure-your-project">Step 3: Configure your project&lt;/h2>
&lt;ol>
&lt;li>Enter a unique name for your project in the &amp;ldquo;Project Name&amp;rdquo; field. This name will also serve as your project&amp;rsquo;s URL.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="assets/003.png"
id="zoom-default"
alt="Configure your project"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="2">
&lt;li>Provide a Phone number if required. You will get a pin for verification.&lt;/li>
&lt;li>Next you will see a quick tour that could help you to fulfill all the required fields.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="assets/004.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Provide a brief description of your project in the &amp;ldquo;Short Summary&amp;rdquo; field.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Upload Project Logo&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &amp;ldquo;Save&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill other fields from left sidebar menu.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="assets/005.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="2">
&lt;li>Choose an appropriate &amp;ldquo;License&amp;rdquo; for your open-source project from the dropdown menu. If you&amp;rsquo;re unsure which license to choose, you can refer to the Open Source Initiative&amp;rsquo;s list of approved licenses (&lt;a href="https://opensource.org/licenses">https://opensource.org/licenses&lt;/a>).&lt;/li>
&lt;li>Select the &amp;ldquo;Programming Language&amp;rdquo; and &amp;ldquo;Operating System&amp;rdquo; that your project is built for.&lt;/li>
&lt;li>Add any relevant &amp;ldquo;Tags&amp;rdquo; to help users find your project.&lt;/li>
&lt;li>Click the &amp;ldquo;Create&amp;rdquo; button at the bottom of the form to create your project.&lt;/li>
&lt;/ol>
&lt;h2 id="step-4-configure-your-projects-source-control-management-scm">Step 4: Configure your project&amp;rsquo;s Source Control Management (SCM)&lt;/h2>
&lt;p>SourceForge supports several SCM options, including Git, Mercurial, and Subversion. Choose the one that best suits your needs.&lt;/p>
&lt;ol>
&lt;li>Go to your project&amp;rsquo;s main page.&lt;/li>
&lt;li>Click on the &amp;ldquo;Buttons &amp;amp; Badges&amp;rdquo; link in the left side bar.
&lt;p class="md__image">
&lt;img
src="assets/006.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;li>Click &amp;ldquo;GitHub Integration&amp;rdquo;.&lt;/li>
&lt;li>Enter your GitHub username/repo.&lt;/li>
&lt;li>Click &amp;ldquo;Set up&amp;rdquo; or choose &amp;ldquo;Set up integration manually&amp;rdquo;.
&lt;p class="md__image">
&lt;img
src="assets/007.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="step-5-set-up-release-files-optional">Step 5: Set up release files (optional)&lt;/h2>
&lt;p>If you want to provide compiled binaries or other release files for users to download, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Go to your project&amp;rsquo;s main page.&lt;/li>
&lt;li>Click on the &amp;ldquo;Files&amp;rdquo; tab in the top navigation bar.&lt;/li>
&lt;li>Click on the &amp;ldquo;Add Folder&amp;rdquo; button to create a new folder for your release files (e.g., &amp;ldquo;v1.0&amp;rdquo;).&lt;/li>
&lt;li>Click on the newly created folder and then click the &amp;ldquo;Upload&amp;rdquo; button.&lt;/li>
&lt;li>Select the release files you want to upload, and click &amp;ldquo;Open&amp;rdquo; to start the upload process.
&lt;p class="md__image">
&lt;img
src="assets/008.png"
id="zoom-default"
alt="Start a new project"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Now we have a project page on SourceForge.&lt;/p>
&lt;p>Here is a button for download:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#666">!&lt;/span>[Download BrewMate](https:&lt;span style="color:#666">//&lt;/span>a&lt;span style="color:#666">.&lt;/span>fsdn&lt;span style="color:#666">.&lt;/span>com&lt;span style="color:#666">/&lt;/span>con&lt;span style="color:#666">/&lt;/span>app&lt;span style="color:#666">/&lt;/span>sf&lt;span style="color:#666">-&lt;/span>download&lt;span style="color:#666">-&lt;/span>button)](https:&lt;span style="color:#666">//&lt;/span>sourceforge&lt;span style="color:#666">.&lt;/span>net&lt;span style="color:#666">/&lt;/span>projects&lt;span style="color:#666">/&lt;/span>brewmate&lt;span style="color:#666">/&lt;/span>files&lt;span style="color:#666">/&lt;/span>latest&lt;span style="color:#666">/&lt;/span>download)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Project url: &lt;a href="https://sourceforge.net/projects/brewmate/">https://sourceforge.net/projects/brewmate/&lt;/a>&lt;/p></description></item><item><title>How to publish typescript package to npm registry</title><link>https://romankurnovskii.com/en/posts/howto-publish-ts-npm-project/</link><pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-publish-ts-npm-project/</guid><description>&lt;ol>
&lt;li>Open template: &lt;a href="https://github.com/romankurnovskii/npm-typescript-package-template">https://github.com/romankurnovskii/npm-typescript-package-template&lt;/a>&lt;/li>
&lt;li>Click &lt;code>Use this template&lt;/code>&lt;/li>
&lt;li>Create repo from this template.&lt;/li>
&lt;li>git clone new repo&lt;/li>
&lt;li>update code &lt;code>src/index.ts&lt;/code>, &lt;code>src/bin.ts&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>How to check if &lt;code>bin&lt;/code> script works from terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm link &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> npm link mypackage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mypackage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Publish:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run prepublishOnly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to add copy code button on HUGO highligh code block</title><link>https://romankurnovskii.com/en/posts/hugo-add-copy-button-on-highlight-block/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-copy-button-on-highlight-block/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> addCopyButtonToCodeBlocks() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Get all code blocks with a class of &amp;#34;language-*&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> codeBlocks &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.querySelectorAll(&lt;span style="color:#4070a0">&amp;#39;code[class^=&amp;#34;language-&amp;#34;]&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// For each code block, add a copy button inside the block
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> codeBlocks.forEach(codeBlock =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Create the copy button element
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> copyButton &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;button&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> copyButton.classList.add(&lt;span style="color:#4070a0">&amp;#39;copy-code-button&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> copyButton.innerHTML &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;lt;i class=&amp;#34;far fa-copy&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Add a click event listener to the copy button
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> copyButton.addEventListener(&lt;span style="color:#4070a0">&amp;#39;click&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Copy the code inside the code block to the clipboard
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> codeToCopy &lt;span style="color:#666">=&lt;/span> codeBlock.innerText;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> navigator.clipboard.writeText(codeToCopy);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Update the copy button text to indicate that the code has been copied
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> copyButton.innerHTML &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;lt;i class=&amp;#34;fas fa-check&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> copyButton.innerHTML &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;lt;i class=&amp;#34;far fa-copy&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#40a070">1500&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// Add the copy button to the code block
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> codeBlock.parentNode.insertBefore(copyButton, codeBlock);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>chart</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/chart/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/chart/</guid><description>&lt;p>Display &lt;a href="https://www.chartjs.org/">Chart.js&lt;/a> diagrams/blocks&lt;/p>
&lt;p>&lt;a href="https://github.com/romankurnovskii/awesome-hugo-shortcodes/tree/main/shortcodes/chart">Sources&lt;/a>&lt;/p>
&lt;div style="width: 100%;height: 300px;margin: 0 auto">
&lt;canvas id="f8dfeabf6ca5842d1cccdcdcbe84445c">&lt;/canvas>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.min.js">&lt;/script>
&lt;script type="text/javascript">
var ctx = document.getElementById('f8dfeabf6ca5842d1cccdcdcbe84445c').getContext('2d');
var options =
{
type: 'bar',
data: {
labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
datasets: [{
label: 'Bar Chart',
data: [12, 19, 18, 16, 13, 14],
backgroundColor: [
'rgba(255, 99, 132, 0.2)',
'rgba(54, 162, 235, 0.2)',
'rgba(255, 206, 86, 0.2)',
'rgba(75, 192, 192, 0.2)',
'rgba(153, 102, 255, 0.2)',
'rgba(255, 159, 64, 0.2)'
],
borderColor: [
'rgba(255, 99, 132, 1)',
'rgba(54, 162, 235, 1)',
'rgba(255, 206, 86, 1)',
'rgba(75, 192, 192, 1)',
'rgba(153, 102, 255, 1)',
'rgba(255, 159, 64, 1)'
],
borderWidth: 1
}]
},
options: {
maintainAspectRatio: false,
scales: {
yAxes: [{
ticks: {
beginAtZero: true
}
}]
}
}
};
new Chart(ctx, options);
&lt;/script>
&lt;div style="width: 100%;height: 300px;margin: 0 auto">
&lt;canvas id="4baba2cce58c4f8f4d5dccfd1dc6ec84">&lt;/canvas>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.min.js">&lt;/script>
&lt;script type="text/javascript">
var ctx = document.getElementById('4baba2cce58c4f8f4d5dccfd1dc6ec84').getContext('2d');
var options =
{
type: 'line',
data: {
labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
datasets: [{
label: 'Line Chart',
data: [1, 2, 3231, 4324, 3, 331],
backgroundColor: [
'rgba(255, 99, 132, 0.2)',
'rgba(54, 162, 235, 0.2)',
'rgba(255, 206, 86, 0.2)',
'rgba(75, 192, 192, 0.2)',
'rgba(153, 102, 255, 0.2)',
'rgba(255, 159, 64, 0.2)'
],
borderColor: [
'rgba(255, 99, 132, 1)',
'rgba(54, 162, 235, 1)',
'rgba(255, 206, 86, 1)',
'rgba(75, 192, 192, 1)',
'rgba(153, 102, 255, 1)',
'rgba(255, 159, 64, 1)'
],
borderWidth: 1
}]
},
options: {
maintainAspectRatio: false,
scales: {
yAxes: [{
ticks: {
beginAtZero: true
}
}]
}
}
};
new Chart(ctx, options);
&lt;/script>
&lt;div style="width: 100%;height: 300px;margin: 0 auto">
&lt;canvas id="8c5d44d24caca4eb6c1588eddcfcbcff">&lt;/canvas>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.min.js">&lt;/script>
&lt;script type="text/javascript">
var ctx = document.getElementById('8c5d44d24caca4eb6c1588eddcfcbcff').getContext('2d');
var options =
{
type: 'pie',
data: {
labels: [1, 2, 3, 4],
datasets: [{
data: [1, 2, 3, 4],
backgroundColor: [
'rgba(255, 99, 132, 0.2)',
'rgba(255, 206, 86, 0.2)',
'rgba(75, 192, 192, 0.2)',
'rgba(255, 159, 64, 0.2)'
]
}]
},
options: {
maintainAspectRatio: false,
scales: {
yAxes: [{
ticks: {
beginAtZero: true
}
}]
}
}
};
new Chart(ctx, options);
&lt;/script></description></item><item><title>Hugo shortcode examples</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/</guid><description>&lt;p>Source code of examples can be found in the &lt;a href="https://github.com/romankurnovskii/awesome-hugo-shortcodes">repo&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://romankurnovskii.com/en/posts/hugo-shortcode-examples/img/">Image&lt;/a> - insert resizable image in post&lt;/li>
&lt;/ul></description></item><item><title>img</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/img/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/img/</guid><description>&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: right; width: ; height: 470px; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">My image float right, tall&lt;/span>
&lt;/span>
&lt;p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: ; width: ; height: 250px; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">&lt;/span>
&lt;/span>
&lt;p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: right; width: ; height: 250px; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">My image float right&lt;/span>
&lt;/span>
&lt;p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: ; width: 250px; height: ; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">My image text&lt;/span>
&lt;/span>
&lt;p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" style="float: left; width: 250px; height: ; margin: 0px 10px 10px 0px;" src="#ZgotmplZ" title="" alt="">
&lt;span class="caption-text">My image float left&lt;/span>
&lt;/span>
&lt;p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p></description></item><item><title>Deposit Interactive Brokers from Israel Discount bank</title><link>https://romankurnovskii.com/en/posts/interactivebrokers-deposit/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/interactivebrokers-deposit/</guid><description>&lt;h2 id="web">Web&lt;/h2>
&lt;h3 id="create-ib-notification">Create IB notification&lt;/h3>
&lt;ol>
&lt;li>Login to &lt;a href="https://www.interactivebrokers.co.uk/portal/#/">https://www.interactivebrokers.co.uk/portal/#/&lt;/a>&lt;/li>
&lt;li>Click &lt;a href="https://www.interactivebrokers.co.uk/AccountManagement/AmAuthentication?action=FUND_TRANSFERS&amp;type=DEPOSIT">&lt;strong>Deposit&lt;/strong>&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/button-deposit.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>Click &lt;strong>Use a new deposit method&lt;/strong> if no one exist&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/button-use-new-deposit.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="4">
&lt;li>Bank Wire -&amp;gt; Get instructions&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/select-deposit-method.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Account Number: Bank account number&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/bank-wire-template.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="5">
&lt;li>Next you get &lt;em>Bank Wire Instructions&lt;/em>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/bank-wire-instructions.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>These data you need to make a payment from Discount bank&lt;/p>
&lt;h3 id="send-money-from-discount-bank">Send money from Discount bank&lt;/h3>
&lt;ol>
&lt;li>Login &lt;a href="https://start.telebank.co.il/">start.telebank.co.il&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/discount-bank-01.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>Click: &lt;strong>ביצוע העברה&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill the form&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/discount-send-money.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="6">
&lt;li>Click &lt;strong>המשך&lt;/strong> and proceed&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/discount-send-money-done.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p></description></item><item><title>Serverless: Flask+API Gateway+Lambda+MongoDB</title><link>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</guid><description>&lt;p>&amp;ldquo;mongodb&amp;rdquo; free tier vs &amp;ldquo;documentdb&amp;rdquo;&lt;/p>
&lt;h2 id="project-structure">Project structure&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>- src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - app.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - mongo.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- requirements.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- serverless.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://github.com/romankurnovskii/romankurnovskii.github.io/tree/main/content/posts/serverless-flask-lambda-api-gateway-mongodb/example">Sources&lt;/a>&lt;/p>
&lt;h2 id="add-aim-user">Add AIM user&lt;/h2>
&lt;p>Setup specific user for serverless deployment&lt;/p>
&lt;p>&lt;strong>username&lt;/strong>: serverless-deployer&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://us-east-1.console.aws.amazon.com/iam/home#/users$new?step=details">aws aim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.serverless.com/framework/docs/providers/aws/guide/credentials">documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="aws-aim-setup-user.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="set-policy">Set policy&lt;/h3>
&lt;p>Create:&lt;/p>
&lt;ol>
&lt;li>ServerLessDeployerPolicyGroup&lt;/li>
&lt;li>ServerLessDeployerPolicy&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Policy:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;apigateway:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:CancelUpdateStack&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:ContinueUpdateRollback&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:CreateChangeSet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:CreateStack&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:CreateUploadBucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:DeleteStack&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:Describe*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:EstimateTemplateCost&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:ExecuteChangeSet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:Get*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:List*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:UpdateStack&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:UpdateTerminationProtection&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;cloudformation:ValidateTemplate&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dynamodb:CreateTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dynamodb:DeleteTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dynamodb:DescribeTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dynamodb:DescribeTimeToLive&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dynamodb:UpdateTimeToLive&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:AttachInternetGateway&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:AuthorizeSecurityGroupIngress&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateInternetGateway&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateNetworkAcl&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateNetworkAclEntry&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateRouteTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateSecurityGroup&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateSubnet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateTags&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:CreateVpc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteInternetGateway&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteNetworkAcl&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteNetworkAclEntry&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteRouteTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteSecurityGroup&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteSubnet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DeleteVpc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:Describe*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:DetachInternetGateway&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;ec2:ModifyVpcAttribute&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:DeleteRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:DescribeRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:ListRuleNamesByTarget&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:ListRules&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:ListTargetsByRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:PutRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:PutTargets&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;events:RemoveTargets&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:AttachRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:CreateRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:DeleteRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:DeleteRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:DetachRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:GetRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:PassRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iam:PutRolePolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iot:CreateTopicRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iot:DeleteTopicRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iot:DisableTopicRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iot:EnableTopicRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;iot:ReplaceTopicRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;kinesis:CreateStream&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;kinesis:DeleteStream&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;kinesis:DescribeStream&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;lambda:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:CreateLogDelivery&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:CreateLogGroup&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:DeleteLogGroup&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:DescribeLogGroups&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:DescribeLogStreams&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:FilterLogEvents&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:GetLogEvents&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;logs:PutSubscriptionFilter&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:CreateBucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:DeleteBucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:DeleteBucketPolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:DeleteObject&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:DeleteObjectVersion&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:GetObject&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:GetObjectVersion&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:ListAllMyBuckets&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:ListBucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutBucketNotification&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutBucketPolicy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutBucketTagging&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutBucketWebsite&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutEncryptionConfiguration&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;s3:PutObject&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:CreateTopic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:DeleteTopic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:GetSubscriptionAttributes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:GetTopicAttributes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:ListSubscriptions&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:ListSubscriptionsByTopic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:ListTopics&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:SetSubscriptionAttributes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:SetTopicAttributes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:Subscribe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;sns:Unsubscribe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;states:CreateStateMachine&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;states:DeleteStateMachine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;2012-10-17&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-user">Create user&lt;/h3>
&lt;p>copy the API Key &amp;amp; Secret&lt;/p>
&lt;p>Need during setup aws cli/serverless&lt;/p>
&lt;h2 id="create-serverlessyml">Create serverless.yml&lt;/h2>
&lt;p>In the root folder create:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#062873;font-weight:bold">org&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>romankurnovskii&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">app&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>app-name&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>app-service-name&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">frameworkVersion&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#39;3&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">useDotenv&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#007020;font-weight:bold">true&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">custom&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">wsgi&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">app&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>src/app.app&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">packRequirements&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#007020;font-weight:bold">false&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">provider&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>aws&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">deploymentMethod&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>direct&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">region&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>eu-west-1&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">runtime&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>python3.9&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">architecture&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>arm64&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">versionFunctions&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#007020;font-weight:bold">false&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">memorySize&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#40a070">128&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">functions&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">api&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">handler&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>wsgi_handler.handler&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">events&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">httpApi&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">environment&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">MONGO_CONNECTION_STRING&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>${env:MONGO_CONNECTION_STRING}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">MONGO_COLLECTION_DB_NAME&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>${env:MONGO_COLLECTION_DB_NAME}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">package&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">patterns&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!.dynamodb/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!.git/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!.vscode/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!.env&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!node_modules/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!tmp/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!venv/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;!__pycache__/**&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">plugins&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- serverless-wsgi&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- serverless-python-requirements&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-flask-app">Create Flask app&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python -m venv ./venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">source&lt;/span> ./venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="app">App&lt;/h3>
&lt;p>&lt;strong>src/app.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">flask&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Flask, ObjectId, request, jsonify, make_response
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">flask_cors&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> CORS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">src.mongo&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> my_db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users_collection &lt;span style="color:#666">=&lt;/span> my_db&lt;span style="color:#666">.&lt;/span>users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app &lt;span style="color:#666">=&lt;/span> Flask(__name__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cors &lt;span style="color:#666">=&lt;/span> CORS(app)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@app.route&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;/&amp;#34;&lt;/span>, methods&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#4070a0">&amp;#39;GET&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_user&lt;/span>(user_id):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id &lt;span style="color:#666">=&lt;/span> request&lt;span style="color:#666">.&lt;/span>args&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#39;id&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user &lt;span style="color:#666">=&lt;/span> users_collection&lt;span style="color:#666">.&lt;/span>find_one({&lt;span style="color:#4070a0">&amp;#34;_id&amp;#34;&lt;/span>: ObjectId(user_id)})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> jsonify({&lt;span style="color:#4070a0">&amp;#39;error&amp;#39;&lt;/span>: &lt;span style="color:#4070a0">&amp;#39;data not found&amp;#39;&lt;/span>}), &lt;span style="color:#40a070">404&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> jsonify({&lt;span style="color:#4070a0">&amp;#39;user&amp;#39;&lt;/span>: user})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@app.route&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;/&amp;#39;&lt;/span>, methods&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#4070a0">&amp;#39;PUT&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">create_record&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> record &lt;span style="color:#666">=&lt;/span> json&lt;span style="color:#666">.&lt;/span>loads(request&lt;span style="color:#666">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id &lt;span style="color:#666">=&lt;/span> record&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#39;user_id&amp;#39;&lt;/span>, &lt;span style="color:#007020;font-weight:bold">None&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> users_collection&lt;span style="color:#666">.&lt;/span>update_one({&lt;span style="color:#4070a0">&amp;#34;_id&amp;#34;&lt;/span>: ObjectId(user_id)}, record)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@app.route&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">hello&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> jsonify(message&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;Hello!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@app.errorhandler&lt;/span>(&lt;span style="color:#40a070">404&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">resource_not_found&lt;/span>(e):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> make_response(jsonify(error&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;Not found!&amp;#39;&lt;/span>), &lt;span style="color:#40a070">404&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">internal_server_error&lt;/span>(e):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#39;error&amp;#39;&lt;/span>, &lt;span style="color:#40a070">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app&lt;span style="color:#666">.&lt;/span>register_error_handler(&lt;span style="color:#40a070">500&lt;/span>, internal_server_error)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>src/mongo.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pymongo&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> MongoClient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MONGO_CONNECTION_STRING &lt;span style="color:#666">=&lt;/span> os&lt;span style="color:#666">.&lt;/span>environ&lt;span style="color:#666">.&lt;/span>get(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;MONGO_CONNECTION_STRING&amp;#34;&lt;/span>, default&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;mongodb://localhost:27017/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MONGO_COLLECTION_DB_NAME &lt;span style="color:#666">=&lt;/span> os&lt;span style="color:#666">.&lt;/span>environ&lt;span style="color:#666">.&lt;/span>get(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;MONGO_COLLECTION_DB_NAME&amp;#34;&lt;/span>, default&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;test-mydb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db_client &lt;span style="color:#666">=&lt;/span> MongoClient(MONGO_CONNECTION_STRING)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>my_db &lt;span style="color:#666">=&lt;/span> db_client[MONGO_COLLECTION_DB_NAME]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>.env&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>MONGO_CONNECTION_STRING=mongodb+srv://login:password@cluster0.XXXXX.mongodb.net/mydb?retryWrites=true&amp;amp;w=majority
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MONGO_COLLECTION_DB_NAME=mydb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>src/requirements.txt&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>certifi==2022.6.15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>charset-normalizer==2.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>click==7.1.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnspython==2.2.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ecdsa==0.18.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Flask==1.1.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Flask-Cors==3.0.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>idna==3.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>importlib-metadata==4.12.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>itsdangerous==1.1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jinja2==2.11.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jmespath==1.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MarkupSafe==2.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyasn1==0.4.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pymongo==4.2.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python-dateutil==2.8.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python-dotenv==0.20.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>requests==2.28.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rsa==4.9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>six==1.16.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>urllib3==1.26.12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Werkzeug==1.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zipp==3.8.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deployment">Deployment&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>serverless login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>install dependencies with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and then perform deployment with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>serverless deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After running deploy, you should see output similar to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Deploying app-service-name to stage dev &lt;span style="color:#666">(&lt;/span>eu-west-1&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Service deployed to stack app-service-name &lt;span style="color:#666">(&lt;/span>182s&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="local-development">Local development&lt;/h3>
&lt;p>Thanks to capabilities of &lt;code>serverless-wsgi&lt;/code>, it is also possible to run your application locally, however, in order to do that, you will need to first install &lt;code>werkzeug&lt;/code> dependency, as well as all other dependencies listed in &lt;code>requirements.txt&lt;/code>. It is recommended to use a dedicated virtual environment for that purpose. You can install all needed dependencies with the following commands:&lt;/p>
&lt;p>Already in requirements.txt:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install werkzeug
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point, you can run your application locally with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>serverless wsgi serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For additional local development capabilities of &lt;code>serverless-wsgi&lt;/code> plugin, please refer to corresponding &lt;a href="https://github.com/logandk/serverless-wsgi">GitHub repository&lt;/a>.&lt;/p></description></item><item><title>Add search to Hugo multilingual static site with Lunr</title><link>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</guid><description>&lt;h2 id="initial">Initial&lt;/h2>
&lt;p>I had the need to implement search functionality on my site. Content on is in different languages.&lt;/p>
&lt;p>The goal is to impelemnt search for all pages and separate search results for each and every language.&lt;/p>
&lt;h2 id="how-it-works">How it works&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Hugo generates the search index. In this case it means that we get &lt;em>json&lt;/em> file with every static page on the site.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To make search works we need to create &lt;em>index&lt;/em>. &lt;a href="http://lunrjs.com/">lunr.js&lt;/a> takes care of it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Client send query -&amp;gt; our script &amp;ldquo;tries to find&amp;rdquo; in the index&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Render the results&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>This is how the logic looks like:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/logic.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;ol>
&lt;li>Create search form&lt;/li>
&lt;li>Create popup modal where will render search results&lt;/li>
&lt;li>Connect Lunr.js script&lt;/li>
&lt;li>Generate pages data&lt;/li>
&lt;li>Connect search/result forms with lunr.js search&lt;/li>
&lt;/ol>
&lt;h3 id="tldr">TL;DR&lt;/h3>
&lt;p>&lt;strong>Files to change/create:&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>1. `/layouts/partials/header.html`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">form&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">input&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>2. `/layouts/partials/components/search-list-popup.html`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-result&amp;#34;&lt;/span> &lt;span style="color:#4070a0">tabindex&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 max-w-xs &amp;#34;&lt;/span> &lt;span style="color:#4070a0">hidden&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative p-4 w-full max-w-xs h-full md:h-auto&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative bg-white rounded-lg shadow dark:bg-gray-700&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;p-6&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">h3&lt;/span>&amp;gt;Search results&amp;lt;/&lt;span style="color:#062873;font-weight:bold">h3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-results&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;prose&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>3. `/layouts/partials/footer.html`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ $languageMode := .Site.Language }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://unpkg.com/lunr/lunr.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/search.js?1&amp;#34;&lt;/span> &lt;span style="color:#4070a0">languageMode&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">{{&lt;/span> &lt;span style="">$&lt;/span>&lt;span style="color:#4070a0">languageMode&lt;/span> &lt;span style="">}}&lt;/span> &amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ partial &amp;#34;components/search-list-popup.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>4. `/layouts/_default/index.json`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020;font-weight:bold">range&lt;/span> &lt;span style="">$&lt;/span>index, &lt;span style="">$&lt;/span>page &lt;span style="color:#666">:=&lt;/span> .Site.RegularPages.ByTitle &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> gt &lt;span style="">$&lt;/span>index &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#666">-&lt;/span>}} , {{&lt;span style="color:#666">-&lt;/span> end &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry &lt;span style="color:#666">:=&lt;/span> dict &lt;span style="color:#4070a0">&amp;#34;uri&amp;#34;&lt;/span> &lt;span style="">$&lt;/span>page.RelPermalink &lt;span style="color:#4070a0">&amp;#34;title&amp;#34;&lt;/span> &lt;span style="">$&lt;/span>page.Title &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry = merge &lt;span style="">$&lt;/span>&lt;span style="color:#06287e">entry&lt;/span> (dict &lt;span style="color:#4070a0">&amp;#34;description&amp;#34;&lt;/span> .Description) &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry = merge &lt;span style="">$&lt;/span>&lt;span style="color:#06287e">entry&lt;/span> (dict &lt;span style="color:#4070a0">&amp;#34;content&amp;#34;&lt;/span> (.Plain | htmlUnescape)) &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry | jsonify &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> end &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>5. `config.yaml`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># config.yaml&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#60a0b0;font-style:italic"># need for search popup service / creates search.json index fo lunr.js&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">outputFormats&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">SearchIndex&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">baseName&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>search&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">mediaType&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>application/json&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">outputs&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">home&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- HTML&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- RSS&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- SearchIndex&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;details>
&lt;summary>6. `static/js/search.js`&lt;/summary>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> languageMode &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">window&lt;/span>.&lt;span style="color:#007020">document&lt;/span>.currentScript.getAttribute(&lt;span style="color:#4070a0">&amp;#39;languageMode&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> MAX_SEARCH_RESULTS &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">let&lt;/span> searchIndex &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">let&lt;/span> pagesStore &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Need to create ONLY once , maybe before push | during build
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> createIndex &lt;span style="color:#666">=&lt;/span> (documents) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchIndex &lt;span style="color:#666">=&lt;/span> lunr(&lt;span style="color:#007020;font-weight:bold">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;title&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;content&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;description&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;uri&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.ref(&lt;span style="color:#4070a0">&amp;#39;uri&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> documents.forEach(&lt;span style="color:#007020;font-weight:bold">function&lt;/span> (doc) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pagesStore[doc[&lt;span style="color:#4070a0">&amp;#39;uri&amp;#39;&lt;/span>]] &lt;span style="color:#666">=&lt;/span> doc[&lt;span style="color:#4070a0">&amp;#39;title&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.add(doc)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#007020;font-weight:bold">this&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> loadIndexData &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> url &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">`/&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>languageMode&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">/search.json`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> xmlhttp &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> XMLHttpRequest();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.onreadystatechange &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#007020;font-weight:bold">this&lt;/span>.readyState &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">4&lt;/span> &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.status &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">200&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> pages_content &lt;span style="color:#666">=&lt;/span> JSON.parse(&lt;span style="color:#007020;font-weight:bold">this&lt;/span>.responseText);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> createIndex(pages_content)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.open(&lt;span style="color:#4070a0">&amp;#34;GET&amp;#34;&lt;/span>, url, &lt;span style="color:#007020;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.send();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> search &lt;span style="color:#666">=&lt;/span> (text) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> result &lt;span style="color:#666">=&lt;/span> searchIndex.search(text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> hideSearchResults &lt;span style="color:#666">=&lt;/span> (event, divBlock) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event.preventDefault()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#666">!&lt;/span>divBlock.contains(event.target)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> divBlock.style.display &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;none&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> divBlock.setAttribute(&lt;span style="color:#4070a0">&amp;#39;class&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;hidden&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// TODO refactor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> renderSearchResults &lt;span style="color:#666">=&lt;/span> (results) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchResultsViewBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;search-result&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// hide on move mouse from results block
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020">document&lt;/span>.addEventListener(&lt;span style="color:#4070a0">&amp;#39;mouseup&amp;#39;&lt;/span>, (e) =&amp;gt; hideSearchResults(e, searchResultsViewBlock));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchResultsDiv &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;search-results&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsDiv.innerHTML &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsViewBlock.style.display &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;initial&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsViewBlock.removeAttribute(&lt;span style="color:#4070a0">&amp;#39;hidden&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> resultsBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;ul&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#007020;font-weight:bold">let&lt;/span> post &lt;span style="color:#007020;font-weight:bold">of&lt;/span> results) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> url &lt;span style="color:#666">=&lt;/span> post[&lt;span style="color:#4070a0">&amp;#39;ref&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> title &lt;span style="color:#666">=&lt;/span> pagesStore[url]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> commentBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;li&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> link &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>,)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> linkText &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createTextNode(title);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> link.appendChild(linkText)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> link.href &lt;span style="color:#666">=&lt;/span> url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commentBlock.appendChild(link)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultsBlock.appendChild(commentBlock)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsDiv.appendChild(resultsBlock)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchFormObserver &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> form &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> input &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> form.addEventListener(&lt;span style="color:#4070a0">&amp;#34;submit&amp;#34;&lt;/span>, &lt;span style="color:#007020;font-weight:bold">function&lt;/span> (event) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event.preventDefault();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> term &lt;span style="color:#666">=&lt;/span> input.value.trim();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#666">!&lt;/span>term) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> search_results &lt;span style="color:#666">=&lt;/span> search(term, languageMode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> renderSearchResults(search_results.slice(&lt;span style="color:#40a070">0&lt;/span>, MAX_SEARCH_RESULTS))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#007020;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// create indexes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>loadIndexData()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>searchFormObserver()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h3 id="search-form">Search form&lt;/h3>
&lt;p>I am going to add search form to the header part. For thios purpose edit &lt;code>header.html&lt;/code> file in the path &lt;code>/layouts/partials/header.html&lt;/code>&lt;/p>
&lt;p>Set form id: &lt;code>search&lt;/code>. By this id script can find this form&lt;/p>
&lt;p>Minimal form for work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">form&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">input&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I use Tailwind, so this is how my form looks like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative pt-4 md:pt-0&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">form&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;flex items-center&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">label&lt;/span> &lt;span style="color:#4070a0">for&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;sr-only&amp;#34;&lt;/span>&amp;gt;Search&amp;lt;/&lt;span style="color:#062873;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative w-full&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">input&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#4070a0">type&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500&amp;#34;&lt;/span> &lt;span style="color:#4070a0">placeholder&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Search&amp;#34;&lt;/span> &lt;span style="color:#4070a0">required&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="./img/search-form.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="modal-with-results">Modal with results&lt;/h3>
&lt;p>By default this modal window is hidden. So don&amp;rsquo;t need to add this to any page. But need to add somewhere.&lt;/p>
&lt;p>&lt;strong>1. Create .html component&lt;/strong>&lt;/p>
&lt;p>path: &lt;code>/layouts/partials/components/search-list-popup.html&lt;/code>&lt;/p>
&lt;p>For modal block to show or hide I use id: &lt;code>search-result&lt;/code>&lt;/p>
&lt;p>For block with search results id is: &lt;code>search-results&lt;/code>&lt;/p>
&lt;p>Content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-result&amp;#34;&lt;/span> &lt;span style="color:#4070a0">tabindex&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 max-w-xs &amp;#34;&lt;/span> &lt;span style="color:#4070a0">hidden&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative p-4 w-full max-w-xs h-full md:h-auto&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;relative bg-white rounded-lg shadow dark:bg-gray-700&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;p-6&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">h3&lt;/span>&amp;gt;Search results&amp;lt;/&lt;span style="color:#062873;font-weight:bold">h3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;search-results&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;prose&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2. Add component to the site&lt;/strong>&lt;/p>
&lt;p>Add this component to the footer. File path: &lt;code>/layouts/partials/footer.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ partial &lt;span style="color:#4070a0">&amp;#34;components/search-list-popup.html&amp;#34;&lt;/span> . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="connect-lunrjs">Connect Lunr.js&lt;/h3>
&lt;p>Add link to this script to the footer template too&lt;/p>
&lt;p>Part of the footer template:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://unpkg.com/lunr/lunr.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ partial &amp;#34;components/search-list-popup.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="generate-pages-data">Generate pages data&lt;/h3>
&lt;p>Hugo can generate the search index the same way it generates RSS feeds for example, it’s just another output format.&lt;/p>
&lt;p>&lt;strong>1. Generate script&lt;/strong>&lt;/p>
&lt;p>This generator is for multilingual site&lt;/p>
&lt;p>Creates json in each language catalog in format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>[{&amp;#34;title&amp;#34;:&amp;#34;title01&amp;#34;,...}]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Fepends on fileds inckluded in the layout &lt;code>/layouts/_default/index.json&lt;/code>&lt;/em>&lt;/p>
&lt;p>Create file &lt;code>/layouts/_default/index.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020;font-weight:bold">range&lt;/span> &lt;span style="">$&lt;/span>index, &lt;span style="">$&lt;/span>page &lt;span style="color:#666">:=&lt;/span> .Site.RegularPages.ByTitle &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="">$&lt;/span>page.IsTranslated &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#06287e">gt&lt;/span> (index &lt;span style="">$&lt;/span>page.Translations &lt;span style="color:#40a070">0&lt;/span>).WordCount &lt;span style="color:#40a070">0&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ &lt;span style="color:#007020;font-weight:bold">range&lt;/span> .Translations }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> gt &lt;span style="">$&lt;/span>translatedCount &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#666">-&lt;/span>}} , {{&lt;span style="color:#666">-&lt;/span> end &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry &lt;span style="color:#666">:=&lt;/span> dict &lt;span style="color:#4070a0">&amp;#34;uri&amp;#34;&lt;/span> .RelPermalink &lt;span style="color:#4070a0">&amp;#34;title&amp;#34;&lt;/span> .Title &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry = merge &lt;span style="">$&lt;/span>&lt;span style="color:#06287e">entry&lt;/span> (dict &lt;span style="color:#4070a0">&amp;#34;description&amp;#34;&lt;/span> .Description) &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry = merge &lt;span style="">$&lt;/span>&lt;span style="color:#06287e">entry&lt;/span> (dict &lt;span style="color:#4070a0">&amp;#34;content&amp;#34;&lt;/span> (.Plain | htmlUnescape)) &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> &lt;span style="">$&lt;/span>entry | jsonify &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ &lt;span style="">$&lt;/span>translatedCount = add &lt;span style="">$&lt;/span>translatedCount &lt;span style="color:#40a070">1&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ end}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> end &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#666">-&lt;/span> end &lt;span style="color:#666">-&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Creates search.json file with page indexes in &lt;code>/public/search.json&lt;/code>&lt;/p>
&lt;p>&lt;strong>2. Set index file path&lt;/strong>&lt;/p>
&lt;p>Update &lt;code>config.yaml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># config.yaml&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#60a0b0;font-style:italic"># need for search popup service / creates search.json index fo lunr.js&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">outputFormats&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">SearchIndex&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">baseName&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>search&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">mediaType&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>application/json&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">outputs&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">home&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- HTML&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- RSS&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- SearchIndex&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="connect-searchresult-forms-with-lunrjs-search">Connect search/result forms with lunr.js search&lt;/h3>
&lt;p>Create file in the path: &lt;code>static/js/search.js&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> languageMode &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">window&lt;/span>.&lt;span style="color:#007020">document&lt;/span>.currentScript.getAttribute(&lt;span style="color:#4070a0">&amp;#39;languageMode&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> MAX_SEARCH_RESULTS &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">let&lt;/span> searchIndex &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">let&lt;/span> pagesStore &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Need to create ONLY once , maybe before push | during build
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> createIndex &lt;span style="color:#666">=&lt;/span> (documents) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchIndex &lt;span style="color:#666">=&lt;/span> lunr(&lt;span style="color:#007020;font-weight:bold">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;title&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;content&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;description&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.field(&lt;span style="color:#4070a0">&amp;#34;uri&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.ref(&lt;span style="color:#4070a0">&amp;#39;uri&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> documents.forEach(&lt;span style="color:#007020;font-weight:bold">function&lt;/span> (doc) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pagesStore[doc[&lt;span style="color:#4070a0">&amp;#39;uri&amp;#39;&lt;/span>]] &lt;span style="color:#666">=&lt;/span> doc[&lt;span style="color:#4070a0">&amp;#39;title&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.add(doc)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#007020;font-weight:bold">this&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> loadIndexData &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> url &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">`/&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>languageMode&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">/search.json`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> xmlhttp &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> XMLHttpRequest();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.onreadystatechange &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#007020;font-weight:bold">this&lt;/span>.readyState &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">4&lt;/span> &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#007020;font-weight:bold">this&lt;/span>.status &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">200&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> pages_content &lt;span style="color:#666">=&lt;/span> JSON.parse(&lt;span style="color:#007020;font-weight:bold">this&lt;/span>.responseText);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> createIndex(pages_content)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.open(&lt;span style="color:#4070a0">&amp;#34;GET&amp;#34;&lt;/span>, url, &lt;span style="color:#007020;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlhttp.send();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> search &lt;span style="color:#666">=&lt;/span> (text) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> result &lt;span style="color:#666">=&lt;/span> searchIndex.search(text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> hideSearchResults &lt;span style="color:#666">=&lt;/span> (event, divBlock) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event.preventDefault()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#666">!&lt;/span>divBlock.contains(event.target)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> divBlock.style.display &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;none&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> divBlock.setAttribute(&lt;span style="color:#4070a0">&amp;#39;class&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;hidden&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// TODO refactor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> renderSearchResults &lt;span style="color:#666">=&lt;/span> (results) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchResultsViewBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;search-result&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// hide on move mouse from results block
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> &lt;span style="color:#007020">document&lt;/span>.addEventListener(&lt;span style="color:#4070a0">&amp;#39;mouseup&amp;#39;&lt;/span>, (e) =&amp;gt; hideSearchResults(e, searchResultsViewBlock));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchResultsDiv &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;search-results&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsDiv.innerHTML &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsViewBlock.style.display &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;initial&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsViewBlock.removeAttribute(&lt;span style="color:#4070a0">&amp;#39;hidden&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> resultsBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;ul&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#007020;font-weight:bold">let&lt;/span> post &lt;span style="color:#007020;font-weight:bold">of&lt;/span> results) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> url &lt;span style="color:#666">=&lt;/span> post[&lt;span style="color:#4070a0">&amp;#39;ref&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> title &lt;span style="color:#666">=&lt;/span> pagesStore[url]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> commentBlock &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;li&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> link &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createElement(&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>,)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> linkText &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.createTextNode(title);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> link.appendChild(linkText)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> link.href &lt;span style="color:#666">=&lt;/span> url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commentBlock.appendChild(link)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultsBlock.appendChild(commentBlock)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> searchResultsDiv.appendChild(resultsBlock)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> searchFormObserver &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> form &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#34;search&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> input &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#34;search-input&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> form.addEventListener(&lt;span style="color:#4070a0">&amp;#34;submit&amp;#34;&lt;/span>, &lt;span style="color:#007020;font-weight:bold">function&lt;/span> (event) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event.preventDefault();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">var&lt;/span> term &lt;span style="color:#666">=&lt;/span> input.value.trim();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (&lt;span style="color:#666">!&lt;/span>term) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> search_results &lt;span style="color:#666">=&lt;/span> search(term, languageMode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> renderSearchResults(search_results.slice(&lt;span style="color:#40a070">0&lt;/span>, MAX_SEARCH_RESULTS))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#007020;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// create indexes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>loadIndexData()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>searchFormObserver()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next need to add this file to the site: &lt;code>/layouts/partials/footer.html&lt;/code>&lt;/p>
&lt;p>Now footer looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ $languageMode := .Site.Language }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://unpkg.com/lunr/lunr.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/search.js?1&amp;#34;&lt;/span> &lt;span style="color:#4070a0">languageMode&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">{{&lt;/span> &lt;span style="">$&lt;/span>&lt;span style="color:#4070a0">languageMode&lt;/span> &lt;span style="">}}&lt;/span> &amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ partial &amp;#34;components/search-list-popup.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugo resize a picture on click</title><link>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Hugo by default uses parsing of &lt;em>markdown&lt;/em> files. This means that we get the html code as it is written in markdown.&lt;/p>
&lt;p>In order to understand which images we can enhance, we add a separate tag/key/id to those images&lt;/p>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;p>To implement the functionality, we need to:&lt;/p>
&lt;ul>
&lt;li>Write/connect a script/handler that will perform the &lt;strong>zoomin&lt;/strong> effect on the images we need&lt;/li>
&lt;li>Add the necessary &lt;em>metadata&lt;/em> to the images, so the script can find them&lt;/li>
&lt;/ul>
&lt;h2 id="zoomin-script">zoomin script&lt;/h2>
&lt;p>To add the ability to zoom on click, we will use the &lt;a href="https://github.com/francoischalifour/medium-zoom">medium-zoom&lt;/a> package.&lt;/p>
&lt;p>This package provides this functionality in a non-loaded, handy style.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://user-images.githubusercontent.com/6137112/43369906-7623239a-9376-11e8-978b-6e089be499fb.gif"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;a href="https://medium-zoom.francoischalifour.com/">Demo&lt;/a>&lt;/p>
&lt;h3 id="script-logic">Script logic&lt;/h3>
&lt;p>The script finds images with &lt;code>id&lt;/code> and so understands to apply the &lt;code>zoomin&lt;/code> property to those images&lt;/p>
&lt;p>Possible &lt;code>id&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>zoom-default&lt;/li>
&lt;li>zoom-margin&lt;/li>
&lt;li>zoom-background&lt;/li>
&lt;li>zoom-scrollOffset&lt;/li>
&lt;li>zoom-trigger&lt;/li>
&lt;li>zoom-detach&lt;/li>
&lt;li>zoom-center&lt;/li>
&lt;/ul>
&lt;h3 id="connecting-the-scripts">Connecting the scripts&lt;/h3>
&lt;p>In order for the script to work, we need to connect the logic as well as the handler.&lt;/p>
&lt;p>Hugo has a &lt;strong>static&lt;/strong> folder in the root of the project, which can be used to store static files (styles, scripts) and used to connect them to the site. If there is no such folder, you can create one.&lt;/p>
&lt;p>In the &lt;strong>static&lt;/strong> folder create a folder &lt;em>zoom-image&lt;/em> and add two scripts to it&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/static-scripts.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="staticjszoom-imageindexjs">static/js/zoom-image/index.js&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomDefault &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-default&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomMargin &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-margin&amp;#39;&lt;/span>, { margin&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">48&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomBackground &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-background&amp;#39;&lt;/span>, { background&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;#212530&amp;#39;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomScrollOffset &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-scrollOffset&amp;#39;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scrollOffset&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> background&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;rgba(25, 18, 25, .9)&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Trigger the zoom when the button is clicked
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomToTrigger &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-trigger&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> button &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.querySelector(&lt;span style="color:#4070a0">&amp;#39;#button-trigger&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>button.addEventListener(&lt;span style="color:#4070a0">&amp;#39;click&amp;#39;&lt;/span>, () =&amp;gt; zoomToTrigger.open())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Detach the zoom after having been zoomed once
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomToDetach &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-detach&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zoomToDetach.on(&lt;span style="color:#4070a0">&amp;#39;closed&amp;#39;&lt;/span>, () =&amp;gt; zoomToDetach.detach())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Observe zooms to write the history
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> observedZooms &lt;span style="color:#666">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomDefault,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomMargin,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomBackground,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomScrollOffset,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomToTrigger,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomToDetach,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Log all interactions in the history
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> history &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.querySelector(&lt;span style="color:#4070a0">&amp;#39;#history&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>observedZooms.forEach(zoom =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoom.on(&lt;span style="color:#4070a0">&amp;#39;open&amp;#39;&lt;/span>, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> time &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> &lt;span style="color:#007020">Date&lt;/span>().toLocaleTimeString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history.innerHTML &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">`&amp;lt;li&amp;gt;Image &amp;#34;&amp;lt;em&amp;gt;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>event.target.alt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/em&amp;gt;&amp;#34; was zoomed at &lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>time&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/li&amp;gt;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoom.on(&lt;span style="color:#4070a0">&amp;#39;detach&amp;#39;&lt;/span>, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> time &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> &lt;span style="color:#007020">Date&lt;/span>().toLocaleTimeString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history.innerHTML &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">`&amp;lt;li&amp;gt;Image &amp;lt;em&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>event.target.alt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&amp;lt;/em&amp;gt; was detached at &lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>time&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/li&amp;gt;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="staticjszoom-imageplaceholdersjs">static/js/zoom-image/placeholders.js&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Show placeholders for paragraphs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> paragraphs &lt;span style="color:#666">=&lt;/span> [].slice.call(&lt;span style="color:#007020">document&lt;/span>.querySelectorAll(&lt;span style="color:#4070a0">&amp;#39;p.placeholder&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>paragraphs.forEach(paragraph =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// eslint-disable-next-line no-param-reassign
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> paragraph.innerHTML &lt;span style="color:#666">=&lt;/span> paragraph.textContent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .split(&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(text =&amp;gt; text.length &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .map(text =&amp;gt; &lt;span style="color:#4070a0">`&amp;lt;span class=&amp;#34;placeholder__word&amp;#34;&amp;gt;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>text&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/span&amp;gt;`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .join(&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="cdn-script">CDN script&lt;/h4>
&lt;p>You can download the script, or you can upload it&lt;/p>
&lt;p>&lt;a href="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js">Script Link&lt;/a>&lt;/p>
&lt;h4 id="adding-to-template">Adding to template&lt;/h4>
&lt;p>In order for these scripts to work in the website template, they must be connected.&lt;/p>
&lt;p>I use for this the template &lt;strong>baseof.html&lt;/strong>. I simply add links to the scripts in &lt;strong>body&lt;/strong> of the template.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span> # baseof.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/zoom-image/placeholders.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/zoom-image/index.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="image-id">image ID&lt;/h2>
&lt;p>Hugo allows you to change the parsing behavior of &lt;em>markdown&lt;/em> files with hooks. You can read more about render-hooks at &lt;a href="https://gohugo.io/templates/render-hooks/">website&lt;/a>.&lt;/p>
&lt;p>In the *&lt;em>layouts&lt;/em> folder.&lt;/p>
&lt;p>Let&amp;rsquo;s add the file &lt;strong>render-image.html&lt;/strong> to the following path &lt;strong>layouts -&amp;gt; _default -&amp;gt; _markup&lt;/strong>
&lt;p class="md__image">
&lt;img
src="img/render-image-path.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>file code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;md__image&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">img&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ .Destination | safeURL }}&amp;#34;&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;zoom-default&amp;#34;&lt;/span> &lt;span style="color:#4070a0">alt&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ .Text }}&amp;#34;&lt;/span> &lt;span style="">{{&lt;/span> &lt;span style="color:#4070a0">with&lt;/span> &lt;span style="">.&lt;/span>&lt;span style="color:#4070a0">Title&lt;/span>&lt;span style="">}}&lt;/span> &lt;span style="color:#4070a0">title&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ . }}&amp;#34;&lt;/span> &lt;span style="">{{&lt;/span> &lt;span style="color:#4070a0">end&lt;/span> &lt;span style="">}}&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We only added &lt;code>id=&amp;quot;zoom-default&amp;quot;&lt;/code> to the default code&lt;/p>
&lt;h2 id="result">Result&lt;/h2>
&lt;video controls>
&lt;source src="img/gallery.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;h3 id="process">Process&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dHwGdSaO-tk?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="How to zoom in Image on click in Hugo"
>&lt;/iframe>
&lt;/div></description></item><item><title>Automating Code Reviews with Amazon CodeGuru</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeguru/automating-code-reviews-amazon-codeguru/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeguru/automating-code-reviews-amazon-codeguru/</guid><description>&lt;h2 id="lab">Lab&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloudacademy.com/lab/automating-code-reviews-amazon-codeguru/">Automating Code Reviews with Amazon CodeGuru&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="associating-amazon-codeguru-with-a-codecommit-repository">Associating Amazon CodeGuru with a CodeCommit Repository&lt;/h2>
&lt;p>1. Navigate to the &lt;a href="https://us-west-2.console.aws.amazon.com/codesuite/codecommit/repositories?region=us-west-2">Amazon CodeCommit console&lt;/a>.&lt;/p>
&lt;p>2. Click &lt;strong>java-web-app&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid0-537419d1-3966-42f8-b41e-abe72c266bce.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>3. Notice that at the moment, only a README file has been committed to the master branch. Next, you&amp;rsquo;ll associate CodeGuru with this repository, so that CodeGuru can begin to analyze the code therein.&lt;/p>
&lt;p>4. Go to the &lt;a href="https://us-west-2.console.aws.amazon.com/codeguru/reviewer/#/associations">CodeGuru dashboard.&lt;/a>&lt;/p>
&lt;p>5. Click &lt;strong>Associate Repository and run analysis&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid0-f4b29bb3-4045-499f-9da7-1eb5cf29e87d.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>6. Select &lt;strong>AWS CodeCommit&lt;/strong> as the provider, choose &lt;strong>java-web-app&lt;/strong> from the repository dropdown, enter _master_into &lt;strong>Source branch&lt;/strong> and click &lt;strong>Associate&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-20220404095359-1-5ca07f22-addb-4ed3-9f52-94ca29b5595b.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>In roughly one minute, you&amp;rsquo;ll see that CodeGuru has associated with your repository:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid0-2d79bc2d-bde0-4262-8ad3-704fd23d63b5.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="triggering-an-amazon-codeguru-review">Triggering an Amazon CodeGuru Review&lt;/h2>
&lt;p>1. Navigate to :8080 in your browser.&lt;/p>
&lt;p> &lt;em>Note&lt;/em>: This is the IP of an EC2 instance that can be found in the EC2 console.&lt;/p>
&lt;p>2. Click the file icon in the top left to open the file tree:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid3-0bae7586-5911-4930-9610-81ce558461ff.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;em>Note&lt;/em>: During the creation of this lab, two things were performed automatically. One is that the CodeCommit repository you visited earlier was cloned to the directory you&amp;rsquo;re looking at in the IDE now. Another is that the framework for a Java web app was added in addition to the single README you saw. This is so that you can see the benefits of CodeGuru without having to work heavily with code.&lt;/p>
&lt;p>In this lab step, you&amp;rsquo;ll push all the new code to the nearly-empty Code Commit repository, to trigger a CodeGuru review.&lt;/p>
&lt;p>3. Open the terminal in your IDE:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid0-b739c537-039a-4254-bcf2-a41e080a7cf8.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>4. In the terminal, add the new files to a Git branch, and commit and push the changes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> /cloudacademy/lab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b trigger_branch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#4070a0">&amp;#34;trigger a CodeGuru analysis by pushing Java code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin trigger_branch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a Git commit that includes all the Java files in a branch called &lt;code>trigger_branch&lt;/code>, so that you can make a pull request in CodeCommit. Since CodeGuru analyses are triggered by pull requests, this is what will trigger a CodeGuru analysis.&lt;/p>
&lt;p>5. Back on the CodeCommit dashboard, click &lt;strong>Create pull request&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-20220404132138-2-4c13b52f-0959-4fd3-a080-f5a83772d0a7.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>6. Set the &lt;strong>Destination&lt;/strong> to &lt;strong>master&lt;/strong> and the &lt;strong>source&lt;/strong> to &lt;strong>trigger_branch&lt;/strong> and click &lt;strong>Compare&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-20220404132208-3-90aa0a6c-0663-4ed4-b349-e7fb1d5ece5d.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>7. Type &lt;em>Trigger a CodeGuru Reviewer Analysis&lt;/em> into the &lt;strong>Title&lt;/strong> field and click &lt;strong>Create pull request&lt;/strong>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid4-5b2c50b8-b6bf-4cd8-a528-6222996b8f35.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>This will create a pull request and trigger a CodeGuru review.&lt;/p>
&lt;h2 id="viewing-amazon-codeguru-comments">Viewing Amazon CodeGuru Comments&lt;/h2>
&lt;p>1. If you weren&amp;rsquo;t automatically brought to the pull request details page after creating your pull request, click &lt;strong>Pull Requests&lt;/strong> beneath &lt;strong>Repositories&lt;/strong> on the left side of the page:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-1ae864f3-e8d9-4741-87e3-e0d05a6245e1.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>2. Click the only available pull request:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-863ba6ee-b974-4dfb-9aa9-d002ff92d050.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>3. Notice the section mentioning CodeGuru Reviewer:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-23ca4bca-5c78-4373-8d1b-89a54963a67a.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>This section will display in each pull request made in any repository associated with CodeGuru. As of the time this lab was released, CodeGuru is still in preview. As the section on your pull request details tab mentions, because it&amp;rsquo;s in preview mode, CodeGuru can take a while to process a pull request. There isn&amp;rsquo;t a way to track its progress, and you currently won&amp;rsquo;t be alerted when that processing begins or finishes.&lt;/p>
&lt;p>4. Select the &lt;strong>Changes&lt;/strong> tab:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/content_engine/image-b25c1c16-40e3-49ae-bdfd-f0203bf8a178.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>5. In the &lt;strong>Go to file&lt;/strong> filter, enter dockerservlet and click the result to navigate to the file:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid1-0bd3607a-2845-47b6-9bb7-497fc1f6653f.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>You may need to scroll down the page to find the DockerServlet.java file changes. This file is known to have CodeGuru Reviewer comments that usually appear a few minutes after creating the pull request.&lt;/p>
&lt;p>6. Scroll down to line 60 to see an example of a comment from CodeGuru Reviewer (If you don&amp;rsquo;t see any comment you may try refreshing the page every minute until one appears):&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/blobid0-b7355e55-55bd-4df7-b479-f6ebf399876d.png"
id="zoom-default"
alt="alt"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>You can then make updates as you see fit, and submit more pull requests to see if you&amp;rsquo;ve addressed CodeGuru&amp;rsquo;s suggestions.&lt;/p></description></item><item><title>Israel - Haifa - Bahai Gardens</title><link>https://romankurnovskii.com/en/photos/22-07-02-israel-haifa-bahai-gardens/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/photos/22-07-02-israel-haifa-bahai-gardens/</guid><description>&lt;p>&lt;a href="https://goo.gl/maps/SAuvkJ9zTV7CcxL56">Google maps Route&lt;/a>&lt;/p>
&lt;style>
.embed-container {
position: relative;
padding-bottom: 56.25%;
height: 0;
overflow: hidden;
max-width: 100%;
}
.embed-container iframe,
.embed-container object,
.embed-container embed {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
}
&lt;/style>
&lt;div class='embed-container'>
&lt;iframe src="#ZgotmplZ" width='600' height='450' style="border:0;" allowfullscreen='' loading='lazy'
referrerpolicy='no-referrer-when-downgrade'>&lt;/iframe>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796728/israel-bahai-gardens-in-haifa-by-roman-kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796728/m%3D900/v2?sig=0c41e86258e6b6a71550b611d641b48268dd79537b147859b3e35e013d988ba8'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796690/israel-bahai-gardens-in-haifa-by-roman-kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796690/m%3D900/v2?sig=746b7d682040cd0047cd24207a64106253801b4e42eae6e4141e46d618ce33bb'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796640/haifa-by-roman-kurnovskii' alt='Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796640/m%3D900/v2?sig=207d41597f8a651da100db717716e0a775c4e23735f5c32df5f0f836bef95c3c'
alt='Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796730/israel-bahai-gardens-in-haifa-by-roman-kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796730/m%3D900/v2?sig=87026ab72f15d63bcd95990613a9c35bbbe76538b89cd420b252243bfb725c02'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796727/Israel-Bahai-Gardens-in-Haifa-by-Roman-Kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796727/m%3D900/v2?sig=21b4ccceca52c0a25b75e5cfa8c2e5fee5691297b12b50e3f0007a558a7c5076'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796729/Israel-Bahai-Gardens-in-Haifa-by-Roman-Kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796729/m%3D900/v2?sig=2a8aad49a849b87b0d643da677d1fde9bdee95421b6500325ef277fdbf796048'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div>
&lt;div class='pixels-photo'>
&lt;a href='https://500px.com/photo/1050796976/israel-bahai-gardens-in-haifa-by-roman-kurnovskii'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com'>
&lt;img src='https://drscdn.500px.org/photo/1050796976/m%3D900/v2?sig=81533e1484b00f7b31f6461389e254427a09c5eb1449323474929094cf4ad31a'
alt='Israel, Bahai Gardens in Haifa by Roman Kurnovskii on 500px.com' />
&lt;/a>
&lt;/div></description></item><item><title>How to Download and Install Linux RHEL 9 for Free</title><link>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</guid><description>&lt;p>Red Hat Enterprise Linux 9 (RHEL 9), codenamed Plow, has gone public (GA). Red Hat announced it on May 18, 2022. It replaced the beta version, which had been in existence since November 3, 2021.&lt;/p>
&lt;p>RHEL 9 is the first few releases in the Red Hat family. It is the first major release since IBM acquired Red Hat in July 2019, and the first major release since abandoning the CentOS project in favor of CentOS Stream, which is now RHEL&amp;rsquo;s predecessor.&lt;/p>
&lt;p>RHEL 9 is the latest major version of RHEL and comes with a 5.14 kernel, lots of new software packages and a host of improvements. It emphasizes security, stability, flexibility and reliability.&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>RHEL 9 ships with new versions of software including Python 3.9. Node.JS 16, GCC 11, Perl 5.32, Ruby 3.0, PHP 8.0, and many more.&lt;/p>
&lt;h2 id="preparing-for-installation">Preparing for installation&lt;/h2>
&lt;h3 id="registration-on-the-red-hat-portal">Registration on the Red Hat portal&lt;/h3>
&lt;p>Red Hat Developer Subscription is a free Red Hat Developer Program offer designed for individual developers who want to take full advantage of Red Hat Enterprise Linux.&lt;/p>
&lt;p>It gives developers access to all versions of Red Hat Enterprise Linux, as well as other Red Hat products such as add-ons, software updates and security bugs.&lt;/p>
&lt;p>First of all, make sure you have an active Red Hat account. If you don&amp;rsquo;t already have an account, go to the &lt;a href="https://access.redhat.com/">Red Hat Customer Portal&lt;/a>, click on &amp;ldquo;Register&amp;rdquo; and fill out your information to create a Red Hat account.
&lt;p class="md__image">
&lt;img
src="img/01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="downloading-the-installation-image">Downloading the installation image&lt;/h3>
&lt;p>After creating a Red Hat account, you can start downloading RHEL 9. To download Red Hat Enterprise Linux 9 &lt;strong>absolutely free&lt;/strong>, go to &lt;a href="https://developers.redhat.com/products/rhel/overview">Red Hat Developer Portal&lt;/a> and log in with your account credentials.
&lt;p class="md__image">
&lt;img
src="img/01-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Then go to the &lt;a href="https://developers.redhat.com/products/rhel/download">download RHEL 9&lt;/a> page and click on the download button shown below.&lt;/p>
&lt;p>I&amp;rsquo;m using a MacBook M1, so I download the RHEL 9 image for the M1 processor aarch64
&lt;p class="md__image">
&lt;img
src="img/01-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="virtual-machine">Virtual machine&lt;/h3>
&lt;p>I use the free &lt;a href="https://mac.getutm.app/">UTM virtual machine&lt;/a> as a virtual machine to install RHEL 9. You can install using &lt;a href="../mac-setup-development/#homebrew">Homebrew&lt;/a> by running the command &lt;code>brew install --cask utm&lt;/code>.&lt;/p>
&lt;h2 id="installing-red-hat-enterprise-linux-9">Installing Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="setting-up-the-utm-virtual-machine">Setting up the UTM virtual machine&lt;/h3>
&lt;p>In UTM click &lt;code>Create a New Virtual Machine&lt;/code> -&amp;gt; Virtualize
&lt;p class="md__image">
&lt;img
src="img/02-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Choose the downloaded RHEL 9 image and click &lt;code>Continue&lt;/code>.
&lt;p class="md__image">
&lt;img
src="img/02-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="main-setup-menu">Main Setup Menu&lt;/h3>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>The marked fields need to be filled in&lt;/p>
&lt;p>Create Root Password
&lt;p class="md__image">
&lt;img
src="img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;strong>User Creation&lt;/strong>. Create the user you want to log in with.
&lt;p class="md__image">
&lt;img
src="img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Connect to Red Hat&lt;/strong>. Here we will use the account created above.&lt;/p>
&lt;p>Here you will enter your account data and click Register.
&lt;p class="md__image">
&lt;img
src="img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Press Done&lt;/p>
&lt;p>Under &lt;strong>Installation Destination&lt;/strong> choose your default drive.&lt;/p>
&lt;p>We can now continue with the installation. A &lt;em>&lt;strong>Begin installation&lt;/strong>&lt;/em> button will appear on the main screen&lt;br>
&lt;p class="md__image">
&lt;img
src="img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After installation is complete, we will have to reboot the system.
&lt;p class="md__image">
&lt;img
src="img/02-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Sometimes rebooting will unload the installation image again. It&amp;rsquo;s necessary to either disable the disk in the installer setup or reboot the UTM.&lt;/p>
&lt;h2 id="running-red-hat-enterprise-linux-9">Running Red Hat Enterprise Linux 9&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Enter your password and see the RHEL 9 desktop
&lt;p class="md__image">
&lt;img
src="img/07-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>To access the applications, click the &lt;strong>Activities&lt;/strong> button in the upper left corner&lt;/p>
&lt;h2 id="configuring-red-hat-enterprise-linux-9">Configuring Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="checking-the-root-user">Checking the ROOT user&lt;/h3>
&lt;p>In a Linux system users belong to different groups which have certain rights. If during the installation process we did not check the checkbox to make the user an administrator, by default he will not be able to install some system programs.&lt;/p>
&lt;p>Exit and log in as root (the same user we created earlier on the main screen). Press &lt;em>&lt;strong>Log out&lt;/strong>&lt;/em>
&lt;p class="md__image">
&lt;img
src="img/07-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Now log in as &lt;strong>root&lt;/strong>. The user may not be listed. Press &lt;strong>Not listed&lt;/strong> and enter the account data.
&lt;p class="md__image">
&lt;img
src="img/07-04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Open terminal and check
&lt;p class="md__image">
&lt;img
src="img/07-05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="configuring-system-settings">Configuring system settings&lt;/h3>
&lt;h4 id="button-to-minimize-the-application">Button to minimize the application&lt;/h4>
&lt;p>The first thing that seems unusual about using the GUI is that there are no buttons to minimize windows
&lt;p class="md__image">
&lt;img
src="img/07-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Install the necessary package&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>yum install gnome-tweaks -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After installation, the Tweaks application will appear. Find it by searching.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>There are many other tweaks in the app as well. We will show you the minimize buttons for the applications.&lt;/p>
&lt;p>Let&amp;rsquo;s go to &lt;strong>Windows titlebars&lt;/strong> and set the Maximize, Minimize options&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="user-access-to-install-applications">User access to install applications&lt;/h4>
&lt;p>To avoid constantly switching to a root user to install applications, we can give the normal user access to install applications.
We will continue to do this as &lt;em>&lt;strong>root&lt;/strong>&lt;/em>.
Open /etc/sudoers and add the user&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo vi /etc/sudoers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add user data to the end of the file. My user name: &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>rhel-user &lt;span style="color:#bb60d5">ALL&lt;/span>&lt;span style="color:#666">=&lt;/span> NOPASSWD: /usr/sbin/synaptic, /usr/bin/software-center, /usr/bin/apt-get, /usr/bin/dnf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-09.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Let&amp;rsquo;s install &lt;em>&lt;strong>Visual Studio Code&lt;/strong>&lt;/em> as a normal user
Installation consists of the following steps:&lt;/p>
&lt;ol>
&lt;li>adding the desired repository. Rights to add the repository (changing the files in the directory is still only for &lt;em>&lt;strong>root&lt;/strong>&lt;/em> user)&lt;/li>
&lt;li>Downloading and installing.&lt;/li>
&lt;/ol>
&lt;p>First step is done as root user
Go to &lt;a href="https://code.visualstudio.com/docs/setup/linux">https://code.visualstudio.com/docs/setup/linux&lt;/a>&lt;/p>
&lt;p>Copy the code and run it in the terminal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh -c &lt;span style="color:#4070a0">&amp;#39;echo -e &amp;#34;[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&amp;#34; &amp;gt; /etc/yum.repos.d/vscode.repo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Switch to user &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>. This can also be done in the terminal.&lt;/li>
&lt;li>Updating the repositories&lt;/li>
&lt;li>Install VSCode&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>su rhel-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnf check-update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dnf install code
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-10.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-11.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-12.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.redhat.com/products/rhel/getting-started">https://developers.redhat.com/products/rhel/getting-started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/sysadmin/install-linux-rhel-9">https://www.redhat.com/sysadmin/install-linux-rhel-9&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Top Docker Commands</title><link>https://romankurnovskii.com/en/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/docker-commands/</guid><description>&lt;h2 id="most-popular">most popular&lt;/h2>
&lt;pre>&lt;code>docker images ## lists the images
docker pull imagename ## Pull an image or a repository from a registry
docker ps -a ## See a list of all containers, even the ones not running
docker build -t imagename . ## Create image using this directory's Dockerfile
docker run -p 4000:80 imagename ## Run &amp;quot;imagename&amp;quot; mapping port 4000 to 80
docker rmi ## removes the image
docker rm ## removes the container
docker stop ## stops the container
docker volume ls ## lists the volumes
docker kill ## kills the container
docker logs ## see logs
docker inspect ## shows all the info of a container
&lt;/code>&lt;/pre>
&lt;h2 id="docker">docker&lt;/h2>
&lt;pre>&lt;code>docker cp ## Copy files/folders between a container and the local filesystem
docker pull imagename ## Pull an image or a repository from a registry
docker build -t imagename . ## Create image using this directory's Dockerfile
docker run -p 4000:80 imagename ## Run &amp;quot;imagename&amp;quot; mapping port 4000 to 80
docker run -d -p 4000:80 imagename ## Same thing, but in detached mode
docker exec -it [container-id] bash ## Enter a running container
docker ps ## See a list of all running containers
docker stop &amp;lt;hash&amp;gt; ## Gracefully stop the specified container
docker ps -a ## See a list of all containers, even the ones not running
docker kill &amp;lt;hash&amp;gt; ## Force shutdown of the specified container
docker rm &amp;lt;hash&amp;gt; ## Remove the specified container from this machine
docker rm -f &amp;lt;hash&amp;gt; ## Remove force specified container from this machine
docker rm $(docker ps -a -q) ## Remove all containers from this machine
docker images -a ## Show all images on this machine
docker rmi &amp;lt;imagename&amp;gt; ## Remove the specified image from this machine
docker rmi $(docker images -q) ## Remove all images from this machine
docker top &amp;lt;container-id&amp;gt; ## Display the running processes of a container
docker logs &amp;lt;container-id&amp;gt; -f ## Live tail a container's logs
docker login ## Log in this CLI session using your Docker credentials
docker tag &amp;lt;image&amp;gt; username/repository:tag ## Tag &amp;lt;image&amp;gt; for upload to registry
docker push username/repository:tag ## Upload tagged image to registry
docker run username/repository:tag ## Run image from a registry
docker system prune ## Remove all unused containers, networks, images (both dangling and unreferenced), and optionally, volumes. (Docker 17.06.1-ce and superior)
docker system prune -a ## Remove all unused containers, networks, images not just dangling ones (Docker 17.06.1-ce and superior)
docker volume prune ## Remove all unused local volumes
docker network prune ## Remove all unused networks
&lt;/code>&lt;/pre>
&lt;h2 id="docker-compose">docker compose&lt;/h2>
&lt;pre>&lt;code>docker-compose up # Create and start containers
docker-compose up -d # Create and start containers in detached mode
docker-compose down # Stop and remove containers, networks, images, and volumes
docker-compose logs # View output from containers
docker-compose restart # Restart all service
docker-compose pull # Pull all image service
docker-compose build # Build all image service
docker-compose config # Validate and view the Compose file
docker-compose scale &amp;lt;service_name&amp;gt;=&amp;lt;replica&amp;gt; # Scale special service(s)
docker-compose top # Display the running processes
docker-compose run -rm -p 2022:22 web bash # Start web service and runs bash as its command, remove old container.
&lt;/code>&lt;/pre>
&lt;h2 id="docker-services">docker services&lt;/h2>
&lt;pre>&lt;code>docker service create &amp;lt;options&amp;gt; &amp;lt;image&amp;gt; &amp;lt;command&amp;gt; # Create new service
docker service inspect --pretty &amp;lt;service_name&amp;gt; # Display detailed information Service(s)
docker service ls # List Services
docker service ps # List the tasks of Services
docker service scale &amp;lt;service_name&amp;gt;=&amp;lt;replica&amp;gt; # Scale special service(s)
docker service update &amp;lt;options&amp;gt; &amp;lt;service_name&amp;gt; # Update Service options
&lt;/code>&lt;/pre>
&lt;h2 id="docker-stack">docker stack&lt;/h2>
&lt;pre>&lt;code>docker stack ls # List all running applications on this Docker host
docker stack deploy -c &amp;lt;composefile&amp;gt; &amp;lt;appname&amp;gt; # Run the specified Compose file
docker stack services &amp;lt;appname&amp;gt; # List the services associated with an app
docker stack ps &amp;lt;appname&amp;gt; # List the running containers associated with an app
docker stack rm &amp;lt;appname&amp;gt; # Tear down an application
&lt;/code>&lt;/pre>
&lt;h2 id="docker-machine">docker machine&lt;/h2>
&lt;pre>&lt;code>docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux)
docker-machine create -d hyperv --hyperv-virtual-switch &amp;quot;myswitch&amp;quot; myvm1 # Win10
docker-machine env myvm1 # View basic information about your node
docker-machine ssh myvm1 &amp;quot;docker node ls&amp;quot; # List the nodes in your swarm
docker-machine ssh myvm1 &amp;quot;docker node inspect &amp;lt;node ID&amp;gt;&amp;quot; # Inspect a node
docker-machine ssh myvm1 &amp;quot;docker swarm join-token -q worker&amp;quot; # View join token
docker-machine ssh myvm1 # Open an SSH session with the VM; type &amp;quot;exit&amp;quot; to end
docker-machine ssh myvm2 &amp;quot;docker swarm leave&amp;quot; # Make the worker leave the swarm
docker-machine ssh myvm1 &amp;quot;docker swarm leave -f&amp;quot; # Make master leave, kill swarm
docker-machine start myvm1 # Start a VM that is currently not running
docker-machine stop $(docker-machine ls -q) # Stop all running VMs
docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images
docker-machine scp docker-compose.yml myvm1:~ # Copy file to node's home dir
docker-machine ssh myvm1 &amp;quot;docker stack deploy -c &amp;lt;file&amp;gt; &amp;lt;app&amp;gt;&amp;quot; # Deploy an app
&lt;/code>&lt;/pre>
&lt;h2 id="options-for-popular-commands">Options for popular commands&lt;/h2>
&lt;h3 id="docker-build">docker build&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/build/">Docs&lt;/a>
Build an image from a Dockerfile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build &lt;span style="color:#666">[&lt;/span>DOCKERFILE PATH&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>Build an image tagged &lt;code>my-org/my-image&lt;/code> where the Dockerfile can be found at
&lt;code>/tmp/Dockerfile&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build -t my-org:my-image -f /tmp/Dockerfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>--file -f&lt;/code> Path where to find the Dockerfile&lt;/li>
&lt;li>&lt;code>--force-rm&lt;/code> Always remove intermediate containers&lt;/li>
&lt;li>&lt;code>--no-cache&lt;/code> Do not use cache when building the image&lt;/li>
&lt;li>&lt;code>--rm&lt;/code> Remove intermediate containers after a successful build (this is
&lt;code>true&lt;/code>) by default&lt;/li>
&lt;li>&lt;code>--tag -t&lt;/code> Name and optionally a tag in the ‘name:tag’ format&lt;/li>
&lt;/ul>
&lt;h3 id="docker-run">docker run&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/run/">Docs&lt;/a>&lt;/p>
&lt;p>Creates and starts a container in one operation. Could be used to execute a
single command as well as start a long-running container.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker run -it ubuntu:latest /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will start a ubuntu container with the entrypoint &lt;code>/bin/bash&lt;/code>. Note that
if you do not have the &lt;code>ubuntu&lt;/code> image downloaded it will download it before
running it.&lt;/p>
&lt;ul>
&lt;li>&lt;code>-it&lt;/code> This will not make the container you started shut down immediately, as
it will create a pseudo-TTY session (&lt;code>-t&lt;/code>) and keep STDIN open (&lt;code>-i&lt;/code>)&lt;/li>
&lt;li>&lt;code>--rm&lt;/code> Automatically remove the container when it exit. Otherwise it will be
stored and visible running &lt;code>docker ps -a&lt;/code>.&lt;/li>
&lt;li>&lt;code>--detach -d&lt;/code> Run container in background and print container ID&lt;/li>
&lt;li>&lt;code>--volume -v&lt;/code> Bind mount a volume. Useful for accessing folders on your local
disk inside your docker container, like configuration files or storage that
should be persisted (database, logs etc.).&lt;/li>
&lt;/ul>
&lt;h3 id="docker-exec">docker exec&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/exec/">Docs&lt;/a>&lt;/p>
&lt;p>Execute a command inside a &lt;strong>running&lt;/strong> container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">exec&lt;/span> &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">exec&lt;/span> &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span> touch /tmp/exec_works
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>--detach -d&lt;/code> Detached mode: run command in the background&lt;/li>
&lt;li>&lt;code>-it&lt;/code> This will not make the container you started shut down immediately, as
it will create a pseudo-TTY session (&lt;code>-t&lt;/code>) and keep STDIN open (&lt;code>-i&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3 id="docker-images">docker images&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/images/">Docs&lt;/a>&lt;/p>
&lt;p>List all downloaded/created images.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker images
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-q&lt;/code> Only show numeric IDs&lt;/li>
&lt;/ul>
&lt;h3 id="docker-inspect">docker inspect&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/inspect">Docs&lt;/a>&lt;/p>
&lt;p>Shows all the info of a container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker inspect &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="docker-logs">docker logs&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/logs/">Docs&lt;/a>&lt;/p>
&lt;p>Gets logs from container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker logs &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>--details&lt;/code> Log extra details&lt;/li>
&lt;li>&lt;code>--follow -f&lt;/code> Follow log output. Do not stop when end of file is reached, but
rather wait for additional data to be appended to the input.&lt;/li>
&lt;li>&lt;code>--timestamps -t&lt;/code> Show timestamps&lt;/li>
&lt;/ul>
&lt;h3 id="docker-ps">docker ps&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/ps/">Docs&lt;/a>&lt;/p>
&lt;p>Shows information about all running containers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>--all -a&lt;/code> Show all containers (default shows just running)&lt;/li>
&lt;li>&lt;code>--filter -f&lt;/code> Filter output based on conditions provided, &lt;code>docker ps -f=&amp;quot;name=&amp;quot;example&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>--quiet -q&lt;/code> Only display numeric IDs&lt;/li>
&lt;/ul>
&lt;h3 id="docker-rmi">docker rmi&lt;/h3>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/rmi/">Docs&lt;/a>&lt;/p>
&lt;p>Remove one or more images.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rmi &lt;span style="color:#666">[&lt;/span>IMAGE ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>--force -f&lt;/code> Force removal of the image&lt;/li>
&lt;/ul>
&lt;h2 id="snippets">Snippets&lt;/h2>
&lt;p>A collection of useful tips and tricks for Docker.&lt;/p>
&lt;h3 id="delete-all-containers">Delete all containers&lt;/h3>
&lt;p>&lt;strong>NOTE:&lt;/strong> This will remove ALL your containers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker container prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>OR, if you&amp;rsquo;re using an older docker client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rm &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker ps -a -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="delete-all-untagged-containers">Delete all untagged containers&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker image prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>OR, if you&amp;rsquo;re using an older docker client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rmi &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker images | grep &lt;span style="color:#4070a0">&amp;#39;^&amp;lt;none&amp;gt;&amp;#39;&lt;/span> | awk &lt;span style="color:#4070a0">&amp;#39;{print $3}&amp;#39;&lt;/span>&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="remove-all-images">Remove all images&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rmi --force &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker images -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="remove-all-docker-images-with-none-tag">Remove all docker images with none tag&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rmi --force &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker images --filter &lt;span style="color:#4070a0">&amp;#34;dangling=true&amp;#34;&lt;/span> -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="see-all-space-docker-take-up">See all space Docker take up&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker system df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="get-ip-address-of-running-container">Get IP address of running container&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker inspect &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span> | grep -wm1 IPAddress | cut -d &lt;span style="color:#4070a0">&amp;#39;&amp;#34;&amp;#39;&lt;/span> -f &lt;span style="color:#40a070">4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="kill-all-running-containers">Kill all running containers&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">kill&lt;/span> &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker ps -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/engine/reference/run/">docs.docker.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/wsargent/docker-cheat-sheet">docker-cheat-sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/blob/master/tools/docker.sh">docker-cheat-sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourabhbajaj.com/mac-setup/Docker/">https://sourabhbajaj.com/mac-setup/Docker/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Tar command Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</guid><description>&lt;h2 id="common-options">Common options&lt;/h2>
&lt;pre>&lt;code>z compress with gzip
c create an archive
u append files which are newer than
the corresponding copy ibn the archive
f filename of the archive
v verbose, display what is inflated or deflated
a unlike of z, determine compression based on file extension
&lt;/code>&lt;/pre>
&lt;h2 id="create-tar-named-archivetar-containing-directory">Create tar named archive.tar containing directory&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cf archive.tar /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="concatenate-files-into-a-single-tar">Concatenate files into a single tar&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar -cf archive.tar /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-the-contents-from-archivetar">Extract the contents from archive.tar&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xf archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-gzip-compressed-tar-file-name-archivetargz">Create a gzip compressed tar file name archive.tar.gz&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar czf archive.tar.gz /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-a-gzip-compressed-tar-file">Extract a gzip compressed tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xzf archive.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-a-tar-file-with-bzip2-compression">Create a tar file with bzip2 compression&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cjf archive.tar.bz2 /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-a-bzip2-compressed-tar-file">Extract a bzip2 compressed tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xjf archive.tar.bz2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="list-content-of-tar-file">List content of tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar -tvf archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to rename files in Python</title><link>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</guid><description>&lt;p>Learn different ways to rename files in Python using the os and pathlib modules.&lt;/p>
&lt;h2 id="osrename">os.rename&lt;/h2>
&lt;p>Rename files with os&lt;/p>
&lt;p>You can use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#666">.&lt;/span>rename(old_name, new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example we can combine it with os.path.splitext() to get the base name and file extension, and then combine it to a new name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file &lt;span style="color:#007020;font-weight:bold">in&lt;/span> os&lt;span style="color:#666">.&lt;/span>listdir():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name, ext &lt;span style="color:#666">=&lt;/span> os&lt;span style="color:#666">.&lt;/span>path&lt;span style="color:#666">.&lt;/span>splitext(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">_new&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>ext&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> os&lt;span style="color:#666">.&lt;/span>rename(file, new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pathlib">pathlib&lt;/h2>
&lt;p>Rename files with pathlib&lt;/p>
&lt;p>The same could be achieved with the pathlib module and&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Path&lt;span style="color:#666">.&lt;/span>rename(new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With a Path object we can access &lt;code>.stem&lt;/code> and &lt;code>.suffix&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pathlib&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file &lt;span style="color:#007020;font-weight:bold">in&lt;/span> os&lt;span style="color:#666">.&lt;/span>listdir():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f &lt;span style="color:#666">=&lt;/span> Path(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>f&lt;span style="color:#666">.&lt;/span>stem&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">_new&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>f&lt;span style="color:#666">.&lt;/span>suffix&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#666">.&lt;/span>rename(new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="shutilmove">shutil.move&lt;/h2>
&lt;p>The shutil module offers a number of high-level operations on files and collections of files. In particular, functions are provided which support file copying and removal. For operations on individual files, see also the os module.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">shutil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>old_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/old_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>new_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/new_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newFileName &lt;span style="color:#666">=&lt;/span> shutil&lt;span style="color:#666">.&lt;/span>move(old_source, new_source)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;New file:&amp;#34;&lt;/span>, newFileName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># New file: /Users/r/Desktop/new_source.txt&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to create a deep clone of an object in JavaScript</title><link>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</guid><description>&lt;p>We can use recursion.
Use &lt;code>Object.assign()&lt;/code> and an empty object ({}) to create a shallow clone of the original.
&lt;code>Use Object.keys()&lt;/code> and &lt;code>Array.prototype.forEach()&lt;/code> to determine which key-value pairs need to be deep cloned.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> deepClone &lt;span style="color:#666">=&lt;/span> obj =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> clone &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">Object&lt;/span>.assign({}, obj);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">Object&lt;/span>.keys(clone).forEach(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key =&amp;gt; (clone[key] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">typeof&lt;/span> obj[key] &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#4070a0">&amp;#39;object&amp;#39;&lt;/span> &lt;span style="color:#666">?&lt;/span> deepClone(obj[key]) &lt;span style="color:#666">:&lt;/span> obj[key])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.isArray(obj) &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> obj.length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> (clone.length &lt;span style="color:#666">=&lt;/span> obj.length) &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.from(clone)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.isArray(obj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.from(obj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> clone;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> a &lt;span style="color:#666">=&lt;/span> { foo&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;bar&amp;#39;&lt;/span>, obj&lt;span style="color:#666">:&lt;/span> { a&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, b&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">2&lt;/span> } };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> b &lt;span style="color:#666">=&lt;/span> deepClone(a); &lt;span style="color:#60a0b0;font-style:italic">// a !== b, a.obj !== b.obj
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Mac Setup 2022</title><link>https://romankurnovskii.com/en/posts/mac-setup-development/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/mac-setup-development/</guid><description>&lt;h2 id="macbook-pro-specification">MacBook Pro Specification&lt;/h2>
&lt;ul>
&lt;li>13-inch&lt;/li>
&lt;li>Apple M1 Pro M1 2020&lt;/li>
&lt;li>16 GB RAM&lt;/li>
&lt;li>512 GB SSD&lt;/li>
&lt;li>QWERTY = English/Hebrew&lt;/li>
&lt;li>macOS Monterey (Update always)&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/mac-monitors.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="homebrew">Homebrew&lt;/h2>
&lt;p>Install &lt;a href="https://brew.sh">Homebrew&lt;/a> as package manager for macOS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## paste in terminal and follow the instructions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/bash -c &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update everything in Homebrew to recent version:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add additional &lt;a href="https://github.com/Homebrew/homebrew-cask-versions">source for casks&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew tap homebrew/cask-versions
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install GUI applications (read more about these in GUI Applications):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install --cask &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> appcleaner &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> all-in-one-messenger &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> anaconda &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> brewmate &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> deepl &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> discord &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> disk-inventory-x &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> docker &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> figma &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> google-chrome &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> google-drive &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> grammarly &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> iterm2 &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> itsycal &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> macx-youtube-downloader &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> mongodb-compass &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> notion &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> obs &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> postman &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> rectangle &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> sublime-text &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> syncthing &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> telegram &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> tor-browser &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> transmission &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> utm &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> viber &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> visual-studio-code &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> vlc &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> yandex-disk &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> zoom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install terminal applications (read more about these in Terminal Applications):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> git &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> jupyterlab &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> ffmpeg &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> nvm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="additional-gui-applications">Additional GUI Applications&lt;/h2>
&lt;h2 id="gui-applications">GUI Applications&lt;/h2>
&lt;h3 id="google-chrome">Google Chrome&lt;/h3>
&lt;p>&lt;a href="https://www.google.com/chrome/">Google Chrome&lt;/a> (web development, web browsing)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Preferences&lt;/p>
&lt;ul>
&lt;li>set default browser&lt;/li>
&lt;li>always show bookmarks&lt;/li>
&lt;li>import bookmarks from previous machine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Chrome Developer Tools&lt;/p>
&lt;ul>
&lt;li>Network -&amp;gt; only &amp;ldquo;Fetch/XHR&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Search Shortcuts. Add Shortucts for different search engines.&lt;/p>
&lt;ul>
&lt;li>chrome://settings/searchEngines&lt;/li>
&lt;li>Yandex, search only in Russia.
&lt;ul>
&lt;li>Shortcut: &lt;code>vv&lt;/code>&lt;/li>
&lt;li>url: &lt;code>https://yandex.ru/{yandex:searchPath}?text=%s&amp;amp;{yandex:referralID}&amp;amp;lr=101443&amp;amp;rstr=-225&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Youtube
&lt;ul>
&lt;li>Shortcut: &lt;code>yy&lt;/code>&lt;/li>
&lt;li>url: &lt;code>https://www.youtube.com/results?search_query=%s&amp;amp;page={startPage?}&amp;amp;utm_source=opensearch&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Chrome Extensions&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/chatgpt-for-search-engine/feeonheemodpkdckaljcjogdncpiiban">ChatGPT for Search Engines&lt;/a> - Show ChatGPT output on every search request&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/deepl-translate-beta-vers/cofdbpoegempjloogbagkncekinflcnj/related?hl=en">DeepL Translate&lt;/a> - AI translator&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/doublesubs/cfmeoknomhdgcbcmgmpbbjiggfboniie">DoubleSubs&lt;/a> - dual subs on youtube/netflix + web translator&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb">Google Translate&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi">React Developer Tools&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj">Pocket&lt;/a> - The easiest, fastest way to capture articles, videos, and more.&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/session-buddy/edacconmaakjimmfgnblocblbcdcpbko">Session Buddy&lt;/a> (Manage Browser Tabs and Bookmarks)&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/grammar-spell-checker-%E2%80%94-l/oldceeleldhonbafppcapldpdifcinji">LanguageTool&lt;/a> (multilingual grammar, style, and spell checker)&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/rss-feed-reader/pnjaodmkngahhkoihejjehlcdlnohgmp">RSS Feed Reader&lt;/a> (Easy to subscribe/unsubscribe to blogs/no need email + iOS/Android)&lt;/li>
&lt;li>&lt;a href="https://inoreader.com">Inoreader&lt;/a> (Easy to subscribe/unsubscribe to blogs/no need email + iOS/Android)&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/search/https%3A%2F%2F30secondsofknowledge.com%2F">30 Seconds of Knowledge&lt;/a> (random code snippet on a new tab)&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa">JSON Formatter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/picture-in-picture-extens/hkgfoiooedgoejojocmhlaklaeopbecg">picture-in-picture&lt;/a> (youtube/video above other screens)&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/visual-css-editor/cibffnhhlfippmhdmdkcfecncoaegdkh">Visual CSS Editor&lt;/a> (Customize any website visually)&lt;/li>
&lt;li>&lt;a href="chrome://extensions/?id=iinmigjlcpeckfihbbfajpkiilfmakff">Squish&lt;/a> - AI-powered summary tool. Turn any body of text into a few sentences with one click.&lt;/li>
&lt;li>&lt;a href="chrome://extensions/?id=ekhagklcjbdpajgpjgmbionohlpdbjgc">Zotero&lt;/a> - Add/sync scientific PDF documents&lt;/li>
&lt;li>&lt;a href="chrome://extensions/?id=cfejhehdhaaeoiahaojjhmjaihjaodcf">Video Downloader Plus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/opus%E2%97%8Fguide/fpnkogmkokahibbdbfoligochippakeb">Opus Guide&lt;/a> (Step-by-step for instructions)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="disk-inventory-x">Disk Inventory X&lt;/h3>
&lt;p>&lt;a href="http://www.derlien.com/">Disk Inventory X&lt;/a> (disk usage utility for macOS)&lt;/p>
&lt;h3 id="docker">Docker&lt;/h3>
&lt;p>&lt;a href="https://www.docker.com/products/docker-desktop">Docker&lt;/a> (Docker, see &lt;a href="https://romankurnovskii.com/docker-macos/">setup&lt;/a>)&lt;/p>
&lt;ul>
&lt;li>used for running databases (e.g. PostgreSQL, MongoDB) in container without cluttering the Mac&lt;/li>
&lt;li>Preferences
&lt;ul>
&lt;li>enable &amp;ldquo;Use Docker Compose&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="firefox">Firefox&lt;/h3>
&lt;p>&lt;a href="https://www.google.com/chrome/">Firefox&lt;/a> (web development)&lt;/p>
&lt;h3 id="visual-studio-code">Visual Studio Code&lt;/h3>
&lt;p>&lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a> (web development IDE)&lt;/p>
&lt;p>&lt;del>&lt;a href="https://github.com/romankurnovskii/romankurnovskii.github.io/tree/main/content/posts/mac-setup-development/files/vscode">Settings&lt;/a>&lt;/del> / Synced&lt;/p>
&lt;h3 id="sublime-text">Sublime Text&lt;/h3>
&lt;p>&lt;a href="https://www.sublimetext.com/">Sublime Text&lt;/a> (editor)&lt;/p>
&lt;h3 id="maccy">Maccy&lt;/h3>
&lt;p>&lt;a href="https://maccy.app/">Maccy&lt;/a> (clipboard manager)&lt;/p>
&lt;ul>
&lt;li>enable &amp;ldquo;Launch at Login&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;h3 id="rectangle">Rectangle&lt;/h3>
&lt;p>Move and resize windows in macOS using keyboard shortcuts or snap areas&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rectangleapp.com">https://rectangleapp.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="obs">OBS&lt;/h3>
&lt;p>&lt;a href="https://obsproject.com/">OBS&lt;/a> (for video recording and live streaming)&lt;/p>
&lt;ul>
&lt;li>for Native Mac Screen recorder
&lt;ul>
&lt;li>Base (Canvas) 2880x1800 (Ratio: 16:10)&lt;/li>
&lt;li>Output 1728x1080
&lt;p class="md__image">
&lt;img
src="img/obs-base-canvas.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;del>### Spotify&lt;/del>
&lt;del>&lt;a href="https://www.spotify.com/">Spotify&lt;/a>&lt;/del>&lt;/p>
&lt;h3 id="soundcloud">Soundcloud&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://soundcloud.com">https://soundcloud.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="syncthing">Syncthing&lt;/h3>
&lt;p>&lt;a href="https://syncthing.net/">syncthing&lt;/a> - Sync folders/files between devices. I use to backup all photos/video from mobile to PC&lt;/p>
&lt;h3 id="transmission">Transmission&lt;/h3>
&lt;p>&lt;a href="https://www.transmissionbt.com/">Transmission&lt;/a> (A torrent client that I use. Very minimal in its UI but very powerful and has all the features that I need)&lt;/p>
&lt;h3 id="utm">UTM&lt;/h3>
&lt;p>&lt;a href="https://mac.getutm.app/">UTM&lt;/a> (Virtual machines UI using QEMU)&lt;/p>
&lt;ul>
&lt;li>download ubuntu for arm, &lt;a href="https://mac.getutm.app/gallery/ubuntu-20-04">doc&lt;/a>&lt;/li>
&lt;li>On error with shared folder: &lt;em>Could not connect: Connection refused&lt;/em> open in browser: &lt;a href="http://127.0.0.1:9843/">http://127.0.0.1:9843/&lt;/a>&lt;/li>
&lt;li>For Debian install &lt;code>spice-webdavd&lt;/code> for shared folder. &lt;a href="https://packages.debian.org/search?keywords=spice-webdavd">https://packages.debian.org/search?keywords=spice-webdavd&lt;/a>, &lt;a href="https://github.com/utmapp/UTM/issues/1204">https://github.com/utmapp/UTM/issues/1204&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo apt install spice-vdagent spice-webdavd -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vlc">VLC&lt;/h3>
&lt;p>&lt;a href="https://www.videolan.org/vlc/">VLC&lt;/a> (video player)&lt;/p>
&lt;ul>
&lt;li>use as default for video files&lt;/li>
&lt;/ul>
&lt;h2 id="terminal-applications">Terminal Applications&lt;/h2>
&lt;h3 id="nvm">nvm&lt;/h3>
&lt;p>&lt;a href="https://github.com/nvm-sh/nvm">nvm&lt;/a> (node version manager)&lt;/p>
&lt;h3 id="jupyterlab">jupyterlab&lt;/h3>
&lt;p>&lt;a href="https://jupyter.org/">jupyterlab&lt;/a> (Jupyter - python development, fast code snippets)&lt;/p>
&lt;ul>
&lt;li>&lt;code>jupyter notebook&lt;/code> - to start jupyter notebook&lt;/li>
&lt;/ul>
&lt;h3 id="ffmpeg">ffmpeg&lt;/h3>
&lt;p>&lt;a href="https://ffmpeg.org/">ffmpeg&lt;/a> (Converting video and audio)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>compress video:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mp4 -c:v libx264 -crf &lt;span style="color:#40a070">23&lt;/span> -preset slow -c:a aac -b:a 192k output.mp4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mp4 output.avi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>convert video to .gif:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>- ffmpeg &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>-i input.mp4 &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>-ss 00:00:00.000 &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>-pix_fmt rgb24 &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>-r &lt;span style="color:#40a070">10&lt;/span> &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>-s 960x540 &lt;span style="color:#4070a0;font-weight:bold">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-t 00:00:10.000 &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span>output.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="nvm-for-nodenpm">NVM for Node/npm&lt;/h2>
&lt;p>The &lt;a href="https://github.com/nvm-sh/nvm">node version manager (NVM)&lt;/a> is used to install and manage multiple Node versions. After you have installed it via Homebrew in a previous step, type the following commands to complete the installation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#4070a0">&amp;#34;source &lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>brew --prefix nvm&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">/nvm.sh&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">source&lt;/span> ~/.zshrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## or alias&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## zshsource&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now install the latest LTS version on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>nvm install &amp;lt;latest LTS version from https://nodejs.org/en/&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Afterward, check whether the installation was successful and whether the &lt;a href="https://www.npmjs.com/">node package manager (npm)&lt;/a> got installed along the way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>node -v &amp;amp;&amp;amp; npm -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update npm to its latest version:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm install -g npm@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And set defaults for npm:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm &lt;span style="color:#007020">set&lt;/span> init-author-name &lt;span style="color:#4070a0">&amp;#34;Roman Kurnovskii&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm &lt;span style="color:#007020">set&lt;/span> init-author-email &lt;span style="color:#4070a0">&amp;#34;you@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm &lt;span style="color:#007020">set&lt;/span> init-author-url &lt;span style="color:#4070a0">&amp;#34;https://romankurnovskii.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are a library author, log in to npm too:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm adduser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it. If you want to list all your Node.js installation, type the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nvm list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to install a newer Node.js version, then type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nvm install &amp;lt;version&amp;gt; --reinstall-packages-from&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>nvm current&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvm use &amp;lt;version&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvm &lt;span style="color:#007020">alias&lt;/span> default &amp;lt;version&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Optionally install &lt;a href="https://yarnpkg.com/">yarn&lt;/a> if you use it as alternative to npm:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm install -g yarn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yarn -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>If you want to list all globally installed packages, run this command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm list -g --depth&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it. You have a running version of Node.js and its package manager.&lt;/p>
&lt;h2 id="oh-my-zsh">OH MY ZSH&lt;/h2>
&lt;p>MacOS already comes with zsh as default shell. Install &lt;a href="https://ohmyz.sh/#install">Oh My Zsh&lt;/a> for an improved (plugins, themes, &amp;hellip;) experience. Oh My Zsh is an open source, community-driven framework for managing your zsh configuration. It comes with a bunch of features out of the box and improves your terminal experience.&lt;/p>
&lt;p>Install:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sh -c &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update everything (e.g. plugins) in Oh My Zsh to recent version:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>omz update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install fonts for themes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew tap homebrew/cask-fonts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install --cask font-hack-nerd-font
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="iterm2">iTerm2&lt;/h2>
&lt;h3 id="install-theme">Install theme&lt;/h3>
&lt;p>&lt;a href="https://github.com/romkatv/powerlevel10k#batteries-included">Theme description&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install romkatv/powerlevel10k/powerlevel10k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#4070a0">&amp;#34;source &lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>brew --prefix&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">/opt/powerlevel10k/powerlevel10k.zsh-theme&amp;#34;&lt;/span> &amp;gt;&amp;gt;~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enable-suggestions">Enable suggestions&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/zsh-users/zsh-autosuggestions &lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">ZSH_CUSTOM&lt;/span>&lt;span style="color:#007020;font-weight:bold">:-&lt;/span>~/.oh-my-zsh/custom&lt;span style="color:#70a0d0">}&lt;/span>/plugins/zsh-autosuggestions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#4070a0">&amp;#34;plugins=(zsh-autosuggestions)&amp;#34;&lt;/span> &amp;gt;&amp;gt;~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open new tab(CMD+T)/restart &lt;code>iTerm&lt;/code> to proceed with theme setup.&lt;/p>
&lt;h2 id="terminal-script-and-aliases">Terminal Script and Aliases&lt;/h2>
&lt;p>Update &lt;code>.zprofile&lt;/code>. The changes will take effect after restarting the terminal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vi ~/.zprofile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="automatic-software-updates">Automatic software updates&lt;/h3>
&lt;p>Add script to zprofile that updates everything:&lt;/p>
&lt;ol>
&lt;li>Update, upgrade all and cleanup&lt;/li>
&lt;li>softwareupdate - system software update tool&lt;/li>
&lt;/ol>
&lt;p>We can execute this command on startup, but i prefer handle it. When I kick of &lt;code>upd&lt;/code> command in terminal, it will update everything I need:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">alias&lt;/span> &lt;span style="color:#bb60d5">upd&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;brew update; brew upgrade; brew cu -a --cleanup -y -v; brew cleanup; softwareupdate -i -a; i&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add aliases to the latest versions pip &amp;amp; python&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># А &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># ❯ which pip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># /opt/homebrew/bin/pip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># ❯ which python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># /opt/homebrew/anaconda3/bin//python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># snippet creates python virtual env in current folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">alias&lt;/span> &lt;span style="color:#bb60d5">penv&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;python -m venv venv &amp;amp;&amp;amp; source ./venv/bin/activate &amp;amp;&amp;amp; pip install --upgrade pip &amp;amp;&amp;amp; echo &amp;#34;\n&amp;#34; &amp;gt;&amp;gt; requirements.txt &amp;amp;&amp;amp; pip install -r requirements.txt &amp;amp;&amp;amp; pip freeze &amp;gt; requirements_freeze.txt &amp;amp;&amp;amp; echo &amp;#34;venv/&amp;#34; &amp;gt;&amp;gt; .gitignore&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">alias&lt;/span> &lt;span style="color:#bb60d5">jp&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;jupyter notebook &lt;/span>&lt;span style="color:#bb60d5">$@&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="clean-space">Clean space&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">alias&lt;/span> &lt;span style="color:#bb60d5">clean&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;brew cleanup --prune=all; rm -rf ~/Library/Caches&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="links">Links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.robinwieruch.de/mac-setup-web-development/">https://www.robinwieruch.de/mac-setup-web-development/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourabhbajaj.com/mac-setup/iTerm/ack.html">https://sourabhbajaj.com/mac-setup/iTerm/ack.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.engineeringwithutsav.com/blog/spice-up-your-macos-terminal">https://www.engineeringwithutsav.com/blog/spice-up-your-macos-terminal&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AWS Amplify - project setup with Github</title><link>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-setup-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-setup-project/</guid><description>&lt;h2 id="preface">Preface&lt;/h2>
&lt;ul>
&lt;li>For Amplify project I use &lt;strong>eu-west&lt;/strong> region&lt;/li>
&lt;li>github repo has to be ready private or public&lt;/li>
&lt;/ul>
&lt;h2 id="new-project">New project&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>goto &lt;a href="https://eu-west-1.console.aws.amazon.com/amplify/home?region=eu-west-1#/">https://eu-west-1.console.aws.amazon.com/amplify/home?region=eu-west-1#/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New app → Host web app → Github&lt;/p>
&lt;ol>
&lt;li>Add access to github repo
&lt;p class="md__image">
&lt;img
src="../img/github-setup-access.png"
id="zoom-default"
alt="github-setup-access"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;li>Select repository
&lt;p class="md__image">
&lt;img
src="../img/github-setup-access-select-repo.png"
id="zoom-default"
alt="github-setup-access"
loading="lazy"
/>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Come back to Amplify and try again to choose repo
&lt;p class="md__image">
&lt;img
src="../img/amplify-setup-access-select-repo.png"
id="zoom-default"
alt="github-setup-access"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click &lt;strong>Next&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Update &lt;strong>amplify.yml&lt;/strong> for &lt;em>node.js&lt;/em> project&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#062873;font-weight:bold">version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">frontend&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">phases&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">preBuild&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">commands&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- yarn install&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">build&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">commands&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- yarn run build&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">artifacts&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">baseDirectory&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>build&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">files&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#4070a0">&amp;#39;**/*&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">cache&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">paths&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- node_modules/**/*&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-yml.jpg"
id="zoom-default"
alt="amplify-yml"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="5">
&lt;li>Next → Save and deploy&lt;/li>
&lt;/ol>
&lt;p>Amplify starts to build project and generates project url.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-build-process.png"
id="zoom-default"
alt="amplify-build-process"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Once build done you can open project.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-success-url.png"
id="zoom-default"
alt="amplify-success-url"
loading="lazy"
/>
&lt;/p>
&lt;/p></description></item><item><title>AWS Amplify - Set custom domain</title><link>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-custom-domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-custom-domain/</guid><description>&lt;p>You can use any custom domain with Amplify and no need register it with &lt;a href="https://romankurnovskii.com/en/categories/route-53/">AWS Route53&lt;/a>.&lt;/p>
&lt;p>I am adding domain at the &lt;em>setup app stage&lt;/em>. Another way is from console.&lt;/p>
&lt;ol>
&lt;li>Click &lt;strong>Domain management&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-add-custom-domain.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>or&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-add-custom-domain-01.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="2">
&lt;li>Add domain&lt;/li>
&lt;li>Write domain name -&amp;gt; Configure domain -&amp;gt; Save&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-add-custom-domain-02.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="4">
&lt;li>Nest starts SSL configuration process. Amplify provides with DNS data that you need to write in the domain register account.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-add-custom-domain-ssl-config.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="5">
&lt;li>
&lt;p>Once SSL creation starts you can get domain data&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Action -&amp;gt; View DNS records&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-add-custom-domain-ssl-config-start.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="7">
&lt;li>Copy provided data (DNS records) and then set it in the domain registrar panel.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-dns-records.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="8">
&lt;li>Go to domain registrar&lt;/li>
&lt;li>Set &lt;em>dns servers&lt;/em> to default&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/domain-registrar-dns-default.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="10">
&lt;li>In my case panel looks like this:&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/set-cname-01.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="../img/set-cname-02.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="11">
&lt;li>Save&lt;/li>
&lt;li>Go to amplify and check for updates. Amplify checks DNS server and if everything is correct (CNAME set) it will proceed to the next step.&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/amplify-domain-activation-stage.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>SSL configuration passed, waiting up to 30 min for domain activation&lt;/p>
&lt;ol start="13">
&lt;li>Once done we can check url: &lt;a href="https://cloud-exam-prepare.com">https://cloud-exam-prepare.com&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../img/cloud-exam-prepare-url.png"
id="zoom-default"
alt="amplify-add-custom-domain"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Check url: &lt;a href="https://cloud-exam-prepare.com/">cloud-exam-prepare.com&lt;/a>&lt;/p>
&lt;p>&lt;strong>Resources:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/amplify/latest/userguide/to-add-a-custom-domain-managed-by-a-third-party-dns-provider.html">https://docs.aws.amazon.com/amplify/latest/userguide/to-add-a-custom-domain-managed-by-a-third-party-dns-provider.html&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Set Up Proxy on Amazon EC2 Ubuntu</title><link>https://romankurnovskii.com/en/posts/setup-proxy-server-ec2-ubuntu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/setup-proxy-server-ec2-ubuntu/</guid><description>&lt;h2 id="1-setting-up-the-ec2-instance">1. Setting up the EC2 Instance&lt;/h2>
&lt;h2 id="launch-an-ec2-instance">Launch an EC2 Instance&lt;/h2>
&lt;ol>
&lt;li>Choose an Ubuntu Server image.&lt;/li>
&lt;li>Select an appropriate instance type.&lt;/li>
&lt;li>Configure instance details, storage, and security group. Ensure your security group allows inbound traffic on the ports you plan to use for your proxy (typically port 3128 for Squid).&lt;/li>
&lt;li>Review and launch the instance.&lt;/li>
&lt;li>Create and download a key pair for SSH access. (optional, can connect through AWS console later)&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./assets/ec2-security-group-inbound-setup.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="2-connect-to-your-instance">2. Connect to Your Instance&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Use SSH client with the instance&amp;rsquo;s public DNS/IP and the key pair:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ssh -i /path/to/your-key.pem ubuntu@your-instance-public-dns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Or through AWS Session Manager&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="installing-and-configuring-squid">Installing and Configuring Squid&lt;/h2>
&lt;h3 id="install-squid">Install Squid&lt;/h3>
&lt;ol>
&lt;li>Update package lists: sudo apt-get update&lt;/li>
&lt;li>Install Squid: sudo apt-get install squid apache2-utils&lt;/li>
&lt;/ol>
&lt;h3 id="configure-squid-with-authentication">Configure Squid with Authentication&lt;/h3>
&lt;ul>
&lt;li>Open the Squid configuration file: sudo nano /etc/squid/squid.conf&lt;/li>
&lt;li>Configure basic settings:
&lt;ul>
&lt;li>
&lt;p>Set http_port to your desired port, typically 3128.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add the following lines for basic authentication:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auth_param basic realm proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> acl authenticated proxy_auth REQUIRED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http_access allow authenticated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create a username and password&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Use &lt;code>htpasswd&lt;/code> to create an encrypted password file and user&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>apt install apache2-utils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo htpasswd -c /etc/squid/passwd your_username
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>You&amp;rsquo;ll be prompted to enter and confirm a password for your_username.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Save and close the file.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Restart Squid:
&lt;ul>
&lt;li>Apply configuration changes: &lt;code>sudo systemctl restart squid&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="testing-the-proxy">Testing the Proxy&lt;/h3>
&lt;ul>
&lt;li>From a client machine, try accessing the internet or a specific website while the proxy settings are enabled.&lt;/li>
&lt;li>You should be able to browse the internet through your EC2 proxy.&lt;/li>
&lt;/ul></description></item></channel></rss>